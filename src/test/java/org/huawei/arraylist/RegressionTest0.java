package org.huawei.arraylist;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.constant.ConstantDesc[] constantDescArray5 = new java.lang.constant.ConstantDesc[] { 0, 0L, 100.0f, (-1.0d), 0 };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList6 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList6, constantDescArray5);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList6.replaceAll(constantDescUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = constantDescList17.containsAll(constantDescCollection22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.util.ArrayList<java.util.AbstractList<java.lang.constant.ConstantDesc>> constantDescListList0 = new java.util.ArrayList<java.util.AbstractList<java.lang.constant.ConstantDesc>>();
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc22 = constantDescList17.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc53 = constantDescList31.set((int) ' ', (java.lang.constant.ConstantDesc) 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        int int2 = constantDescList0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList0.set(3, (java.lang.constant.ConstantDesc) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray4 = constantDescList3.toArray();
        int int5 = constantDescList3.size();
        int int6 = constantDescList0.lastIndexOf((Object) int5);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList0.replaceAll(constantDescUnaryOperator7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.lang.constant.ConstantDesc[] constantDescArray7 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList8, constantDescArray7);
        Object obj10 = constantDescList8.clone();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor12 = constantDescList8.listIterator(4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList15 = constantDescList8.subList((int) '4', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(52) > toIndex(-1)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj10), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(constantDescItor12);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor22 = constantDescList17.listIterator((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc24 = constantDescList17.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescItor22);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.util.ArrayList<java.lang.constant.Constable> constableList0 = new java.util.ArrayList<java.lang.constant.Constable>();
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.util.ArrayList<Object> objList0 = new java.util.ArrayList<Object>();
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection2 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = constantDescList1.removeAll(constantDescCollection2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList1.remove((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList27.parallelStream();
        Object obj29 = constantDescList27.clone();
        boolean boolean30 = constantDescList19.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList27.add((int) (short) 100, (java.lang.constant.ConstantDesc) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        java.lang.constant.Constable[] constableArray77 = new java.lang.constant.Constable[] { 4 };
        java.lang.constant.Constable[] constableArray78 = constantDescList67.toArray(constableArray77);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(constableArray77);
        org.junit.Assert.assertNotNull(constableArray78);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        int int73 = constantDescList12.size();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList12.add((int) (byte) 100, (java.lang.constant.ConstantDesc) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 27");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 27 + "'", int73 == 27);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList9.replaceAll(constantDescUnaryOperator13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc constantDesc24 = constantDescList17.set((int) (short) 1, (java.lang.constant.ConstantDesc) 1.0d);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.replaceAll(constantDescUnaryOperator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertEquals("'" + constantDesc24 + "' != '" + 1 + "'", constantDesc24, 1);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        boolean boolean4 = constantDescList1.isEmpty();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.util.ArrayList<java.util.Collection<java.lang.constant.ConstantDesc>> constantDescCollectionList0 = new java.util.ArrayList<java.util.Collection<java.lang.constant.ConstantDesc>>();
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray86 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList87 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList87, constantDescArray86);
        int int90 = constantDescList87.lastIndexOf((Object) 1L);
        constantDescList87.ensureCapacity(10);
        boolean boolean93 = constantDescList77.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList87);
        boolean boolean95 = constantDescList87.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList87.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList97 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList87);
        boolean boolean98 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList97);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(constantDescArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc42 = constantDescList17.remove((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList1.set((int) (short) -1, (java.lang.constant.ConstantDesc) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Class<?> wildcardClass1 = constantDescList0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc3 = constantDescList1.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        constantDescList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.set(8, (java.lang.constant.ConstantDesc) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 8 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray4 = constantDescList3.toArray();
        int int5 = constantDescList3.size();
        int int6 = constantDescList0.lastIndexOf((Object) int5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor8 = constantDescList0.listIterator((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        int int23 = constantDescList1.lastIndexOf((Object) constantDescList19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc26 = constantDescList1.set((int) (short) 100, (java.lang.constant.ConstantDesc) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc9 = constantDescList2.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        Object[] objArray3 = constantDescList1.toArray();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList51.add(1, (java.lang.constant.ConstantDesc) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        Class<?> wildcardClass4 = constantDescList1.getClass();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        constantDescList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc25 = constantDescList17.get(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 8 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        constantDescList1.trimToSize();
        Class<?> wildcardClass3 = constantDescList1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        String str78 = constantDescList76.toString();
        java.lang.constant.ConstantDesc constantDesc81 = constantDescList76.set(0, (java.lang.constant.ConstantDesc) 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = constantDescList31.addAll((int) (short) 100, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str78, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals("'" + constantDesc81 + "' != '" + 10 + "'", constantDesc81, 10);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList5 = constantDescList1.subList((-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray19 = constantDescList18.toArray();
        int int20 = constantDescList18.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList23 = constantDescList18.subList((int) (short) 0, (int) (byte) 0);
        boolean boolean24 = constantDescList9.contains((Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc26 = constantDescList9.remove((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constantDescList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        boolean boolean51 = constantDescList31.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        constantDescList69.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc78 = constantDescList69.get(10);
        constantDescList69.clear();
        int int80 = constantDescList31.indexOf((Object) constantDescList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList83 = constantDescList69.subList(16, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + constantDesc78 + "' != '" + 0L + "'", constantDesc78, 0L);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList17.spliterator();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean73 = constantDescList54.add((java.lang.constant.ConstantDesc) "hi!");
        boolean boolean74 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        Class<?> wildcardClass75 = constantDescList17.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        constantDescList9.ensureCapacity((int) (short) 0);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        java.lang.constant.ConstantDesc[] constantDescArray49 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50, constantDescArray49);
        String str52 = constantDescList50.toString();
        java.lang.constant.ConstantDesc[] constantDescArray61 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62, constantDescArray61);
        Object obj64 = constantDescList62.clone();
        Object[] objArray65 = new Object[] { 'a', constantDescList62 };
        Object[] objArray66 = constantDescList50.toArray(objArray65);
        int int67 = constantDescList50.size();
        boolean boolean68 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream71 = constantDescList70.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray82 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83, constantDescArray82);
        int int86 = constantDescList83.lastIndexOf((Object) 1L);
        constantDescList83.ensureCapacity(10);
        boolean boolean89 = constantDescList73.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83);
        boolean boolean90 = constantDescList70.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean91 = constantDescList31.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean92 = constantDescList9.equals((Object) constantDescList73);
        java.lang.constant.ConstantDesc constantDesc94 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList73.add((int) (byte) 10, constantDesc94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(constantDescArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str52, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj64), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 16 + "'", int67 == 16);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(constantDescStream71);
        org.junit.Assert.assertNotNull(constantDescArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray4 = constantDescList3.toArray();
        int int5 = constantDescList3.size();
        int int6 = constantDescList0.lastIndexOf((Object) int5);
        Class<?> wildcardClass7 = constantDescList0.getClass();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList27.parallelStream();
        Object obj29 = constantDescList27.clone();
        boolean boolean30 = constantDescList19.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList33 = constantDescList27.subList((-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal Capacity: -1");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.util.ArrayList<java.util.ListIterator<java.lang.constant.ConstantDesc>> constantDescItorList0 = new java.util.ArrayList<java.util.ListIterator<java.lang.constant.ConstantDesc>>();
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection41 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean42 = constantDescList17.removeAll(constantDescCollection41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        constantDescList17.ensureCapacity((int) (byte) 100);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor57 = constantDescList51.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor59 = constantDescList51.listIterator(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescItor57);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray19 = constantDescList18.toArray();
        int int20 = constantDescList18.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList23 = constantDescList18.subList((int) (short) 0, (int) (byte) 0);
        boolean boolean24 = constantDescList9.contains((Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc26 = constantDescList9.get(27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 27 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constantDescList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) '#');
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator2 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.replaceAll(constantDescUnaryOperator2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        Object obj3 = constantDescList1.clone();
        Object[] objArray4 = constantDescList1.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        String str25 = constantDescList23.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList23.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator27 = constantDescList23.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        int int40 = constantDescList37.lastIndexOf((Object) 1L);
        constantDescList37.ensureCapacity(10);
        Object obj43 = constantDescList37.clone();
        boolean boolean44 = constantDescList23.contains((Object) constantDescList37);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = constantDescList1.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj3), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str25, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream26);
        org.junit.Assert.assertNotNull(constantDescSpliterator27);
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj43), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator73 = constantDescList12.spliterator();
        constantDescList12.trimToSize();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator73);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str2 = constantDescList1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList5 = constantDescList1.subList((int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        Object[] objArray18 = constantDescList9.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor20 = constantDescList9.listIterator((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        Object[] objArray18 = constantDescList11.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray27 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList28, constantDescArray27);
        int int31 = constantDescList28.lastIndexOf((Object) 1L);
        constantDescList28.ensureCapacity(10);
        Object obj34 = constantDescList28.clone();
        constantDescList28.ensureCapacity(4);
        boolean boolean37 = constantDescList11.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList28);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj34), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        java.lang.constant.ConstantDesc[] constantDescArray64 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65, constantDescArray64);
        String str67 = constantDescList65.toString();
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        Object obj79 = constantDescList77.clone();
        Object[] objArray80 = new Object[] { 'a', constantDescList77 };
        Object[] objArray81 = constantDescList65.toArray(objArray80);
        int int82 = constantDescList65.size();
        boolean boolean83 = constantDescList46.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj84 = constantDescList65.clone();
        boolean boolean85 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor87 = constantDescList17.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(constantDescArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str67, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82 == 16);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        Object[] objArray39 = constantDescList31.toArray();
        boolean boolean41 = constantDescList31.add((java.lang.constant.ConstantDesc) 27);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        java.lang.constant.ConstantDesc constantDesc22 = null;
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList19.set(0, constantDesc22);
        Object[] objArray24 = constantDescList19.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList25.listIterator();
        boolean boolean27 = constantDescList19.remove((Object) constantDescList25);
        boolean boolean28 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor30 = constantDescList9.listIterator(3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 0L + "'", constantDesc23, 0L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        Class<?> wildcardClass41 = obj40.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.AbstractCollection<java.lang.constant.ConstantDesc>[] constantDescCollectionArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractCollection<java.lang.constant.ConstantDesc>[] constantDescCollectionArray52 = constantDescList31.toArray(constantDescCollectionArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object[] objArray40 = constantDescList17.toArray();
        boolean boolean41 = constantDescList17.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc43 = constantDescList17.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        int int36 = constantDescList33.lastIndexOf((Object) 1L);
        constantDescList33.ensureCapacity(10);
        boolean boolean39 = constantDescList23.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean40 = constantDescList11.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
        Object[] objArray41 = constantDescList23.toArray();
        Class<?> wildcardClass42 = constantDescList23.getClass();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.replaceAll(constantDescUnaryOperator25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        int int3 = constantDescList1.size();
        java.lang.constant.ConstantDesc[] constantDescArray20 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21, constantDescArray20);
        String str23 = constantDescList21.toString();
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        Object obj35 = constantDescList33.clone();
        Object[] objArray36 = new Object[] { 'a', constantDescList33 };
        Object[] objArray37 = constantDescList21.toArray(objArray36);
        int int38 = constantDescList21.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor39 = constantDescList21.listIterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream42 = constantDescList41.parallelStream();
        Object obj43 = constantDescList41.clone();
        boolean boolean44 = constantDescList21.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41);
        boolean boolean45 = constantDescList1.remove((Object) constantDescList21);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.add((-1), (java.lang.constant.ConstantDesc) 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str23, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj35), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 16 + "'", int38 == 16);
        org.junit.Assert.assertNotNull(constantDescItor39);
        org.junit.Assert.assertNotNull(constantDescStream42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        int int2 = constantDescList0.size();
        constantDescList0.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList6 = constantDescList0.subList((-1), (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        java.lang.constant.ConstantDesc[] constantDescArray73 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList74 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74, constantDescArray73);
        String str76 = constantDescList74.toString();
        java.lang.constant.ConstantDesc[] constantDescArray85 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList86 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList86, constantDescArray85);
        Object obj88 = constantDescList86.clone();
        Object[] objArray89 = new Object[] { 'a', constantDescList86 };
        Object[] objArray90 = constantDescList74.toArray(objArray89);
        int int91 = constantDescList74.size();
        boolean boolean92 = constantDescList55.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream93 = constantDescList74.parallelStream();
        constantDescList74.clear();
        boolean boolean96 = constantDescList74.contains((Object) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = constantDescList17.addAll((int) (short) -1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(constantDescArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str76, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj88), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 16 + "'", int91 == 16);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(constantDescStream93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        Object obj3 = constantDescList1.clone();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.replaceAll(constantDescUnaryOperator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj3), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "[]");
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        boolean boolean51 = constantDescList31.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        constantDescList69.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc78 = constantDescList69.get(10);
        constantDescList69.clear();
        int int80 = constantDescList31.indexOf((Object) constantDescList69);
        constantDescList69.add(0, (java.lang.constant.ConstantDesc) 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc85 = constantDescList69.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + constantDesc78 + "' != '" + 0L + "'", constantDesc78, 0L);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor12 = constantDescList8.listIterator(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray34 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList35 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35, constantDescArray34);
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean72 = constantDescList35.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor74 = constantDescList54.listIterator((int) (byte) 0);
        Object obj75 = constantDescList54.clone();
        boolean boolean76 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(constantDescItor74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj75), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList12.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc75 = constantDescList12.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 27");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor73);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Class<?> wildcardClass50 = constantDescList12.getClass();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor22 = constantDescList17.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList24 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList24.stream();
        Object[] objArray26 = constantDescList24.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream29 = constantDescList28.stream();
        int int30 = constantDescList24.indexOf((Object) constantDescList28);
        boolean boolean31 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList24);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator32 = constantDescList24.spliterator();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescItor22);
        org.junit.Assert.assertNotNull(constantDescStream25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(constantDescStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator32);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal Capacity: -1");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList12.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList12.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList69.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator73 = constantDescList69.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList69.parallelStream();
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 0.0d);
        boolean boolean77 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69);
        java.util.AbstractList[] abstractListArray79 = new java.util.AbstractList[0];
        @SuppressWarnings("unchecked")
        java.util.AbstractList<java.lang.constant.ConstantDesc>[] constantDescListArray80 = (java.util.AbstractList<java.lang.constant.ConstantDesc>[]) abstractListArray79;
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractList<java.lang.constant.ConstantDesc>[] constantDescListArray81 = constantDescList69.toArray(constantDescListArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.util.AbstractList");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertNotNull(constantDescSpliterator73);
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(abstractListArray79);
        org.junit.Assert.assertNotNull(constantDescListArray80);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        Object obj2 = constantDescList1.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList1.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        constantDescList1.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator3 = constantDescList1.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList1.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescSpliterator3);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        constantDescList1.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator3 = constantDescList1.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor5 = constantDescList1.listIterator((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescSpliterator3);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor56 = constantDescList51.listIterator(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList12.listIterator();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = constantDescList12.addAll(constantDescCollection74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor73);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList18.get((int) (short) 0);
        Class<?> wildcardClass27 = constantDesc26.getClass();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 10 + "'", constantDesc26, 10);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList4.add((int) '#', (java.lang.constant.ConstantDesc) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc constantDesc22 = constantDescList17.set(0, (java.lang.constant.ConstantDesc) 10);
        Object[] objArray23 = constantDescList17.toArray();
        Class<?> wildcardClass24 = constantDescList17.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals("'" + constantDesc22 + "' != '" + 10 + "'", constantDesc22, 10);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor19 = constantDescList1.listIterator(0);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(constantDescItor19);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray69 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70, constantDescArray69);
        int int73 = constantDescList70.lastIndexOf((Object) 1L);
        constantDescList70.ensureCapacity(10);
        boolean boolean76 = constantDescList60.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70);
        Object[] objArray77 = constantDescList70.toArray();
        boolean boolean78 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(constantDescArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = constantDescList31.addAll(constantDescCollection56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        Object obj20 = null;
        int int21 = constantDescList11.indexOf(obj20);
        java.lang.constant.ConstantDesc[] constantDescArray23 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList24 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList24, constantDescArray23);
        java.lang.constant.ConstantDesc constantDesc27 = null;
        java.lang.constant.ConstantDesc constantDesc28 = constantDescList24.set(0, constantDesc27);
        Object[] objArray29 = constantDescList24.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList30 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor31 = constantDescList30.listIterator();
        boolean boolean32 = constantDescList24.remove((Object) constantDescList30);
        java.lang.constant.ConstantDesc[] constantDescArray49 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50, constantDescArray49);
        String str52 = constantDescList50.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream53 = constantDescList50.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator54 = constantDescList50.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        Object obj70 = constantDescList64.clone();
        boolean boolean71 = constantDescList50.contains((Object) constantDescList64);
        boolean boolean72 = constantDescList30.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        java.lang.constant.ConstantDesc constantDesc75 = constantDescList50.set(4, (java.lang.constant.ConstantDesc) 1);
        boolean boolean76 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + constantDesc28 + "' != '" + 0L + "'", constantDesc28, 0L);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(constantDescArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str52, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream53);
        org.junit.Assert.assertNotNull(constantDescSpliterator54);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + constantDesc75 + "' != '" + 0.0f + "'", constantDesc75, 0.0f);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        java.util.ArrayList<String> strList0 = new java.util.ArrayList<String>();
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.util.ArrayList<java.util.List<java.lang.constant.ConstantDesc>[]> constantDescListArrayList1 = new java.util.ArrayList<java.util.List<java.lang.constant.ConstantDesc>[]>(0);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList6 = constantDescList0.subList((int) (byte) 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList12.listIterator();
        Object obj74 = constantDescList12.clone();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList12.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream75);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        java.lang.constant.ConstantDesc[] constantDescArray64 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65, constantDescArray64);
        String str67 = constantDescList65.toString();
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        Object obj79 = constantDescList77.clone();
        Object[] objArray80 = new Object[] { 'a', constantDescList77 };
        Object[] objArray81 = constantDescList65.toArray(objArray80);
        int int82 = constantDescList65.size();
        boolean boolean83 = constantDescList46.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj84 = constantDescList65.clone();
        boolean boolean85 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj86 = constantDescList17.clone();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor87 = constantDescList17.iterator();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add(100, (java.lang.constant.ConstantDesc) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(constantDescArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str67, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82 == 16);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescItor87);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray22 = constantDescList21.toArray();
        boolean boolean23 = constantDescList21.isEmpty();
        int int24 = constantDescList21.size();
        boolean boolean25 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get(8);
        java.lang.constant.ConstantDesc[] constantDescArray40 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41, constantDescArray40);
        java.lang.constant.ConstantDesc[] constantDescArray59 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60, constantDescArray59);
        String str62 = constantDescList60.toString();
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        Object obj74 = constantDescList72.clone();
        Object[] objArray75 = new Object[] { 'a', constantDescList72 };
        Object[] objArray76 = constantDescList60.toArray(objArray75);
        int int77 = constantDescList60.size();
        boolean boolean78 = constantDescList41.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream79 = constantDescList60.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean80 = constantDescList17.addAll((int) '4', (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 0 + "'", constantDesc27, 0);
        org.junit.Assert.assertNotNull(constantDescArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(constantDescArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str62, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 16 + "'", int77 == 16);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(constantDescStream79);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList4 = constantDescList1.subList((int) (short) 1, 3);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 3");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        Object[] objArray39 = constantDescList31.toArray();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc42 = constantDescList31.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream40);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc23 = constantDescList1.get((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray22 = constantDescList21.toArray();
        boolean boolean23 = constantDescList21.isEmpty();
        int int24 = constantDescList21.size();
        boolean boolean25 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get(8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc29 = constantDescList17.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 0 + "'", constantDesc27, 0);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList16 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray25 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26, constantDescArray25);
        int int29 = constantDescList26.lastIndexOf((Object) 1L);
        constantDescList26.ensureCapacity(10);
        boolean boolean32 = constantDescList16.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        Object[] objArray33 = constantDescList26.toArray();
        boolean boolean34 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        java.lang.constant.ConstantDesc[] constantDescArray51 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList52 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList52, constantDescArray51);
        String str54 = constantDescList52.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList52.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator56 = constantDescList52.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        Object obj72 = constantDescList66.clone();
        boolean boolean73 = constantDescList52.contains((Object) constantDescList66);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator74 = constantDescList52.spliterator();
        int int75 = constantDescList9.lastIndexOf((Object) constantDescSpliterator74);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(constantDescArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str54, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertNotNull(constantDescSpliterator56);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj72), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        java.lang.constant.ConstantDesc[] constantDescArray57 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58, constantDescArray57);
        String str60 = constantDescList58.toString();
        java.lang.constant.ConstantDesc[] constantDescArray69 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70, constantDescArray69);
        Object obj72 = constantDescList70.clone();
        Object[] objArray73 = new Object[] { 'a', constantDescList70 };
        Object[] objArray74 = constantDescList58.toArray(objArray73);
        int int75 = constantDescList58.size();
        boolean boolean76 = constantDescList39.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray78 = constantDescList77.toArray();
        boolean boolean79 = constantDescList77.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.List[] listArray82 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray83 = (java.util.List<java.lang.constant.ConstantDesc>[]) listArray82;
        constantDescListArray83[0] = constantDescList19;
        constantDescListArray83[1] = constantDescList26;
        constantDescListArray83[2] = constantDescList58;
        constantDescListArray83[3] = constantDescList77;
        constantDescListArray83[4] = constantDescList80;
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray94 = constantDescList1.toArray(constantDescListArray83);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.add((int) (short) 10, (java.lang.constant.ConstantDesc) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(constantDescArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str60, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 16 + "'", int75 == 16);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(listArray82);
        org.junit.Assert.assertNotNull(constantDescListArray83);
        org.junit.Assert.assertNotNull(constantDescListArray94);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream38 = constantDescList37.parallelStream();
        Object obj39 = constantDescList37.clone();
        boolean boolean40 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc43 = constantDescList17.set((int) (short) -1, (java.lang.constant.ConstantDesc) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(constantDescStream38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        constantDescList31.clear();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator52 = constantDescList31.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream53 = constantDescList31.parallelStream();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor54 = constantDescList31.iterator();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(constantDescSpliterator52);
        org.junit.Assert.assertNotNull(constantDescStream53);
        org.junit.Assert.assertNotNull(constantDescItor54);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc41 = constantDescList17.set(2, (java.lang.constant.ConstantDesc) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        int int56 = constantDescList53.lastIndexOf((Object) 1L);
        constantDescList53.ensureCapacity(10);
        boolean boolean59 = constantDescList43.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        boolean boolean61 = constantDescList53.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray72 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73, constantDescArray72);
        int int76 = constantDescList73.lastIndexOf((Object) 1L);
        constantDescList73.ensureCapacity(10);
        boolean boolean79 = constantDescList63.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        Object[] objArray80 = constantDescList73.toArray();
        boolean boolean81 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean82 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList73.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList86 = constantDescList73.subList(16, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(16) > toIndex(1)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc41 + "' != '" + 10.0f + "'", constantDesc41, 10.0f);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.lang.constant.ConstantDesc[] constantDescArray9 = new java.lang.constant.ConstantDesc[] { 3, 1L, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", (-1L), 100.0d, 3, 16, 0.0f, 2 };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList10 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList10, constantDescArray9);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray13 = constantDescList12.toArray();
        int int14 = constantDescList12.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor16 = constantDescList12.listIterator(0);
        int int17 = constantDescList10.lastIndexOf((Object) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc20 = constantDescList10.set(100, (java.lang.constant.ConstantDesc) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 9");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(constantDescItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList17 = constantDescList9.subList(27, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        Object obj3 = constantDescList1.clone();
        Object[] objArray4 = constantDescList1.toArray();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream5 = constantDescList1.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor7 = constantDescList1.listIterator(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj3), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(constantDescStream5);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator39 = constantDescList17.spliterator();
        constantDescList17.trimToSize();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator39);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        Object obj26 = constantDescList17.clone();
        constantDescList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc29 = constantDescList17.remove(27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 27 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor22 = constantDescList17.listIterator((int) (byte) 10);
        int int23 = constantDescList17.size();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator24 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.replaceAll(constantDescUnaryOperator24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescItor22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 16 + "'", int23 == 16);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        java.lang.constant.ConstantDesc[] constantDescArray64 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65, constantDescArray64);
        String str67 = constantDescList65.toString();
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        Object obj79 = constantDescList77.clone();
        Object[] objArray80 = new Object[] { 'a', constantDescList77 };
        Object[] objArray81 = constantDescList65.toArray(objArray80);
        int int82 = constantDescList65.size();
        boolean boolean83 = constantDescList46.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj84 = constantDescList65.clone();
        boolean boolean85 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        boolean boolean87 = constantDescList65.add((java.lang.constant.ConstantDesc) "");
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(constantDescArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str67, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82 == 16);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.remove((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 18");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList18.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc28 = constantDescList18.set((int) 'a', (java.lang.constant.ConstantDesc) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray60 = constantDescList59.toArray();
        int int61 = constantDescList59.size();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = constantDescList31.addAll((int) (byte) -1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.util.ArrayList<java.lang.invoke.TypeDescriptor.OfField<Class<?>>> wildcardClassOfFieldList1 = new java.util.ArrayList<java.lang.invoke.TypeDescriptor.OfField<Class<?>>>(2);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        constantDescList57.clear();
        String str77 = constantDescList57.toString();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[]" + "'", str77, "[]");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.util.ArrayList<java.lang.constant.Constable> constableList1 = new java.util.ArrayList<java.lang.constant.Constable>((int) 'a');
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList0.replaceAll(constantDescUnaryOperator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add(100, (java.lang.constant.ConstantDesc) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 18");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        Object obj26 = constantDescList17.clone();
        constantDescList17.clear();
        Object obj28 = constantDescList17.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc30 = constantDescList17.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.util.ArrayList<java.lang.invoke.TypeDescriptor.OfField<Class<?>>> wildcardClassOfFieldList1 = new java.util.ArrayList<java.lang.invoke.TypeDescriptor.OfField<Class<?>>>(0);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 10.0d, 0, 4, 10, 10.0d, 10.0f };
        java.lang.constant.ConstantDesc[] constantDescArray11 = constantDescList0.toArray(constantDescArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList14 = constantDescList0.subList((int) ' ', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertNotNull(constantDescArray11);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        String str74 = constantDescList72.toString();
        java.lang.constant.ConstantDesc[] constantDescArray83 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList84 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84, constantDescArray83);
        Object obj86 = constantDescList84.clone();
        Object[] objArray87 = new Object[] { 'a', constantDescList84 };
        Object[] objArray88 = constantDescList72.toArray(objArray87);
        int int89 = constantDescList72.size();
        boolean boolean90 = constantDescList53.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream91 = constantDescList72.stream();
        boolean boolean92 = constantDescList31.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        java.lang.constant.ConstantDesc constantDesc95 = constantDescList72.set((int) (byte) 1, (java.lang.constant.ConstantDesc) (-1L));
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str74, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 16 + "'", int89 == 16);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(constantDescStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + constantDesc95 + "' != '" + 1 + "'", constantDesc95, 1);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList18.listIterator();
        String str26 = constantDescList18.toString();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList18.replaceAll(constantDescUnaryOperator27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str26, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc19 = constantDescList11.remove((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray19 = constantDescList18.toArray();
        int int20 = constantDescList18.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList23 = constantDescList18.subList((int) (short) 0, (int) (byte) 0);
        boolean boolean24 = constantDescList9.contains((Object) (byte) 0);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        int int37 = constantDescList34.lastIndexOf((Object) 1L);
        constantDescList34.ensureCapacity(10);
        Object obj40 = constantDescList34.clone();
        constantDescList34.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor43 = constantDescList34.iterator();
        Object obj44 = constantDescList34.clone();
        java.lang.constant.ConstantDesc[] constantDescArray61 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62, constantDescArray61);
        String str64 = constantDescList62.toString();
        constantDescList62.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean69 = constantDescList62.add((java.lang.constant.ConstantDesc) 16);
        Object obj70 = constantDescList62.clone();
        boolean boolean71 = constantDescList34.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean72 = constantDescList9.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream73 = constantDescList34.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constantDescList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj44), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str64, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(constantDescStream73);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        constantDescList31.clear();
        boolean boolean53 = constantDescList31.contains((Object) 100.0f);
        String str54 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList71 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray80 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81, constantDescArray80);
        int int84 = constantDescList81.lastIndexOf((Object) 1L);
        constantDescList81.ensureCapacity(10);
        boolean boolean87 = constantDescList71.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        Object[] objArray88 = constantDescList81.toArray();
        boolean boolean89 = constantDescList64.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        boolean boolean90 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc41 = constantDescList17.set(2, (java.lang.constant.ConstantDesc) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        int int56 = constantDescList53.lastIndexOf((Object) 1L);
        constantDescList53.ensureCapacity(10);
        boolean boolean59 = constantDescList43.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        boolean boolean61 = constantDescList53.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray72 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73, constantDescArray72);
        int int76 = constantDescList73.lastIndexOf((Object) 1L);
        constantDescList73.ensureCapacity(10);
        boolean boolean79 = constantDescList63.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        Object[] objArray80 = constantDescList73.toArray();
        boolean boolean81 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean82 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList73.parallelStream();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection85 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = constantDescList73.addAll((int) (short) 0, constantDescCollection85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc41 + "' != '" + 10.0f + "'", constantDesc41, 10.0f);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.get(10);
        constantDescList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc29 = constantDescList17.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 0L + "'", constantDesc26, 0L);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        int int36 = constantDescList33.lastIndexOf((Object) 1L);
        constantDescList33.ensureCapacity(10);
        boolean boolean39 = constantDescList23.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean40 = constantDescList11.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
        Object[] objArray41 = constantDescList23.toArray();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList23.add((int) (byte) 10, (java.lang.constant.ConstantDesc) "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator11 = constantDescList2.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList14 = constantDescList2.subList(8, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 27");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator11);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor51 = constantDescList31.listIterator((int) (byte) 0);
        Object obj52 = constantDescList31.clone();
        boolean boolean53 = constantDescList31.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescItor51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj52), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.add(2, (java.lang.constant.ConstantDesc) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        Object obj37 = constantDescList17.clone();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!]");
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList17.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList43 = constantDescList17.subList((int) (short) 10, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(constantDescStream40);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        String str51 = constantDescList31.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList54 = constantDescList31.subList((int) '4', 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(52) > toIndex(8)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str51, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList42.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator46 = constantDescList42.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList42.parallelStream();
        Class<?> wildcardClass48 = constantDescList42.getClass();
        boolean boolean49 = constantDescList17.equals((Object) constantDescList42);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator50 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.replaceAll(constantDescUnaryOperator50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream45);
        org.junit.Assert.assertNotNull(constantDescSpliterator46);
        org.junit.Assert.assertNotNull(constantDescStream47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = constantDescList11.removeAll(constantDescCollection21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.util.ArrayList<java.util.List<java.lang.constant.ConstantDesc>[]> constantDescListArrayList0 = new java.util.ArrayList<java.util.List<java.lang.constant.ConstantDesc>[]>();
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc41 = constantDescList31.set((int) (short) 10, (java.lang.constant.ConstantDesc) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList31.clear();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream51 = constantDescList31.stream();
        constantDescList31.clear();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream51);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        int int23 = constantDescList1.lastIndexOf((Object) constantDescList19);
        java.util.stream.Stream[] streamArray25 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray26 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray25;
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray27 = constantDescList1.toArray((java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray25);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = constantDescList1.retainAll(constantDescCollection28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(streamArray25);
        org.junit.Assert.assertNotNull(constantDescStreamArray26);
        org.junit.Assert.assertNotNull(constantDescStreamArray27);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        int int23 = constantDescList1.lastIndexOf((Object) constantDescList19);
        boolean boolean24 = constantDescList1.isEmpty();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList1.iterator();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        String str45 = constantDescList43.toString();
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        Object obj57 = constantDescList55.clone();
        Object[] objArray58 = new Object[] { 'a', constantDescList55 };
        Object[] objArray59 = constantDescList43.toArray(objArray58);
        int int60 = constantDescList43.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor61 = constantDescList43.listIterator();
        Object[] objArray62 = constantDescList43.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray79 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList80, constantDescArray79);
        String str82 = constantDescList80.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList80.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator84 = constantDescList80.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream85 = constantDescList80.parallelStream();
        boolean boolean87 = constantDescList80.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor88 = constantDescList80.iterator();
        constantDescList80.clear();
        int int90 = constantDescList43.indexOf((Object) constantDescList80);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor91 = constantDescList43.listIterator();
        boolean boolean92 = constantDescList1.remove((Object) constantDescList43);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str45, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj57), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 16 + "'", int60 == 16);
        org.junit.Assert.assertNotNull(constantDescItor61);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str82, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertNotNull(constantDescSpliterator84);
        org.junit.Assert.assertNotNull(constantDescStream85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(constantDescItor88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(constantDescItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator2 = constantDescList1.spliterator();
        org.junit.Assert.assertNotNull(constantDescSpliterator2);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList1.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean73 = constantDescList54.add((java.lang.constant.ConstantDesc) "hi!");
        boolean boolean74 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        constantDescList17.ensureCapacity(2);
        constantDescList17.add(3, (java.lang.constant.ConstantDesc) 100.0d);
        boolean boolean81 = constantDescList17.add((java.lang.constant.ConstantDesc) "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str5 = constantDescList4.toString();
        boolean boolean6 = constantDescList1.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor8 = constantDescList4.listIterator((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[]" + "'", str5, "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList1.get((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray10 = constantDescList9.toArray();
        boolean boolean11 = constantDescList9.isEmpty();
        int int12 = constantDescList9.size();
        constantDescList9.clear();
        boolean boolean14 = constantDescList2.addAll((int) (short) 0, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str5 = constantDescList4.toString();
        boolean boolean6 = constantDescList1.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.add(100, (java.lang.constant.ConstantDesc) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[]" + "'", str5, "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        int int24 = constantDescList1.indexOf((Object) ' ');
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList1.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList12.listIterator();
        Object obj74 = constantDescList12.clone();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator75 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList12.replaceAll(constantDescUnaryOperator75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        Object[] objArray12 = constantDescList7.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList13 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor14 = constantDescList13.listIterator();
        boolean boolean15 = constantDescList7.remove((Object) constantDescList13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream36 = constantDescList33.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator37 = constantDescList33.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        int int50 = constantDescList47.lastIndexOf((Object) 1L);
        constantDescList47.ensureCapacity(10);
        Object obj53 = constantDescList47.clone();
        boolean boolean54 = constantDescList33.contains((Object) constantDescList47);
        boolean boolean55 = constantDescList13.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean56 = constantDescList4.contains((Object) boolean55);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream36);
        org.junit.Assert.assertNotNull(constantDescSpliterator37);
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj53), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc constantDesc22 = constantDescList17.set(0, (java.lang.constant.ConstantDesc) 10);
        Object[] objArray23 = constantDescList17.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        Object obj27 = constantDescList26.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(0);
        boolean boolean30 = constantDescList26.contains((Object) 0);
        boolean boolean31 = constantDescList17.addAll((int) (byte) 1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor32 = constantDescList26.iterator();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals("'" + constantDesc22 + "' != '" + 10 + "'", constantDesc22, 10);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(constantDescItor32);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        int int76 = constantDescList67.size();
        constantDescList67.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor79 = constantDescList67.listIterator(4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        constantDescList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add(4, (java.lang.constant.ConstantDesc) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        boolean boolean57 = constantDescList51.contains((Object) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        Class<?> wildcardClass8 = constantDescList2.getClass();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        constantDescList9.ensureCapacity((int) (short) 0);
        boolean boolean20 = constantDescList9.remove((Object) (byte) 1);
        boolean boolean22 = constantDescList9.add((java.lang.constant.ConstantDesc) 5);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList9.add((-1), (java.lang.constant.ConstantDesc) "");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 9");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor1 = constantDescList0.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList0.set((int) '#', (java.lang.constant.ConstantDesc) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescItor1);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        java.lang.constant.ConstantDesc constantDesc22 = null;
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList19.set(0, constantDesc22);
        Object[] objArray24 = constantDescList19.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList25.listIterator();
        boolean boolean27 = constantDescList19.remove((Object) constantDescList25);
        boolean boolean28 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList30 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray47 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList48 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48, constantDescArray47);
        String str50 = constantDescList48.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream51 = constantDescList48.parallelStream();
        int int52 = constantDescList30.lastIndexOf((Object) constantDescList48);
        java.util.stream.Stream[] streamArray54 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray55 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray54;
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray56 = constantDescList30.toArray((java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray54);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList30);
        boolean boolean58 = constantDescList19.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor60 = constantDescList57.listIterator(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 0L + "'", constantDesc23, 0L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(constantDescArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str50, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(streamArray54);
        org.junit.Assert.assertNotNull(constantDescStreamArray55);
        org.junit.Assert.assertNotNull(constantDescStreamArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        boolean boolean23 = constantDescList1.add((java.lang.constant.ConstantDesc) 2);
        boolean boolean24 = constantDescList1.isEmpty();
        int int25 = constantDescList1.size();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean73 = constantDescList54.add((java.lang.constant.ConstantDesc) "hi!");
        boolean boolean74 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        constantDescList17.ensureCapacity(2);
        constantDescList17.add(3, (java.lang.constant.ConstantDesc) 100.0d);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList82 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList82.parallelStream();
        Object obj84 = constantDescList82.clone();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator85 = constantDescList82.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = constantDescList17.addAll((int) (short) -1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 18");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj84), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[]");
        org.junit.Assert.assertNotNull(constantDescSpliterator85);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList2.stream();
        constantDescList2.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray21 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList22 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22, constantDescArray21);
        java.lang.constant.ConstantDesc[] constantDescArray40 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41, constantDescArray40);
        String str43 = constantDescList41.toString();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        Object obj55 = constantDescList53.clone();
        Object[] objArray56 = new Object[] { 'a', constantDescList53 };
        Object[] objArray57 = constantDescList41.toArray(objArray56);
        int int58 = constantDescList41.size();
        boolean boolean59 = constantDescList22.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList41.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray62 = constantDescList61.toArray();
        boolean boolean63 = constantDescList61.isEmpty();
        boolean boolean64 = constantDescList41.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        boolean boolean65 = constantDescList2.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        Class<?> wildcardClass66 = constantDescList2.getClass();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(constantDescStream8);
        org.junit.Assert.assertNotNull(constantDescArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(constantDescArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str43, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj55), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 16 + "'", int58 == 16);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(constantDescStream60);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.util.ArrayList<Comparable<String>> strComparableList0 = new java.util.ArrayList<Comparable<String>>();
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList58.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc61 = constantDescList58.remove(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { "hi!", "[null]", 100, (-1.0d), 1, (-1.0f), "[]", "[null]", "[10, 1, 0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", 100.0d, 1.0f, "", 4, "[10, 1, 0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", 0.0f, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]", 1.0d, 10L, 10.0d, 16, 3 };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList23.listIterator();
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor5 = constantDescList0.listIterator();
        constantDescList0.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc9 = constantDescList0.set((int) (byte) 1, (java.lang.constant.ConstantDesc) "[null]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescItor5);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean1 = constantDescList0.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream54 = constantDescList53.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean73 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        boolean boolean74 = constantDescList14.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.lang.constant.Constable[][] constableArray75 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][] constableArray76 = constantDescList56.toArray(constableArray75);
        boolean boolean77 = constantDescList0.remove((Object) constantDescList56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc80 = constantDescList56.set(1, (java.lang.constant.ConstantDesc) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream54);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(constableArray75);
        org.junit.Assert.assertNotNull(constableArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor22 = constantDescList17.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList24 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList24.stream();
        Object[] objArray26 = constantDescList24.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream29 = constantDescList28.stream();
        int int30 = constantDescList24.indexOf((Object) constantDescList28);
        boolean boolean31 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList24);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        int int45 = constantDescList42.lastIndexOf((Object) 1L);
        constantDescList42.ensureCapacity(10);
        Object obj48 = constantDescList42.clone();
        constantDescList42.ensureCapacity(4);
        Object[] objArray51 = constantDescList42.toArray();
        int int52 = constantDescList32.lastIndexOf((Object) objArray51);
        int int53 = constantDescList32.size();
        Object[] objArray54 = constantDescList32.toArray();
        boolean boolean55 = constantDescList24.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList32);
        int int56 = constantDescList24.size();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescItor22);
        org.junit.Assert.assertNotNull(constantDescStream25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(constantDescStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean1 = constantDescList0.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream54 = constantDescList53.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean73 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        boolean boolean74 = constantDescList14.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.lang.constant.Constable[][] constableArray75 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][] constableArray76 = constantDescList56.toArray(constableArray75);
        boolean boolean77 = constantDescList0.remove((Object) constantDescList56);
        int int78 = constantDescList0.size();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream54);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(constableArray75);
        org.junit.Assert.assertNotNull(constableArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList33.parallelStream();
        boolean boolean53 = constantDescList33.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray70 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList71 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList71, constantDescArray70);
        String str73 = constantDescList71.toString();
        constantDescList71.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean78 = constantDescList71.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc80 = constantDescList71.get(10);
        constantDescList71.clear();
        int int82 = constantDescList33.indexOf((Object) constantDescList71);
        constantDescList71.add(0, (java.lang.constant.ConstantDesc) 10.0d);
        boolean boolean86 = constantDescList1.remove((Object) constantDescList71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc88 = constantDescList71.get(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 16 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(constantDescArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str73, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + constantDesc80 + "' != '" + 0L + "'", constantDesc80, 0L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        constantDescList57.trimToSize();
        Object obj77 = constantDescList57.clone();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator78 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList57.replaceAll(constantDescUnaryOperator78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.util.ArrayList<java.util.Collection<java.lang.constant.ConstantDesc>> constantDescCollectionList1 = new java.util.ArrayList<java.util.Collection<java.lang.constant.ConstantDesc>>(0);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        int int52 = constantDescList31.lastIndexOf((Object) 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc54 = constantDescList31.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 12 + "'", int52 == 12);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc22 = constantDescList11.set((int) '#', (java.lang.constant.ConstantDesc) "[null]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 35 out of bounds for length 9");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc42 = constantDescList11.set(8, (java.lang.constant.ConstantDesc) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 8 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList0.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescStream25);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList42.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator46 = constantDescList42.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList42.parallelStream();
        Class<?> wildcardClass48 = constantDescList42.getClass();
        boolean boolean49 = constantDescList17.equals((Object) constantDescList42);
        Object[][] objArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            Object[][] objArray51 = constantDescList42.toArray(objArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream45);
        org.junit.Assert.assertNotNull(constantDescSpliterator46);
        org.junit.Assert.assertNotNull(constantDescStream47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        int int23 = constantDescList1.lastIndexOf((Object) constantDescList19);
        boolean boolean24 = constantDescList1.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc26 = constantDescList1.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray37 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38, constantDescArray37);
        String str40 = constantDescList38.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream41 = constantDescList38.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator42 = constantDescList38.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream43 = constantDescList38.parallelStream();
        boolean boolean44 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = constantDescList9.addAll((int) (byte) 100, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(constantDescArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str40, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream41);
        org.junit.Assert.assertNotNull(constantDescSpliterator42);
        org.junit.Assert.assertNotNull(constantDescStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList2.stream();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream9 = constantDescList2.stream();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(constantDescStream8);
        org.junit.Assert.assertNotNull(constantDescStream9);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList33.parallelStream();
        boolean boolean53 = constantDescList33.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray70 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList71 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList71, constantDescArray70);
        String str73 = constantDescList71.toString();
        constantDescList71.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean78 = constantDescList71.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc80 = constantDescList71.get(10);
        constantDescList71.clear();
        int int82 = constantDescList33.indexOf((Object) constantDescList71);
        constantDescList71.add(0, (java.lang.constant.ConstantDesc) 10.0d);
        boolean boolean86 = constantDescList1.remove((Object) constantDescList71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc88 = constantDescList71.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(constantDescArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str73, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + constantDesc80 + "' != '" + 0L + "'", constantDesc80, 0L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        boolean boolean16 = constantDescList9.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList2.stream();
        constantDescList2.trimToSize();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList2.replaceAll(constantDescUnaryOperator10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(constantDescStream8);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList16 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray25 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26, constantDescArray25);
        int int29 = constantDescList26.lastIndexOf((Object) 1L);
        constantDescList26.ensureCapacity(10);
        boolean boolean32 = constantDescList16.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        Object[] objArray33 = constantDescList26.toArray();
        boolean boolean34 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        java.lang.constant.ConstantDesc constantDesc36 = constantDescList26.remove(0);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + constantDesc36 + "' != '" + 0 + "'", constantDesc36, 0);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        Object obj19 = constantDescList9.clone();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        constantDescList37.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean44 = constantDescList37.add((java.lang.constant.ConstantDesc) 16);
        Object obj45 = constantDescList37.clone();
        boolean boolean46 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        constantDescList37.trimToSize();
        constantDescList37.trimToSize();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.util.stream.Stream<java.lang.constant.ConstantDesc>> constantDescStreamList1 = new java.util.ArrayList<java.util.stream.Stream<java.lang.constant.ConstantDesc>>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal Capacity: -1");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        constantDescList0.ensureCapacity(3);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        constantDescList0.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList6 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream7 = constantDescList6.parallelStream();
        boolean boolean8 = constantDescList0.remove((Object) constantDescStream7);
        Object[] objArray9 = constantDescList0.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList12 = constantDescList0.subList((int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator39 = constantDescList17.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc42 = constantDescList17.set(27, (java.lang.constant.ConstantDesc) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 27 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator39);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        java.lang.constant.ConstantDesc constantDesc17 = constantDescList9.remove(0);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + constantDesc17 + "' != '" + 0 + "'", constantDesc17, 0);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.util.ArrayList<Iterable<java.lang.constant.ConstantDesc>> constantDescIterableList0 = new java.util.ArrayList<Iterable<java.lang.constant.ConstantDesc>>();
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray27 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList28, constantDescArray27);
        String str30 = constantDescList28.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream31 = constantDescList28.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator32 = constantDescList28.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        int int45 = constantDescList42.lastIndexOf((Object) 1L);
        constantDescList42.ensureCapacity(10);
        Object obj48 = constantDescList42.clone();
        boolean boolean49 = constantDescList28.contains((Object) constantDescList42);
        boolean boolean50 = constantDescList8.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList28);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList53 = constantDescList8.subList(12, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str30, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream31);
        org.junit.Assert.assertNotNull(constantDescSpliterator32);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        String str22 = constantDescList20.toString();
        java.lang.constant.ConstantDesc[] constantDescArray31 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList32, constantDescArray31);
        Object obj34 = constantDescList32.clone();
        Object[] objArray35 = new Object[] { 'a', constantDescList32 };
        Object[] objArray36 = constantDescList20.toArray(objArray35);
        int int37 = constantDescList20.size();
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        String str57 = constantDescList55.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream58 = constantDescList55.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator59 = constantDescList55.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList55.parallelStream();
        boolean boolean61 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55);
        int int62 = constantDescList1.lastIndexOf((Object) constantDescList20);
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        java.lang.constant.ConstantDesc constantDesc69 = null;
        java.lang.constant.ConstantDesc constantDesc70 = constantDescList66.set(0, constantDesc69);
        Object[] objArray71 = constantDescList66.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList73.stream();
        Object[] objArray75 = constantDescList73.toArray();
        boolean boolean76 = constantDescList66.contains((Object) constantDescList73);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = constantDescList1.addAll((int) '#', (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str22, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj34), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 16 + "'", int37 == 16);
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str57, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream58);
        org.junit.Assert.assertNotNull(constantDescSpliterator59);
        org.junit.Assert.assertNotNull(constantDescStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + constantDesc70 + "' != '" + 0L + "'", constantDesc70, 0L);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[null]");
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        java.lang.constant.ConstantDesc[] constantDescArray57 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58, constantDescArray57);
        String str60 = constantDescList58.toString();
        java.lang.constant.ConstantDesc[] constantDescArray69 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70, constantDescArray69);
        Object obj72 = constantDescList70.clone();
        Object[] objArray73 = new Object[] { 'a', constantDescList70 };
        Object[] objArray74 = constantDescList58.toArray(objArray73);
        int int75 = constantDescList58.size();
        boolean boolean76 = constantDescList39.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray78 = constantDescList77.toArray();
        boolean boolean79 = constantDescList77.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.List[] listArray82 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray83 = (java.util.List<java.lang.constant.ConstantDesc>[]) listArray82;
        constantDescListArray83[0] = constantDescList19;
        constantDescListArray83[1] = constantDescList26;
        constantDescListArray83[2] = constantDescList58;
        constantDescListArray83[3] = constantDescList77;
        constantDescListArray83[4] = constantDescList80;
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray94 = constantDescList1.toArray(constantDescListArray83);
        Object[] objArray95 = constantDescList1.toArray();
        String str96 = constantDescList1.toString();
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(constantDescArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str60, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 16 + "'", int75 == 16);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(listArray82);
        org.junit.Assert.assertNotNull(constantDescListArray83);
        org.junit.Assert.assertNotNull(constantDescListArray94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[]" + "'", str96, "[]");
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor1 = constantDescList0.listIterator();
        boolean boolean2 = constantDescList0.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor5 = constantDescList0.listIterator(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescItor1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        constantDescList31.clear();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator52 = constantDescList31.spliterator();
        Class<?> wildcardClass53 = constantDescSpliterator52.getClass();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(constantDescSpliterator52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        Object obj19 = constantDescList9.clone();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        constantDescList37.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean44 = constantDescList37.add((java.lang.constant.ConstantDesc) 16);
        Object obj45 = constantDescList37.clone();
        boolean boolean46 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        constantDescList37.trimToSize();
        Class<?> wildcardClass48 = constantDescList37.getClass();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        String str24 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        String str58 = constantDescList56.toString();
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        Object obj70 = constantDescList68.clone();
        Object[] objArray71 = new Object[] { 'a', constantDescList68 };
        Object[] objArray72 = constantDescList56.toArray(objArray71);
        int int73 = constantDescList56.size();
        boolean boolean74 = constantDescList37.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList56.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray77 = constantDescList76.toArray();
        boolean boolean78 = constantDescList76.isEmpty();
        boolean boolean79 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean80 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        Object[] objArray82 = constantDescList81.toArray();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 16 + "'", int73 == 16);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        java.lang.constant.ConstantDesc[] constantDescArray48 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49, constantDescArray48);
        Object obj51 = constantDescList49.clone();
        Object[] objArray52 = new Object[] { 'a', constantDescList49 };
        Object[] objArray53 = constantDescList37.toArray(objArray52);
        int int54 = constantDescList37.size();
        boolean boolean55 = constantDescList18.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList37.parallelStream();
        boolean boolean57 = constantDescList37.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray74 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList75 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList75, constantDescArray74);
        String str77 = constantDescList75.toString();
        constantDescList75.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean82 = constantDescList75.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc84 = constantDescList75.get(10);
        constantDescList75.clear();
        int int86 = constantDescList37.indexOf((Object) constantDescList75);
        constantDescList75.add(0, (java.lang.constant.ConstantDesc) 10.0d);
        boolean boolean90 = constantDescList5.remove((Object) constantDescList75);
        boolean boolean91 = constantDescList3.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList5);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj51), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 16 + "'", int54 == 16);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(constantDescArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str77, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + constantDesc84 + "' != '" + 0L + "'", constantDesc84, 0L);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        boolean boolean5 = constantDescList3.add((java.lang.constant.ConstantDesc) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc7 = constantDescList3.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList5.stream();
        int int7 = constantDescList1.indexOf((Object) constantDescList5);
        java.lang.constant.ConstantDesc[] constantDescArray24 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25, constantDescArray24);
        String str27 = constantDescList25.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList25.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator29 = constantDescList25.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        Object obj45 = constantDescList39.clone();
        boolean boolean46 = constantDescList25.contains((Object) constantDescList39);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator47 = constantDescList25.spliterator();
        boolean boolean48 = constantDescList5.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25);
        constantDescList5.ensureCapacity(12);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str27, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(constantDescSpliterator29);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        Object[] objArray58 = constantDescList31.toArray();
        Class<?> wildcardClass59 = objArray58.getClass();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        constantDescList9.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc21 = constantDescList9.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean74 = constantDescList66.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList66.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList66.set(0, (java.lang.constant.ConstantDesc) 5);
        int int80 = constantDescList31.indexOf((Object) constantDescList66);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream81 = constantDescList31.stream();
        Object obj82 = constantDescList31.clone();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj82), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        constantDescList57.trimToSize();
        Object obj77 = constantDescList57.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList80 = constantDescList57.subList((int) (short) -1, 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.util.ArrayList<Object[][]> objArrayList0 = new java.util.ArrayList<Object[][]>();
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray22 = constantDescList21.toArray();
        boolean boolean23 = constantDescList21.isEmpty();
        int int24 = constantDescList21.size();
        boolean boolean25 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get(8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList30 = constantDescList17.subList(27, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(27) > toIndex(1)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 0 + "'", constantDesc27, 0);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean1 = constantDescList0.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc3 = constantDescList0.remove((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        constantDescList17.clear();
        boolean boolean28 = constantDescList17.add((java.lang.constant.ConstantDesc) 1.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        String str49 = constantDescList47.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList47.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList47.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList47.parallelStream();
        boolean boolean53 = constantDescList29.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47);
        constantDescList29.ensureCapacity(8);
        java.lang.constant.ConstantDesc constantDesc57 = null;
        constantDescList29.add((int) (short) 10, constantDesc57);
        boolean boolean59 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList17.stream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str49, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(constantDescStream60);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        String str24 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        String str58 = constantDescList56.toString();
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        Object obj70 = constantDescList68.clone();
        Object[] objArray71 = new Object[] { 'a', constantDescList68 };
        Object[] objArray72 = constantDescList56.toArray(objArray71);
        int int73 = constantDescList56.size();
        boolean boolean74 = constantDescList37.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList56.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray77 = constantDescList76.toArray();
        boolean boolean78 = constantDescList76.isEmpty();
        boolean boolean79 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean80 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray82 = constantDescList81.toArray();
        int int83 = constantDescList81.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList86 = constantDescList81.subList((int) (short) 0, (int) (byte) 0);
        constantDescList81.ensureCapacity(2);
        boolean boolean89 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 16 + "'", int73 == 16);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(constantDescList86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream41 = constantDescList17.stream();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream42 = constantDescList17.stream();
        constantDescList17.trimToSize();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertNotNull(constantDescStream41);
        org.junit.Assert.assertNotNull(constantDescStream42);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList17.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor42 = constantDescList17.listIterator(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(constantDescStream40);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object[] objArray40 = constantDescList17.toArray();
        boolean boolean41 = constantDescList17.isEmpty();
        Class<?> wildcardClass42 = constantDescList17.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc57 = constantDescList55.remove(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 2 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        constantDescList9.ensureCapacity((int) (short) 0);
        boolean boolean20 = constantDescList9.remove((Object) (byte) 1);
        java.lang.constant.ConstantDesc[] constantDescArray37 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38, constantDescArray37);
        String str40 = constantDescList38.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream41 = constantDescList38.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator42 = constantDescList38.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream43 = constantDescList38.parallelStream();
        boolean boolean45 = constantDescList38.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor46 = constantDescList38.iterator();
        boolean boolean47 = constantDescList9.equals((Object) constantDescList38);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(constantDescArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str40, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream41);
        org.junit.Assert.assertNotNull(constantDescSpliterator42);
        org.junit.Assert.assertNotNull(constantDescStream43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(constantDescItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        int int11 = constantDescList2.size();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.util.ArrayList<java.util.RandomAccess> randomAccessList1 = new java.util.ArrayList<java.util.RandomAccess>((int) (byte) 0);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        Object obj4 = null;
        boolean boolean5 = constantDescList1.equals(obj4);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.util.ArrayList<java.util.Spliterator<java.lang.constant.ConstantDesc>> constantDescSpliteratorList1 = new java.util.ArrayList<java.util.Spliterator<java.lang.constant.ConstantDesc>>(5);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.lang.constant.ConstantDesc[] constantDescArray14 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15, constantDescArray14);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        String str36 = constantDescList34.toString();
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        Object obj48 = constantDescList46.clone();
        Object[] objArray49 = new Object[] { 'a', constantDescList46 };
        Object[] objArray50 = constantDescList34.toArray(objArray49);
        int int51 = constantDescList34.size();
        boolean boolean52 = constantDescList15.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        constantDescList15.trimToSize();
        constantDescList15.ensureCapacity(100);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor56 = constantDescList15.listIterator();
        boolean boolean57 = constantDescList1.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList1);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator59 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.replaceAll(constantDescUnaryOperator59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str36, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 16 + "'", int51 == 16);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(constantDescItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator34 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.replaceAll(constantDescUnaryOperator34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.get(10);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 1L, 10, (-1.0f) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        String str66 = constantDescList64.toString();
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        Object obj78 = constantDescList76.clone();
        Object[] objArray79 = new Object[] { 'a', constantDescList76 };
        Object[] objArray80 = constantDescList64.toArray(objArray79);
        int int81 = constantDescList64.size();
        boolean boolean82 = constantDescList45.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList64.stream();
        boolean boolean84 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean85 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList87 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream88 = constantDescList87.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList90 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str91 = constantDescList90.toString();
        boolean boolean92 = constantDescList87.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList90);
        boolean boolean93 = constantDescList17.equals((Object) boolean92);
        boolean boolean94 = constantDescList17.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc97 = constantDescList17.set(10, (java.lang.constant.ConstantDesc) 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 0L + "'", constantDesc26, 0L);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str66, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj78), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 16 + "'", int81 == 16);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescStream88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[]" + "'", str91, "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean73 = constantDescList54.add((java.lang.constant.ConstantDesc) "hi!");
        boolean boolean74 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        constantDescList17.ensureCapacity(2);
        constantDescList17.add(3, (java.lang.constant.ConstantDesc) 100.0d);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(4);
        boolean boolean82 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc84 = constantDescList81.remove((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 52 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList5.stream();
        int int7 = constantDescList1.indexOf((Object) constantDescList5);
        java.lang.constant.ConstantDesc[] constantDescArray24 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25, constantDescArray24);
        String str27 = constantDescList25.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList25.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator29 = constantDescList25.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        Object obj45 = constantDescList39.clone();
        boolean boolean46 = constantDescList25.contains((Object) constantDescList39);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator47 = constantDescList25.spliterator();
        boolean boolean48 = constantDescList5.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray59 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60, constantDescArray59);
        int int63 = constantDescList60.lastIndexOf((Object) 1L);
        constantDescList60.ensureCapacity(10);
        boolean boolean66 = constantDescList50.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60);
        Object obj67 = constantDescList50.clone();
        boolean boolean69 = constantDescList50.add((java.lang.constant.ConstantDesc) 100L);
        boolean boolean70 = constantDescList25.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        Class<?> wildcardClass71 = constantDescList25.getClass();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str27, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(constantDescSpliterator29);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(constantDescArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.util.ArrayList<java.lang.reflect.GenericDeclaration[]> genericDeclarationArrayList1 = new java.util.ArrayList<java.lang.reflect.GenericDeclaration[]>((int) (byte) 100);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        Object obj19 = constantDescList9.clone();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        constantDescList37.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean44 = constantDescList37.add((java.lang.constant.ConstantDesc) 16);
        Object obj45 = constantDescList37.clone();
        boolean boolean46 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        java.lang.constant.ConstantDesc[] constantDescArray64 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65, constantDescArray64);
        String str67 = constantDescList65.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream68 = constantDescList65.parallelStream();
        boolean boolean69 = constantDescList9.addAll(4, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator70 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList9.replaceAll(constantDescUnaryOperator70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(constantDescArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str67, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor42 = constantDescList31.listIterator((int) (short) 1);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescItor42);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        constantDescList2.clear();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList2.add((int) ' ', (java.lang.constant.ConstantDesc) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray9 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList10 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList10, constantDescArray9);
        int int13 = constantDescList10.lastIndexOf((Object) 1L);
        constantDescList10.ensureCapacity(10);
        Object obj16 = constantDescList10.clone();
        constantDescList10.ensureCapacity(4);
        Object[] objArray19 = constantDescList10.toArray();
        int int20 = constantDescList0.lastIndexOf((Object) objArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList23 = constantDescList0.subList((int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        constantDescList0.trimToSize();
        String str3 = constantDescList0.toString();
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        Object obj20 = constantDescList14.clone();
        constantDescList14.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor23 = constantDescList14.iterator();
        Object obj24 = constantDescList14.clone();
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        constantDescList42.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean49 = constantDescList42.add((java.lang.constant.ConstantDesc) 16);
        Object obj50 = constantDescList42.clone();
        boolean boolean51 = constantDescList14.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = constantDescList0.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj20), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj24), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj50), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc43 = constantDescList17.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        int int58 = constantDescList55.lastIndexOf((Object) 1L);
        constantDescList55.ensureCapacity(10);
        boolean boolean61 = constantDescList45.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55);
        Object[] objArray62 = constantDescList55.toArray();
        boolean boolean63 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator64 = constantDescList55.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray82 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83, constantDescArray82);
        String str85 = constantDescList83.toString();
        constantDescList83.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean90 = constantDescList83.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc92 = constantDescList83.get(10);
        Object[] objArray93 = constantDescList83.toArray();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = constantDescList55.addAll((int) (byte) -1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertEquals("'" + constantDesc43 + "' != '" + 1 + "'", constantDesc43, 1);
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator64);
        org.junit.Assert.assertNotNull(constantDescArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str85, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + constantDesc92 + "' != '" + 0L + "'", constantDesc92, 0L);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        java.lang.constant.ConstantDesc[] constantDescArray57 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58, constantDescArray57);
        String str60 = constantDescList58.toString();
        java.lang.constant.ConstantDesc[] constantDescArray69 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70, constantDescArray69);
        Object obj72 = constantDescList70.clone();
        Object[] objArray73 = new Object[] { 'a', constantDescList70 };
        Object[] objArray74 = constantDescList58.toArray(objArray73);
        int int75 = constantDescList58.size();
        boolean boolean76 = constantDescList39.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray78 = constantDescList77.toArray();
        boolean boolean79 = constantDescList77.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.List[] listArray82 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray83 = (java.util.List<java.lang.constant.ConstantDesc>[]) listArray82;
        constantDescListArray83[0] = constantDescList19;
        constantDescListArray83[1] = constantDescList26;
        constantDescListArray83[2] = constantDescList58;
        constantDescListArray83[3] = constantDescList77;
        constantDescListArray83[4] = constantDescList80;
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray94 = constantDescList1.toArray(constantDescListArray83);
        Object[] objArray95 = constantDescList1.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray98 = new java.lang.constant.ConstantDesc[] { 10.0f, (-1.0d) };
        java.lang.constant.ConstantDesc[] constantDescArray99 = constantDescList1.toArray(constantDescArray98);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(constantDescArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str60, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 16 + "'", int75 == 16);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(listArray82);
        org.junit.Assert.assertNotNull(constantDescListArray83);
        org.junit.Assert.assertNotNull(constantDescListArray94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertNotNull(constantDescArray98);
        org.junit.Assert.assertNotNull(constantDescArray99);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray4 = constantDescList3.toArray();
        int int5 = constantDescList3.size();
        int int6 = constantDescList0.lastIndexOf((Object) int5);
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        String str41 = constantDescList39.toString();
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51, constantDescArray50);
        Object obj53 = constantDescList51.clone();
        Object[] objArray54 = new Object[] { 'a', constantDescList51 };
        Object[] objArray55 = constantDescList39.toArray(objArray54);
        int int56 = constantDescList39.size();
        boolean boolean57 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        String str58 = constantDescList39.toString();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = constantDescList0.addAll(27, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 27, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str41, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56 == 16);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        boolean boolean7 = constantDescList2.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream10 = constantDescList9.parallelStream();
        boolean boolean11 = constantDescList2.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList9.replaceAll(constantDescUnaryOperator12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(constantDescStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.util.ArrayList<java.lang.reflect.GenericDeclaration> genericDeclarationList0 = new java.util.ArrayList<java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator11 = constantDescList2.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray24 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25, constantDescArray24);
        java.lang.constant.ConstantDesc[] constantDescArray43 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList44 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList44, constantDescArray43);
        String str46 = constantDescList44.toString();
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        Object obj58 = constantDescList56.clone();
        Object[] objArray59 = new Object[] { 'a', constantDescList56 };
        Object[] objArray60 = constantDescList44.toArray(objArray59);
        int int61 = constantDescList44.size();
        boolean boolean62 = constantDescList25.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList44);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream63 = constantDescList44.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray65 = constantDescList64.toArray();
        boolean boolean66 = constantDescList64.isEmpty();
        boolean boolean67 = constantDescList44.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream68 = constantDescList44.stream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = constantDescList2.addAll(8, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator11);
        org.junit.Assert.assertNotNull(constantDescArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(constantDescArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str46, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj58), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 16 + "'", int61 == 16);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constantDescStream63);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(constantDescStream68);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        int int23 = constantDescList20.lastIndexOf((Object) 1L);
        constantDescList20.ensureCapacity(10);
        Object[] objArray26 = constantDescList20.toArray();
        boolean boolean28 = constantDescList20.add((java.lang.constant.ConstantDesc) 100);
        boolean boolean29 = constantDescList2.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        java.lang.constant.ConstantDesc[] constantDescArray60 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61, constantDescArray60);
        String str63 = constantDescList61.toString();
        java.lang.constant.ConstantDesc[] constantDescArray72 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73, constantDescArray72);
        Object obj75 = constantDescList73.clone();
        Object[] objArray76 = new Object[] { 'a', constantDescList73 };
        Object[] objArray77 = constantDescList61.toArray(objArray76);
        int int78 = constantDescList61.size();
        boolean boolean79 = constantDescList42.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream80 = constantDescList61.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray82 = constantDescList81.toArray();
        boolean boolean83 = constantDescList81.isEmpty();
        boolean boolean84 = constantDescList61.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        boolean boolean85 = constantDescList20.equals((Object) constantDescList61);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(constantDescArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str63, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj75), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 16 + "'", int78 == 16);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(constantDescStream80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        Object[] objArray4 = constantDescList1.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        String str25 = constantDescList23.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList23.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator27 = constantDescList23.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        int int40 = constantDescList37.lastIndexOf((Object) 1L);
        constantDescList37.ensureCapacity(10);
        Object obj43 = constantDescList37.clone();
        boolean boolean44 = constantDescList23.contains((Object) constantDescList37);
        java.lang.constant.ConstantDesc constantDesc46 = constantDescList23.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc49 = constantDescList23.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        int int51 = constantDescList23.lastIndexOf((Object) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        boolean boolean52 = constantDescList1.addAll((int) (byte) 0, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList55 = constantDescList23.subList((int) '4', 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(52) > toIndex(8)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str25, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream26);
        org.junit.Assert.assertNotNull(constantDescSpliterator27);
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj43), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + constantDesc46 + "' != '" + 1 + "'", constantDesc46, 1);
        org.junit.Assert.assertEquals("'" + constantDesc49 + "' != '" + 1 + "'", constantDesc49, 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        boolean boolean17 = constantDescList9.add((java.lang.constant.ConstantDesc) 100);
        java.lang.constant.ConstantDesc[] constantDescArray35 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36, constantDescArray35);
        String str38 = constantDescList36.toString();
        constantDescList36.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean43 = constantDescList36.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc45 = constantDescList36.get(10);
        Object[] objArray46 = constantDescList36.toArray();
        boolean boolean47 = constantDescList9.addAll(4, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(constantDescArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str38, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + constantDesc45 + "' != '" + 0L + "'", constantDesc45, 0L);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        constantDescList31.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor78 = constantDescList31.listIterator((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        boolean boolean51 = constantDescList31.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        constantDescList69.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc78 = constantDescList69.get(10);
        constantDescList69.clear();
        int int80 = constantDescList31.indexOf((Object) constantDescList69);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream81 = constantDescList69.stream();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + constantDesc78 + "' != '" + 0L + "'", constantDesc78, 0L);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream81);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        int int73 = constantDescList12.size();
        java.lang.constant.ConstantDesc constantDesc75 = constantDescList12.get(5);
        constantDescList12.clear();
        constantDescList12.ensureCapacity(3);
        Object[] objArray79 = constantDescList12.toArray();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 27 + "'", int73 == 27);
        org.junit.Assert.assertEquals("'" + constantDesc75 + "' != '" + (-1.0d) + "'", constantDesc75, (-1.0d));
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        java.util.ArrayList<java.lang.reflect.GenericDeclaration[]> genericDeclarationArrayList0 = new java.util.ArrayList<java.lang.reflect.GenericDeclaration[]>();
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator22 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList21.replaceAll(constantDescUnaryOperator22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        Object obj56 = constantDescList54.clone();
        Object[] objArray57 = new Object[] { 'a', constantDescList54 };
        Object[] objArray58 = constantDescList42.toArray(objArray57);
        int int59 = constantDescList42.size();
        boolean boolean60 = constantDescList23.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream61 = constantDescList42.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray63 = constantDescList62.toArray();
        boolean boolean64 = constantDescList62.isEmpty();
        boolean boolean65 = constantDescList42.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean66 = constantDescList8.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) '#');
        boolean boolean69 = constantDescList8.equals((Object) constantDescList68);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator70 = constantDescList68.spliterator();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(constantDescStream61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator70);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        String str16 = constantDescList9.toString();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream19 = constantDescList17.parallelStream();
        boolean boolean20 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.lang.constant.ConstantDesc[] constantDescArray37 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38, constantDescArray37);
        String str40 = constantDescList38.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream41 = constantDescList38.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator42 = constantDescList38.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray51 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList52 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList52, constantDescArray51);
        int int55 = constantDescList52.lastIndexOf((Object) 1L);
        constantDescList52.ensureCapacity(10);
        Object obj58 = constantDescList52.clone();
        boolean boolean59 = constantDescList38.contains((Object) constantDescList52);
        java.lang.constant.ConstantDesc constantDesc61 = constantDescList38.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc64 = constantDescList38.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        int int66 = constantDescList38.lastIndexOf((Object) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        int int67 = constantDescList9.lastIndexOf((Object) int66);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str16, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(constantDescArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str40, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream41);
        org.junit.Assert.assertNotNull(constantDescSpliterator42);
        org.junit.Assert.assertNotNull(constantDescArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj58), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + constantDesc61 + "' != '" + 1 + "'", constantDesc61, 1);
        org.junit.Assert.assertEquals("'" + constantDesc64 + "' != '" + 1 + "'", constantDesc64, 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean74 = constantDescList66.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList66.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList66.set(0, (java.lang.constant.ConstantDesc) 5);
        int int80 = constantDescList31.indexOf((Object) constantDescList66);
        boolean boolean82 = constantDescList31.remove((Object) (-1));
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList85 = constantDescList31.subList((int) (byte) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList0.ensureCapacity(8);
        constantDescList0.ensureCapacity(0);
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        String str16 = constantDescList9.toString();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream19 = constantDescList17.parallelStream();
        boolean boolean20 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        constantDescList9.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc23 = constantDescList9.remove((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str16, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList12.listIterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList12.parallelStream();
        java.lang.constant.ConstantDesc constantDesc77 = constantDescList12.set(0, (java.lang.constant.ConstantDesc) 16);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor73);
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertEquals("'" + constantDesc77 + "' != '" + 10.0f + "'", constantDesc77, 10.0f);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc6 = constantDescList4.get(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        java.lang.constant.ConstantDesc[] constantDescArray64 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65, constantDescArray64);
        String str67 = constantDescList65.toString();
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        Object obj79 = constantDescList77.clone();
        Object[] objArray80 = new Object[] { 'a', constantDescList77 };
        Object[] objArray81 = constantDescList65.toArray(objArray80);
        int int82 = constantDescList65.size();
        boolean boolean83 = constantDescList46.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj84 = constantDescList65.clone();
        boolean boolean85 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj86 = constantDescList17.clone();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor87 = constantDescList17.iterator();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator88 = constantDescList17.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc90 = constantDescList17.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(constantDescArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str67, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82 == 16);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescItor87);
        org.junit.Assert.assertNotNull(constantDescSpliterator88);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        int int2 = constantDescList0.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList5 = constantDescList0.subList((int) (short) 0, (int) (byte) 0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList0.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc9 = constantDescList0.set(0, (java.lang.constant.ConstantDesc) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(constantDescList5);
        org.junit.Assert.assertNotNull(constantDescStream6);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList1.set((int) (short) 10, (java.lang.constant.ConstantDesc) "[null]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        Object obj25 = constantDescList17.clone();
        boolean boolean26 = constantDescList17.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        java.lang.constant.ConstantDesc constantDesc32 = null;
        java.lang.constant.ConstantDesc constantDesc33 = constantDescList29.set(0, constantDesc32);
        constantDescList29.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream35 = constantDescList29.stream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor37 = constantDescList29.listIterator(0);
        boolean boolean38 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29);
        constantDescList29.add(1, (java.lang.constant.ConstantDesc) 1);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj25), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + constantDesc33 + "' != '" + 0L + "'", constantDesc33, 0L);
        org.junit.Assert.assertNotNull(constantDescStream35);
        org.junit.Assert.assertNotNull(constantDescItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator4 = constantDescList0.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        boolean boolean12 = constantDescList7.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream15 = constantDescList14.parallelStream();
        boolean boolean16 = constantDescList7.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        Iterable[] iterableArray18 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray19 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray18;
        constantDescIterableArray19[0] = constantDescList7;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray22 = constantDescList0.toArray(constantDescIterableArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc24 = constantDescList0.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator4);
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(constantDescStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(iterableArray18);
        org.junit.Assert.assertNotNull(constantDescIterableArray19);
        org.junit.Assert.assertNotNull(constantDescIterableArray22);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        Object obj26 = constantDescList17.clone();
        constantDescList17.clear();
        Object obj28 = constantDescList17.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList31 = constantDescList17.subList((int) '#', 27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 27");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor56 = constantDescList31.iterator();
        int int58 = constantDescList31.indexOf((Object) 27);
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        String str78 = constantDescList76.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream79 = constantDescList76.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray81 = constantDescList80.toArray();
        boolean boolean82 = constantDescList80.isEmpty();
        int int83 = constantDescList80.size();
        boolean boolean84 = constantDescList76.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList80);
        java.lang.constant.ConstantDesc constantDesc86 = constantDescList76.get(8);
        boolean boolean87 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor89 = constantDescList31.listIterator(4);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertNotNull(constantDescItor56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str78, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream79);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + constantDesc86 + "' != '" + 0 + "'", constantDesc86, 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(constantDescItor89);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        int int5 = constantDescList4.size();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor36 = constantDescList17.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add(100, (java.lang.constant.ConstantDesc) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(constantDescItor36);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        java.lang.constant.ConstantDesc[] constantDescArray15 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList16 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList16, constantDescArray15);
        java.lang.constant.ConstantDesc[] constantDescArray34 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList35 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35, constantDescArray34);
        String str37 = constantDescList35.toString();
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        Object obj49 = constantDescList47.clone();
        Object[] objArray50 = new Object[] { 'a', constantDescList47 };
        Object[] objArray51 = constantDescList35.toArray(objArray50);
        int int52 = constantDescList35.size();
        boolean boolean53 = constantDescList16.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList55.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        int int71 = constantDescList68.lastIndexOf((Object) 1L);
        constantDescList68.ensureCapacity(10);
        boolean boolean74 = constantDescList58.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68);
        boolean boolean75 = constantDescList55.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        boolean boolean76 = constantDescList16.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        int int77 = constantDescList16.size();
        int int78 = constantDescList1.lastIndexOf((Object) int77);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream79 = constantDescList1.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc81 = constantDescList1.remove(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 2 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(constantDescArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(constantDescArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str37, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj49), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 16 + "'", int52 == 16);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 27 + "'", int77 == 27);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream79);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList2.listIterator();
        boolean boolean4 = constantDescList2.isEmpty();
        int int5 = constantDescList1.indexOf((Object) boolean4);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 100, (-1.0d), 100, 100.0f, 16, 5, "hi!", 3, 10.0f, 10.0f, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]", 16, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[]", 0, "[null]", 0, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[null]", 0, 100L, 10L, (-1.0f), 1L, 10L, "[null]", 8, 16, "[]", 1L, 8, 10L, 1.0d, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        boolean boolean49 = constantDescList8.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc52 = constantDescList8.get(27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 27 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        int int23 = constantDescList20.lastIndexOf((Object) 1L);
        constantDescList20.ensureCapacity(10);
        Object[] objArray26 = constantDescList20.toArray();
        boolean boolean28 = constantDescList20.add((java.lang.constant.ConstantDesc) 100);
        boolean boolean29 = constantDescList2.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20);
        java.lang.constant.ConstantDesc[] constantDescArray31 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList32, constantDescArray31);
        java.lang.constant.ConstantDesc constantDesc35 = null;
        java.lang.constant.ConstantDesc constantDesc36 = constantDescList32.set(0, constantDesc35);
        Object[] objArray37 = constantDescList32.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor39 = constantDescList38.listIterator();
        boolean boolean40 = constantDescList32.remove((Object) constantDescList38);
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 100, (-1.0d), 100, 100.0f, 16, 5, "hi!", 3, 10.0f, 10.0f, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]", 16, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[]", 0, "[null]", 0, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[null]", 0, 100L, 10L, (-1.0f), 1L, 10L, "[null]", 8, 16, "[]", 1L, 8, 10L, 1.0d, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        boolean boolean79 = constantDescList38.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
        boolean boolean81 = constantDescList20.equals((Object) constantDescList80);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(constantDescArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + constantDesc36 + "' != '" + 0L + "'", constantDesc36, 0L);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        Object obj56 = constantDescList54.clone();
        Object[] objArray57 = new Object[] { 'a', constantDescList54 };
        Object[] objArray58 = constantDescList42.toArray(objArray57);
        int int59 = constantDescList42.size();
        boolean boolean60 = constantDescList23.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream61 = constantDescList42.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray63 = constantDescList62.toArray();
        boolean boolean64 = constantDescList62.isEmpty();
        boolean boolean65 = constantDescList42.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean66 = constantDescList8.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        Object[] objArray67 = constantDescList8.toArray();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(constantDescStream61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator58 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList56.replaceAll(constantDescUnaryOperator58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        String str16 = constantDescList9.toString();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream19 = constantDescList17.parallelStream();
        boolean boolean20 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        constantDescList9.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        String str41 = constantDescList39.toString();
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51, constantDescArray50);
        Object obj53 = constantDescList51.clone();
        Object[] objArray54 = new Object[] { 'a', constantDescList51 };
        Object[] objArray55 = constantDescList39.toArray(objArray54);
        int int56 = constantDescList39.size();
        java.lang.constant.ConstantDesc[] constantDescArray74 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList75 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList75, constantDescArray74);
        String str77 = constantDescList75.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream78 = constantDescList75.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator79 = constantDescList75.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray88 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList89 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList89, constantDescArray88);
        int int92 = constantDescList89.lastIndexOf((Object) 1L);
        constantDescList89.ensureCapacity(10);
        Object obj95 = constantDescList89.clone();
        boolean boolean96 = constantDescList75.contains((Object) constantDescList89);
        boolean boolean97 = constantDescList39.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList89);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream98 = constantDescList89.parallelStream();
        int int99 = constantDescList9.indexOf((Object) constantDescStream98);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str16, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str41, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56 == 16);
        org.junit.Assert.assertNotNull(constantDescArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str77, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream78);
        org.junit.Assert.assertNotNull(constantDescSpliterator79);
        org.junit.Assert.assertNotNull(constantDescArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj95), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(constantDescStream98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        Object obj56 = constantDescList54.clone();
        Object[] objArray57 = new Object[] { 'a', constantDescList54 };
        Object[] objArray58 = constantDescList42.toArray(objArray57);
        int int59 = constantDescList42.size();
        boolean boolean60 = constantDescList23.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream61 = constantDescList42.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray63 = constantDescList62.toArray();
        boolean boolean64 = constantDescList62.isEmpty();
        boolean boolean65 = constantDescList42.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean66 = constantDescList8.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc68 = constantDescList8.remove(100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(constantDescStream61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        constantDescList2.add((int) (byte) 1, (java.lang.constant.ConstantDesc) 2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc12 = constantDescList2.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.util.ArrayList<java.lang.invoke.TypeDescriptor.OfField<Class<?>>> wildcardClassOfFieldList1 = new java.util.ArrayList<java.lang.invoke.TypeDescriptor.OfField<Class<?>>>(8);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        constantDescList17.add(12, (java.lang.constant.ConstantDesc) 100.0d);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor45 = constantDescList17.listIterator(0);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertNotNull(constantDescItor45);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor55 = constantDescList51.listIterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray74 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList75 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList75, constantDescArray74);
        String str77 = constantDescList75.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream78 = constantDescList75.parallelStream();
        int int79 = constantDescList57.lastIndexOf((Object) constantDescList75);
        java.util.stream.Stream[] streamArray81 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray82 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray81;
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray83 = constantDescList57.toArray((java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray81);
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray84 = constantDescList51.toArray(constantDescStreamArray83);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream85 = constantDescList51.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescItor55);
        org.junit.Assert.assertNotNull(constantDescArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str77, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(streamArray81);
        org.junit.Assert.assertNotNull(constantDescStreamArray82);
        org.junit.Assert.assertNotNull(constantDescStreamArray83);
        org.junit.Assert.assertNotNull(constantDescStreamArray84);
        org.junit.Assert.assertNotNull(constantDescStream85);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        boolean boolean7 = constantDescList2.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream10 = constantDescList9.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray21 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList22 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22, constantDescArray21);
        int int25 = constantDescList22.lastIndexOf((Object) 1L);
        constantDescList22.ensureCapacity(10);
        boolean boolean28 = constantDescList12.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22);
        boolean boolean29 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12);
        boolean boolean30 = constantDescList2.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(constantDescStream10);
        org.junit.Assert.assertNotNull(constantDescArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get((int) (short) 0);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        String str49 = constantDescList47.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList47.parallelStream();
        int int51 = constantDescList29.lastIndexOf((Object) constantDescList47);
        java.util.stream.Stream[] streamArray53 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray54 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray53;
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray55 = constantDescList29.toArray((java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray53);
        int int56 = constantDescList17.indexOf((Object) streamArray53);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 10 + "'", constantDesc27, 10);
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str49, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(streamArray53);
        org.junit.Assert.assertNotNull(constantDescStreamArray54);
        org.junit.Assert.assertNotNull(constantDescStreamArray55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        Object[] objArray39 = constantDescList31.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc41 = constantDescList31.remove(27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 27 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        boolean boolean51 = constantDescList31.isEmpty();
        java.lang.constant.ConstantDesc constantDesc53 = constantDescList31.remove((int) (byte) 1);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + constantDesc53 + "' != '" + 1 + "'", constantDesc53, 1);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        java.lang.constant.ConstantDesc constantDesc23 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.add(3, constantDesc23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator4 = constantDescList0.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        boolean boolean12 = constantDescList7.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream15 = constantDescList14.parallelStream();
        boolean boolean16 = constantDescList7.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        Iterable[] iterableArray18 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray19 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray18;
        constantDescIterableArray19[0] = constantDescList7;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray22 = constantDescList0.toArray(constantDescIterableArray19);
        constantDescList0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList0.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator4);
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(constantDescStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(iterableArray18);
        org.junit.Assert.assertNotNull(constantDescIterableArray19);
        org.junit.Assert.assertNotNull(constantDescIterableArray22);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream38 = constantDescList37.parallelStream();
        Object obj39 = constantDescList37.clone();
        boolean boolean40 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator41 = constantDescList37.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList37.add((int) (short) 10, (java.lang.constant.ConstantDesc) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(constantDescStream38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator41);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray19 = constantDescList18.toArray();
        int int20 = constantDescList18.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList23 = constantDescList18.subList((int) (short) 0, (int) (byte) 0);
        boolean boolean24 = constantDescList9.contains((Object) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc27 = constantDescList9.set((int) (short) 100, (java.lang.constant.ConstantDesc) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constantDescList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 0);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray3 = constantDescList2.toArray();
        boolean boolean4 = constantDescList2.isEmpty();
        int int5 = constantDescList2.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator6 = constantDescList2.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        java.lang.constant.ConstantDesc constantDesc12 = null;
        java.lang.constant.ConstantDesc constantDesc13 = constantDescList9.set(0, constantDesc12);
        boolean boolean14 = constantDescList9.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList16 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream17 = constantDescList16.parallelStream();
        boolean boolean18 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList16);
        Iterable[] iterableArray20 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray21 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray20;
        constantDescIterableArray21[0] = constantDescList9;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray24 = constantDescList2.toArray(constantDescIterableArray21);
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        String str58 = constantDescList56.toString();
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        Object obj70 = constantDescList68.clone();
        Object[] objArray71 = new Object[] { 'a', constantDescList68 };
        Object[] objArray72 = constantDescList56.toArray(objArray71);
        int int73 = constantDescList56.size();
        boolean boolean74 = constantDescList37.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList56.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray77 = constantDescList76.toArray();
        boolean boolean78 = constantDescList76.isEmpty();
        boolean boolean79 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean80 = constantDescList2.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean81 = constantDescList1.equals((Object) boolean80);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator6);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + constantDesc13 + "' != '" + 0L + "'", constantDesc13, 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(constantDescStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(iterableArray20);
        org.junit.Assert.assertNotNull(constantDescIterableArray21);
        org.junit.Assert.assertNotNull(constantDescIterableArray24);
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 16 + "'", int73 == 16);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        constantDescList0.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray6 = constantDescList5.toArray();
        boolean boolean7 = constantDescList5.isEmpty();
        int int8 = constantDescList5.size();
        constantDescList5.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream12 = constantDescList11.parallelStream();
        boolean boolean13 = constantDescList5.remove((Object) constantDescStream12);
        boolean boolean14 = constantDescList0.remove((Object) constantDescList5);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream18 = constantDescList17.stream();
        Object[] objArray19 = constantDescList17.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList21.stream();
        int int23 = constantDescList17.indexOf((Object) constantDescList21);
        java.lang.constant.ConstantDesc[] constantDescArray40 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41, constantDescArray40);
        String str43 = constantDescList41.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream44 = constantDescList41.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator45 = constantDescList41.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        int int58 = constantDescList55.lastIndexOf((Object) 1L);
        constantDescList55.ensureCapacity(10);
        Object obj61 = constantDescList55.clone();
        boolean boolean62 = constantDescList41.contains((Object) constantDescList55);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator63 = constantDescList41.spliterator();
        boolean boolean64 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        int int79 = constantDescList76.lastIndexOf((Object) 1L);
        constantDescList76.ensureCapacity(10);
        boolean boolean82 = constantDescList66.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        Object obj83 = constantDescList66.clone();
        boolean boolean85 = constantDescList66.add((java.lang.constant.ConstantDesc) 100L);
        boolean boolean86 = constantDescList41.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = constantDescList0.addAll(4, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(constantDescStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(constantDescStream18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str43, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream44);
        org.junit.Assert.assertNotNull(constantDescSpliterator45);
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj61), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj83), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        boolean boolean42 = constantDescList17.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        java.lang.constant.ConstantDesc constantDesc22 = null;
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList19.set(0, constantDesc22);
        Object[] objArray24 = constantDescList19.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList25.listIterator();
        boolean boolean27 = constantDescList19.remove((Object) constantDescList25);
        boolean boolean28 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor30 = constantDescList9.listIterator(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 16, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 0L + "'", constantDesc23, 0L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        String str22 = constantDescList4.toString();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator23 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList4.replaceAll(constantDescUnaryOperator23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(0);
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList33.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray54 = constantDescList53.toArray();
        boolean boolean55 = constantDescList53.isEmpty();
        boolean boolean56 = constantDescList33.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor59 = constantDescList53.listIterator(0);
        int int60 = constantDescList1.indexOf((Object) constantDescItor59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList63 = constantDescList1.subList((int) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(constantDescItor59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        int int56 = constantDescList31.size();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator57 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList31.replaceAll(constantDescUnaryOperator57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56 == 16);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList5.stream();
        int int7 = constantDescList1.indexOf((Object) constantDescList5);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList1.parallelStream();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream8);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.lang.constant.ConstantDesc[] constantDescArray21 = new java.lang.constant.ConstantDesc[] { 0, 12, 100.0d, 5, (-1.0d), "[null]", 100.0d, "hi!", "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", (-1), 0.0d, 12, "", (-1), 100.0f, 100, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]", 10, 1, 1L, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList22 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22, constantDescArray21);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream24 = constantDescList22.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(constantDescStream24);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray22 = constantDescList21.toArray();
        boolean boolean23 = constantDescList21.isEmpty();
        int int24 = constantDescList21.size();
        boolean boolean25 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get(8);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor28 = constantDescList17.iterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        String[] strArray35 = new String[] { "", "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]", "[100, 100.0, hi!, 1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!, 10.0]", "", "" };
        // The following exception was thrown during execution in test generation
        try {
            Comparable<String>[] strComparableArray36 = constantDescList29.toArray((Comparable<String>[]) strArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.String");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 0 + "'", constantDesc27, 0);
        org.junit.Assert.assertNotNull(constantDescItor28);
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        Object[] objArray18 = constantDescList11.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList20.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        int int36 = constantDescList33.lastIndexOf((Object) 1L);
        constantDescList33.ensureCapacity(10);
        boolean boolean39 = constantDescList23.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean41 = constantDescList33.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList33.trimToSize();
        boolean boolean43 = constantDescList20.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean44 = constantDescList11.contains((Object) constantDescList33);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor46 = constantDescList11.listIterator(3);
        Object obj47 = constantDescList11.clone();
        constantDescList11.clear();
        constantDescList11.trimToSize();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(constantDescItor46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        constantDescList0.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray14 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15, constantDescArray14);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        String str36 = constantDescList34.toString();
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        Object obj48 = constantDescList46.clone();
        Object[] objArray49 = new Object[] { 'a', constantDescList46 };
        Object[] objArray50 = constantDescList34.toArray(objArray49);
        int int51 = constantDescList34.size();
        boolean boolean52 = constantDescList15.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream53 = constantDescList34.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray55 = constantDescList54.toArray();
        boolean boolean56 = constantDescList54.isEmpty();
        boolean boolean57 = constantDescList34.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream58 = constantDescList34.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean60 = constantDescList34.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray78 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList79 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79, constantDescArray78);
        String str81 = constantDescList79.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList79.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList79.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream84 = constantDescList79.parallelStream();
        boolean boolean85 = constantDescList61.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79);
        constantDescList61.ensureCapacity(8);
        java.lang.constant.ConstantDesc constantDesc89 = null;
        constantDescList61.add((int) (short) 10, constantDesc89);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator91 = constantDescList61.spliterator();
        boolean boolean92 = constantDescList34.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream93 = constantDescList34.parallelStream();
        constantDescList34.clear();
        boolean boolean95 = constantDescList0.remove((Object) constantDescList34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc98 = constantDescList0.set(1, (java.lang.constant.ConstantDesc) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str36, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 16 + "'", int51 == 16);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(constantDescStream53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(constantDescStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(constantDescArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str81, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream82);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertNotNull(constantDescStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(constantDescStream93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean22 = constantDescList14.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList14.trimToSize();
        boolean boolean24 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean26 = constantDescList1.add((java.lang.constant.ConstantDesc) 2);
        java.lang.constant.ConstantDesc constantDesc27 = null;
        boolean boolean28 = constantDescList1.add(constantDesc27);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        Object[] objArray26 = constantDescList1.toArray();
        int int27 = constantDescList1.size();
        boolean boolean29 = constantDescList1.add((java.lang.constant.ConstantDesc) (-1.0f));
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        String str41 = constantDescList39.toString();
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51, constantDescArray50);
        Object obj53 = constantDescList51.clone();
        Object[] objArray54 = new Object[] { 'a', constantDescList51 };
        Object[] objArray55 = constantDescList39.toArray(objArray54);
        int int56 = constantDescList39.size();
        boolean boolean57 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        int int59 = constantDescList39.lastIndexOf((Object) (-1.0f));
        boolean boolean60 = constantDescList2.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream61 = constantDescList39.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str41, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56 == 16);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(constantDescStream61);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        Object obj20 = null;
        int int21 = constantDescList11.indexOf(obj20);
        java.util.List<java.lang.constant.ConstantDesc> constantDescList24 = constantDescList11.subList((int) (byte) 1, 2);
        String str25 = constantDescList11.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList11.stream();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(constantDescList24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]" + "'", str25, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream26);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray21 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList22 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22, constantDescArray21);
        String str24 = constantDescList22.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList22.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator26 = constantDescList22.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray35 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36, constantDescArray35);
        int int39 = constantDescList36.lastIndexOf((Object) 1L);
        constantDescList36.ensureCapacity(10);
        Object obj42 = constantDescList36.clone();
        boolean boolean43 = constantDescList22.contains((Object) constantDescList36);
        constantDescList22.clear();
        Object[] objArray45 = constantDescList22.toArray();
        boolean boolean46 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22);
        constantDescList22.ensureCapacity(2);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream25);
        org.junit.Assert.assertNotNull(constantDescSpliterator26);
        org.junit.Assert.assertNotNull(constantDescArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj42), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.add((java.lang.constant.ConstantDesc) (-1L));
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        Object obj26 = constantDescList17.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray28 = constantDescList27.toArray();
        boolean boolean29 = constantDescList27.isEmpty();
        int int30 = constantDescList27.size();
        constantDescList27.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray33 = constantDescList32.toArray();
        boolean boolean34 = constantDescList32.isEmpty();
        int int35 = constantDescList32.size();
        constantDescList32.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream39 = constantDescList38.parallelStream();
        boolean boolean40 = constantDescList32.remove((Object) constantDescStream39);
        boolean boolean41 = constantDescList27.remove((Object) constantDescList32);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        int int43 = constantDescList17.indexOf((Object) constantDescList42);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(constantDescStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList12.listIterator();
        String str74 = constantDescList12.toString();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator75 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList12.replaceAll(constantDescUnaryOperator75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str74, "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList0.listIterator((int) (byte) 0);
        constantDescList0.ensureCapacity((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor30 = constantDescList0.listIterator((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor26);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.List<java.lang.constant.ConstantDesc> constantDescList52 = constantDescList31.subList((int) (byte) 0, 5);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescList52);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray19 = constantDescList18.toArray();
        int int20 = constantDescList18.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList23 = constantDescList18.subList((int) (short) 0, (int) (byte) 0);
        boolean boolean24 = constantDescList9.contains((Object) (byte) 0);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        int int37 = constantDescList34.lastIndexOf((Object) 1L);
        constantDescList34.ensureCapacity(10);
        Object obj40 = constantDescList34.clone();
        constantDescList34.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor43 = constantDescList34.iterator();
        Object obj44 = constantDescList34.clone();
        java.lang.constant.ConstantDesc[] constantDescArray61 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62, constantDescArray61);
        String str64 = constantDescList62.toString();
        constantDescList62.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean69 = constantDescList62.add((java.lang.constant.ConstantDesc) 16);
        Object obj70 = constantDescList62.clone();
        boolean boolean71 = constantDescList34.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean72 = constantDescList9.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor73 = constantDescList9.listIterator();
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        java.lang.constant.ConstantDesc constantDesc80 = null;
        java.lang.constant.ConstantDesc constantDesc81 = constantDescList77.set(0, constantDesc80);
        constantDescList77.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList77.stream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor85 = constantDescList77.listIterator(0);
        boolean boolean86 = constantDescList9.addAll(8, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(constantDescList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj44), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str64, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(constantDescItor73);
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + constantDesc81 + "' != '" + 0L + "'", constantDesc81, 0L);
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertNotNull(constantDescItor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        int int76 = constantDescList67.size();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream77 = constantDescList67.stream();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream78 = constantDescList67.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(constantDescStream77);
        org.junit.Assert.assertNotNull(constantDescStream78);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        int int52 = constantDescList31.lastIndexOf((Object) 0.0d);
        java.util.stream.Stream[][] streamArray54 = new java.util.stream.Stream[0][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[][] constantDescStreamArray55 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[][]) streamArray54;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Stream<java.lang.constant.ConstantDesc>[][] constantDescStreamArray56 = constantDescList31.toArray(constantDescStreamArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, [Ljava.util.stream.Stream;");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 12 + "'", int52 == 12);
        org.junit.Assert.assertNotNull(streamArray54);
        org.junit.Assert.assertNotNull(constantDescStreamArray55);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor36 = constantDescList17.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc39 = constantDescList17.set(100, (java.lang.constant.ConstantDesc) 27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(constantDescItor36);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get((int) (short) 0);
        constantDescList17.clear();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 10 + "'", constantDesc27, 10);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        java.lang.constant.ConstantDesc constantDesc77 = null;
        java.lang.constant.ConstantDesc constantDesc78 = constantDescList67.set((int) (byte) 0, constantDesc77);
        Object obj79 = null;
        boolean boolean80 = constantDescList67.remove(obj79);
        String str81 = constantDescList67.toString();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + constantDesc78 + "' != '" + 0 + "'", constantDesc78, 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str81, "[100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        constantDescList1.ensureCapacity((int) '4');
        constantDescList1.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList1);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        java.lang.constant.ConstantDesc[] constantDescArray37 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38, constantDescArray37);
        String str40 = constantDescList38.toString();
        java.lang.constant.ConstantDesc[] constantDescArray49 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50, constantDescArray49);
        Object obj52 = constantDescList50.clone();
        Object[] objArray53 = new Object[] { 'a', constantDescList50 };
        Object[] objArray54 = constantDescList38.toArray(objArray53);
        int int55 = constantDescList38.size();
        boolean boolean56 = constantDescList19.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream57 = constantDescList38.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray59 = constantDescList58.toArray();
        boolean boolean60 = constantDescList58.isEmpty();
        boolean boolean61 = constantDescList38.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream62 = constantDescList38.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean64 = constantDescList38.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList63);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray82 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83, constantDescArray82);
        String str85 = constantDescList83.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream86 = constantDescList83.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator87 = constantDescList83.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream88 = constantDescList83.parallelStream();
        boolean boolean89 = constantDescList65.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83);
        constantDescList65.ensureCapacity(8);
        java.lang.constant.ConstantDesc constantDesc93 = null;
        constantDescList65.add((int) (short) 10, constantDesc93);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator95 = constantDescList65.spliterator();
        boolean boolean96 = constantDescList38.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream97 = constantDescList38.parallelStream();
        constantDescList38.clear();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean99 = constantDescList1.addAll((int) '#', (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(constantDescArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str40, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj52), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 16 + "'", int55 == 16);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(constantDescStream57);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescStream62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(constantDescArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str85, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream86);
        org.junit.Assert.assertNotNull(constantDescSpliterator87);
        org.junit.Assert.assertNotNull(constantDescStream88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(constantDescStream97);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(0);
        Object[] objArray2 = constantDescList1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor4 = constantDescList1.listIterator((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray21 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList22 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22, constantDescArray21);
        String str24 = constantDescList22.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList22.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator26 = constantDescList22.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray35 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36, constantDescArray35);
        int int39 = constantDescList36.lastIndexOf((Object) 1L);
        constantDescList36.ensureCapacity(10);
        Object obj42 = constantDescList36.clone();
        boolean boolean43 = constantDescList22.contains((Object) constantDescList36);
        constantDescList22.clear();
        Object[] objArray45 = constantDescList22.toArray();
        boolean boolean46 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList49 = constantDescList4.subList(10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(0)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream25);
        org.junit.Assert.assertNotNull(constantDescSpliterator26);
        org.junit.Assert.assertNotNull(constantDescArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj42), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.util.ArrayList<java.util.Collection<java.lang.constant.ConstantDesc>> constantDescCollectionList1 = new java.util.ArrayList<java.util.Collection<java.lang.constant.ConstantDesc>>((int) (byte) 10);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList5.stream();
        int int7 = constantDescList1.indexOf((Object) constantDescList5);
        java.lang.constant.ConstantDesc[] constantDescArray24 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25, constantDescArray24);
        String str27 = constantDescList25.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList25.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator29 = constantDescList25.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        Object obj45 = constantDescList39.clone();
        boolean boolean46 = constantDescList25.contains((Object) constantDescList39);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator47 = constantDescList25.spliterator();
        boolean boolean48 = constantDescList5.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray59 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60, constantDescArray59);
        int int63 = constantDescList60.lastIndexOf((Object) 1L);
        constantDescList60.ensureCapacity(10);
        boolean boolean66 = constantDescList50.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60);
        Object obj67 = constantDescList50.clone();
        boolean boolean69 = constantDescList50.add((java.lang.constant.ConstantDesc) 100L);
        boolean boolean70 = constantDescList25.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(0);
        boolean boolean74 = constantDescList50.addAll((int) (short) 1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        String str75 = constantDescList50.toString();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str27, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(constantDescSpliterator29);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(constantDescArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[100]" + "'", str75, "[100]");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        int int23 = constantDescList20.lastIndexOf((Object) 1L);
        constantDescList20.ensureCapacity(10);
        Object[] objArray26 = constantDescList20.toArray();
        boolean boolean28 = constantDescList20.add((java.lang.constant.ConstantDesc) 100);
        boolean boolean29 = constantDescList2.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20);
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        String str45 = constantDescList39.toString();
        int int46 = constantDescList2.lastIndexOf((Object) constantDescList39);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str45, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor22 = constantDescList17.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList24 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList24.stream();
        Object[] objArray26 = constantDescList24.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream29 = constantDescList28.stream();
        int int30 = constantDescList24.indexOf((Object) constantDescList28);
        boolean boolean31 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList24);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray33 = constantDescList32.toArray();
        int int34 = constantDescList32.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList37 = constantDescList32.subList((int) (short) 0, (int) (byte) 0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream38 = constantDescList32.stream();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor39 = constantDescList32.iterator();
        boolean boolean40 = constantDescList17.contains((Object) constantDescList32);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor42 = constantDescList32.listIterator(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescItor22);
        org.junit.Assert.assertNotNull(constantDescStream25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(constantDescStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(constantDescList37);
        org.junit.Assert.assertNotNull(constantDescStream38);
        org.junit.Assert.assertNotNull(constantDescItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList12.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList12.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList69.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator73 = constantDescList69.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList69.parallelStream();
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 0.0d);
        boolean boolean77 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69);
        boolean boolean78 = constantDescList12.isEmpty();
        boolean boolean80 = constantDescList12.contains((Object) 5);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertNotNull(constantDescSpliterator73);
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        java.lang.constant.ConstantDesc constantDesc22 = null;
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList19.set(0, constantDesc22);
        Object[] objArray24 = constantDescList19.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList25.listIterator();
        boolean boolean27 = constantDescList19.remove((Object) constantDescList25);
        boolean boolean28 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream29 = constantDescList9.stream();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 0L + "'", constantDesc23, 0L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(constantDescStream29);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList0.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescStream25);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        java.lang.constant.ConstantDesc constantDesc22 = null;
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList19.set(0, constantDesc22);
        Object[] objArray24 = constantDescList19.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList25.listIterator();
        boolean boolean27 = constantDescList19.remove((Object) constantDescList25);
        boolean boolean28 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList30 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray47 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList48 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48, constantDescArray47);
        String str50 = constantDescList48.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream51 = constantDescList48.parallelStream();
        int int52 = constantDescList30.lastIndexOf((Object) constantDescList48);
        java.util.stream.Stream[] streamArray54 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray55 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray54;
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray56 = constantDescList30.toArray((java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray54);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList30);
        boolean boolean58 = constantDescList19.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc61 = constantDescList19.set(5, (java.lang.constant.ConstantDesc) "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 5 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 0L + "'", constantDesc23, 0L);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(constantDescArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str50, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(streamArray54);
        org.junit.Assert.assertNotNull(constantDescStreamArray55);
        org.junit.Assert.assertNotNull(constantDescStreamArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean74 = constantDescList66.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList66.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList66.set(0, (java.lang.constant.ConstantDesc) 5);
        int int80 = constantDescList31.indexOf((Object) constantDescList66);
        boolean boolean82 = constantDescList31.remove((Object) (-1));
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList31.spliterator();
        int int84 = constantDescList31.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc87 = constantDescList31.set((int) (short) -1, (java.lang.constant.ConstantDesc) "[0, 0.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 16 + "'", int84 == 16);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        String str22 = constantDescList20.toString();
        java.lang.constant.ConstantDesc[] constantDescArray31 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList32, constantDescArray31);
        Object obj34 = constantDescList32.clone();
        Object[] objArray35 = new Object[] { 'a', constantDescList32 };
        Object[] objArray36 = constantDescList20.toArray(objArray35);
        int int37 = constantDescList20.size();
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        String str57 = constantDescList55.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream58 = constantDescList55.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator59 = constantDescList55.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList55.parallelStream();
        boolean boolean61 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55);
        int int62 = constantDescList1.lastIndexOf((Object) constantDescList20);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor63 = constantDescList20.iterator();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str22, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj34), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 16 + "'", int37 == 16);
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str57, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream58);
        org.junit.Assert.assertNotNull(constantDescSpliterator59);
        org.junit.Assert.assertNotNull(constantDescStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(constantDescItor63);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        Object obj56 = constantDescList54.clone();
        Object[] objArray57 = new Object[] { 'a', constantDescList54 };
        Object[] objArray58 = constantDescList42.toArray(objArray57);
        int int59 = constantDescList42.size();
        boolean boolean60 = constantDescList23.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream61 = constantDescList42.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray63 = constantDescList62.toArray();
        boolean boolean64 = constantDescList62.isEmpty();
        boolean boolean65 = constantDescList42.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean66 = constantDescList8.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream67 = constantDescList8.parallelStream();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream68 = constantDescList8.parallelStream();
        constantDescList8.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList8.add((int) (short) -1, (java.lang.constant.ConstantDesc) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(constantDescStream61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(constantDescStream67);
        org.junit.Assert.assertNotNull(constantDescStream68);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc43 = constantDescList17.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc46 = constantDescList17.set((int) (byte) 100, (java.lang.constant.ConstantDesc) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertEquals("'" + constantDesc43 + "' != '" + 1 + "'", constantDesc43, 1);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        Object[] objArray18 = constantDescList11.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList20.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        int int36 = constantDescList33.lastIndexOf((Object) 1L);
        constantDescList33.ensureCapacity(10);
        boolean boolean39 = constantDescList23.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean41 = constantDescList33.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList33.trimToSize();
        boolean boolean43 = constantDescList20.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean44 = constantDescList11.contains((Object) constantDescList33);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor46 = constantDescList11.listIterator(3);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList11.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc49 = constantDescList11.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(constantDescItor46);
        org.junit.Assert.assertNotNull(constantDescStream47);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList1.get(16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 16 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        int int76 = constantDescList67.size();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream77 = constantDescList67.stream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor78 = constantDescList67.listIterator();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(constantDescStream77);
        org.junit.Assert.assertNotNull(constantDescItor78);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        Class<?> wildcardClass11 = constantDescList2.getClass();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList51.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        constantDescList64.ensureCapacity(10);
        boolean boolean70 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean71 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        boolean boolean72 = constantDescList12.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream73 = constantDescList54.parallelStream();
        constantDescList54.ensureCapacity(0);
        constantDescList54.trimToSize();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescStream73);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray58 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59, constantDescArray58);
        String str61 = constantDescList59.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream62 = constantDescList59.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator63 = constantDescList59.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream64 = constantDescList59.parallelStream();
        boolean boolean65 = constantDescList41.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59);
        constantDescList59.trimToSize();
        int int67 = constantDescList17.lastIndexOf((Object) constantDescList59);
        Object[] objArray68 = constantDescList59.toArray();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertNotNull(constantDescArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str61, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream62);
        org.junit.Assert.assertNotNull(constantDescSpliterator63);
        org.junit.Assert.assertNotNull(constantDescStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean22 = constantDescList14.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList14.trimToSize();
        boolean boolean24 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList14.get(1);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 100L + "'", constantDesc26, 100L);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        Object[] objArray18 = constantDescList11.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList20.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        int int36 = constantDescList33.lastIndexOf((Object) 1L);
        constantDescList33.ensureCapacity(10);
        boolean boolean39 = constantDescList23.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean41 = constantDescList33.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList33.trimToSize();
        boolean boolean43 = constantDescList20.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean44 = constantDescList11.contains((Object) constantDescList33);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor46 = constantDescList11.listIterator(3);
        Object obj47 = constantDescList11.clone();
        constantDescList11.clear();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        String str68 = constantDescList66.toString();
        constantDescList66.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean73 = constantDescList66.add((java.lang.constant.ConstantDesc) 16);
        Object obj74 = constantDescList66.clone();
        boolean boolean75 = constantDescList66.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray77 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList78 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList78, constantDescArray77);
        java.lang.constant.ConstantDesc constantDesc81 = null;
        java.lang.constant.ConstantDesc constantDesc82 = constantDescList78.set(0, constantDesc81);
        constantDescList78.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream84 = constantDescList78.stream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor86 = constantDescList78.listIterator(0);
        boolean boolean87 = constantDescList66.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList78);
        boolean boolean88 = constantDescList11.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList78);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(constantDescItor46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str68, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(constantDescArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + constantDesc82 + "' != '" + 0L + "'", constantDesc82, 0L);
        org.junit.Assert.assertNotNull(constantDescStream84);
        org.junit.Assert.assertNotNull(constantDescItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        constantDescList0.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray14 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15, constantDescArray14);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        String str36 = constantDescList34.toString();
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        Object obj48 = constantDescList46.clone();
        Object[] objArray49 = new Object[] { 'a', constantDescList46 };
        Object[] objArray50 = constantDescList34.toArray(objArray49);
        int int51 = constantDescList34.size();
        boolean boolean52 = constantDescList15.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream53 = constantDescList34.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray55 = constantDescList54.toArray();
        boolean boolean56 = constantDescList54.isEmpty();
        boolean boolean57 = constantDescList34.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream58 = constantDescList34.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean60 = constantDescList34.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray78 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList79 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79, constantDescArray78);
        String str81 = constantDescList79.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList79.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList79.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream84 = constantDescList79.parallelStream();
        boolean boolean85 = constantDescList61.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79);
        constantDescList61.ensureCapacity(8);
        java.lang.constant.ConstantDesc constantDesc89 = null;
        constantDescList61.add((int) (short) 10, constantDesc89);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator91 = constantDescList61.spliterator();
        boolean boolean92 = constantDescList34.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream93 = constantDescList34.parallelStream();
        constantDescList34.clear();
        boolean boolean95 = constantDescList0.remove((Object) constantDescList34);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream96 = constantDescList0.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str36, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 16 + "'", int51 == 16);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(constantDescStream53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(constantDescStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(constantDescArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str81, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream82);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertNotNull(constantDescStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(constantDescStream93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(constantDescStream96);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList42.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator46 = constantDescList42.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList42.parallelStream();
        Class<?> wildcardClass48 = constantDescList42.getClass();
        boolean boolean49 = constantDescList17.equals((Object) constantDescList42);
        constantDescList17.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc52 = constantDescList17.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 32 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream45);
        org.junit.Assert.assertNotNull(constantDescSpliterator46);
        org.junit.Assert.assertNotNull(constantDescStream47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        String str74 = constantDescList72.toString();
        java.lang.constant.ConstantDesc[] constantDescArray83 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList84 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84, constantDescArray83);
        Object obj86 = constantDescList84.clone();
        Object[] objArray87 = new Object[] { 'a', constantDescList84 };
        Object[] objArray88 = constantDescList72.toArray(objArray87);
        int int89 = constantDescList72.size();
        boolean boolean90 = constantDescList53.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream91 = constantDescList72.stream();
        boolean boolean92 = constantDescList31.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        Object obj93 = constantDescList72.clone();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str74, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 16 + "'", int89 == 16);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(constantDescStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj93), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        Object obj8 = null;
        boolean boolean9 = constantDescList2.equals(obj8);
        java.lang.constant.ConstantDesc constantDesc11 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList2.add((int) (byte) -1, constantDesc11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.List<java.lang.constant.ConstantDesc> constantDescList60 = constantDescList31.subList(2, 8);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(constantDescList60);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc43 = constantDescList17.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        int int45 = constantDescList17.lastIndexOf((Object) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        Object obj46 = constantDescList17.clone();
        java.util.stream.Stream[] streamArray48 = new java.util.stream.Stream[0];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[] constantDescStreamArray49 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[]) streamArray48;
        java.util.stream.Stream[][] streamArray51 = new java.util.stream.Stream[1][];
        @SuppressWarnings("unchecked")
        java.util.stream.Stream<java.lang.constant.ConstantDesc>[][] constantDescStreamArray52 = (java.util.stream.Stream<java.lang.constant.ConstantDesc>[][]) streamArray51;
        constantDescStreamArray52[0] = streamArray48;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.Stream<java.lang.constant.ConstantDesc>[][] constantDescStreamArray55 = constantDescList17.toArray(constantDescStreamArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, [Ljava.util.stream.Stream;");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertEquals("'" + constantDesc43 + "' != '" + 1 + "'", constantDesc43, 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[10, -1.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj46), "[10, -1.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[10, -1.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(streamArray48);
        org.junit.Assert.assertNotNull(constantDescStreamArray49);
        org.junit.Assert.assertNotNull(streamArray51);
        org.junit.Assert.assertNotNull(constantDescStreamArray52);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        Object obj19 = constantDescList9.clone();
        boolean boolean20 = constantDescList9.isEmpty();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = constantDescList9.removeAll(constantDescCollection21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.lang.constant.ConstantDesc[] constantDescArray7 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList8, constantDescArray7);
        Object obj10 = constantDescList8.clone();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor12 = constantDescList8.listIterator(4);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor13 = constantDescList8.listIterator();
        java.lang.constant.ConstantDesc constantDesc15 = constantDescList8.get((int) (byte) 0);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream36 = constantDescList33.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray38 = constantDescList37.toArray();
        boolean boolean39 = constantDescList37.isEmpty();
        int int40 = constantDescList37.size();
        boolean boolean41 = constantDescList33.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        java.lang.constant.ConstantDesc[] constantDescArray43 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList44 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList44, constantDescArray43);
        java.lang.constant.ConstantDesc constantDesc47 = null;
        java.lang.constant.ConstantDesc constantDesc48 = constantDescList44.set(0, constantDesc47);
        Object[] objArray49 = constantDescList44.toArray();
        int int50 = constantDescList33.indexOf((Object) constantDescList44);
        boolean boolean51 = constantDescList8.equals((Object) constantDescList44);
        org.junit.Assert.assertNotNull(constantDescArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj10), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(constantDescItor12);
        org.junit.Assert.assertNotNull(constantDescItor13);
        org.junit.Assert.assertEquals("'" + constantDesc15 + "' != '" + 100.0d + "'", constantDesc15, 100.0d);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream36);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(constantDescArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + constantDesc48 + "' != '" + 0L + "'", constantDesc48, 0L);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[null]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor21 = constantDescList11.listIterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList11.parallelStream();
        java.lang.constant.ConstantDesc constantDesc24 = constantDescList11.remove((int) (short) 0);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescItor21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertEquals("'" + constantDesc24 + "' != '" + 0 + "'", constantDesc24, 0);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        Object obj2 = constantDescList1.clone();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator3 = constantDescList1.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray14 = new java.lang.constant.ConstantDesc[] { 3, 1L, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", (-1L), 100.0d, 3, 16, 0.0f, 2 };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15, constantDescArray14);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray18 = constantDescList17.toArray();
        int int19 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor21 = constantDescList17.listIterator(0);
        int int22 = constantDescList15.lastIndexOf((Object) 0);
        java.lang.constant.ConstantDesc constantDesc24 = constantDescList15.remove((int) (byte) 0);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList15.remove(4);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor27 = constantDescList15.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = constantDescList1.addAll(8, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertNotNull(constantDescSpliterator3);
        org.junit.Assert.assertNotNull(constantDescArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(constantDescItor21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + constantDesc24 + "' != '" + 3 + "'", constantDesc24, 3);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 3 + "'", constantDesc26, 3);
        org.junit.Assert.assertNotNull(constantDescItor27);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.replaceAll(constantDescUnaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        Object[] objArray76 = constantDescList57.toArray();
        boolean boolean77 = constantDescList57.isEmpty();
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection78 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean79 = constantDescList57.addAll(constantDescCollection78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        constantDescList0.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc3 = constantDescList0.remove((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList42.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator46 = constantDescList42.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList42.parallelStream();
        boolean boolean49 = constantDescList42.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor50 = constantDescList42.iterator();
        java.lang.constant.ConstantDesc constantDesc52 = constantDescList42.get((int) (short) 1);
        boolean boolean53 = constantDescList0.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        int int67 = constantDescList64.lastIndexOf((Object) 1L);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = constantDescList0.addAll(100, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream45);
        org.junit.Assert.assertNotNull(constantDescSpliterator46);
        org.junit.Assert.assertNotNull(constantDescStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescItor50);
        org.junit.Assert.assertEquals("'" + constantDesc52 + "' != '" + 1 + "'", constantDesc52, 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean73 = constantDescList54.add((java.lang.constant.ConstantDesc) "hi!");
        boolean boolean74 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = constantDescList17.retainAll(constantDescCollection75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        java.lang.constant.ConstantDesc constantDesc77 = null;
        java.lang.constant.ConstantDesc constantDesc78 = constantDescList67.set((int) (byte) 0, constantDesc77);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream81 = constantDescList80.stream();
        int int82 = constantDescList80.size();
        Object[] objArray83 = constantDescList80.toArray();
        boolean boolean84 = constantDescList67.equals((Object) constantDescList80);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator85 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList80.replaceAll(constantDescUnaryOperator85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + constantDesc78 + "' != '" + 0 + "'", constantDesc78, 0);
        org.junit.Assert.assertNotNull(constantDescStream81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        Object[] objArray36 = constantDescList17.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream57 = constantDescList54.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator58 = constantDescList54.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream59 = constantDescList54.parallelStream();
        boolean boolean61 = constantDescList54.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor62 = constantDescList54.iterator();
        constantDescList54.clear();
        int int64 = constantDescList17.indexOf((Object) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor65 = constantDescList17.listIterator();
        String str66 = constantDescList17.toString();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray84 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList85 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList85, constantDescArray84);
        String str87 = constantDescList85.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream88 = constantDescList85.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator89 = constantDescList85.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream90 = constantDescList85.parallelStream();
        boolean boolean91 = constantDescList67.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList85);
        int int92 = constantDescList17.indexOf((Object) constantDescList85);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream57);
        org.junit.Assert.assertNotNull(constantDescSpliterator58);
        org.junit.Assert.assertNotNull(constantDescStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescItor62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(constantDescItor65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str66, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str87, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream88);
        org.junit.Assert.assertNotNull(constantDescSpliterator89);
        org.junit.Assert.assertNotNull(constantDescStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get((int) (short) 1);
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        String str47 = constantDescList45.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream48 = constantDescList45.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator49 = constantDescList45.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray58 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59, constantDescArray58);
        int int62 = constantDescList59.lastIndexOf((Object) 1L);
        constantDescList59.ensureCapacity(10);
        Object obj65 = constantDescList59.clone();
        boolean boolean66 = constantDescList45.contains((Object) constantDescList59);
        constantDescList45.clear();
        Object[] objArray68 = constantDescList45.toArray();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor69 = constantDescList45.iterator();
        boolean boolean70 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 1 + "'", constantDesc27, 1);
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str47, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream48);
        org.junit.Assert.assertNotNull(constantDescSpliterator49);
        org.junit.Assert.assertNotNull(constantDescArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj65), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(constantDescItor69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor57 = constantDescList51.listIterator(0);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator58 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList51.replaceAll(constantDescUnaryOperator58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescItor57);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc5 = constantDescList0.get((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object[] objArray40 = constantDescList17.toArray();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream41 = constantDescList17.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc43 = constantDescList17.get(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 8 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(constantDescStream41);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc41 = constantDescList17.set(2, (java.lang.constant.ConstantDesc) 10);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator42 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.replaceAll(constantDescUnaryOperator42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc41 + "' != '" + 10.0f + "'", constantDesc41, 10.0f);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        Object[] objArray18 = constantDescList11.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList20.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        int int36 = constantDescList33.lastIndexOf((Object) 1L);
        constantDescList33.ensureCapacity(10);
        boolean boolean39 = constantDescList23.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean41 = constantDescList33.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList33.trimToSize();
        boolean boolean43 = constantDescList20.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        boolean boolean44 = constantDescList11.contains((Object) constantDescList33);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor45 = constantDescList11.listIterator();
        String str46 = constantDescList11.toString();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(constantDescItor45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str46, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        java.lang.constant.ConstantDesc[] constantDescArray57 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58, constantDescArray57);
        String str60 = constantDescList58.toString();
        java.lang.constant.ConstantDesc[] constantDescArray69 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList70, constantDescArray69);
        Object obj72 = constantDescList70.clone();
        Object[] objArray73 = new Object[] { 'a', constantDescList70 };
        Object[] objArray74 = constantDescList58.toArray(objArray73);
        int int75 = constantDescList58.size();
        boolean boolean76 = constantDescList39.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray78 = constantDescList77.toArray();
        boolean boolean79 = constantDescList77.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList80 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.List[] listArray82 = new java.util.List[5];
        @SuppressWarnings("unchecked")
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray83 = (java.util.List<java.lang.constant.ConstantDesc>[]) listArray82;
        constantDescListArray83[0] = constantDescList19;
        constantDescListArray83[1] = constantDescList26;
        constantDescListArray83[2] = constantDescList58;
        constantDescListArray83[3] = constantDescList77;
        constantDescListArray83[4] = constantDescList80;
        java.util.List<java.lang.constant.ConstantDesc>[] constantDescListArray94 = constantDescList1.toArray(constantDescListArray83);
        Object[] objArray95 = constantDescList1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.add(2, (java.lang.constant.ConstantDesc) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(constantDescArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str60, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 16 + "'", int75 == 16);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(listArray82);
        org.junit.Assert.assertNotNull(constantDescListArray83);
        org.junit.Assert.assertNotNull(constantDescListArray94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList5.stream();
        int int7 = constantDescList1.indexOf((Object) constantDescList5);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.replaceAll(constantDescUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList55.add(4, (java.lang.constant.ConstantDesc) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator39 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc constantDesc42 = constantDescList17.set((int) (byte) 10, (java.lang.constant.ConstantDesc) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator39);
        org.junit.Assert.assertEquals("'" + constantDesc42 + "' != '" + 1 + "'", constantDesc42, 1);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList2.stream();
        int int9 = constantDescList2.size();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList12 = constantDescList2.subList(2, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 97");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(constantDescStream8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        int int3 = constantDescList1.size();
        constantDescList1.ensureCapacity((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc8 = constantDescList1.set(4, (java.lang.constant.ConstantDesc) "[100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList18.trimToSize();
        int int26 = constantDescList18.size();
        int int27 = constantDescList18.size();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList18.stream();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 16 + "'", int26 == 16);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 16 + "'", int27 == 16);
        org.junit.Assert.assertNotNull(constantDescStream28);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        int int3 = constantDescList1.size();
        constantDescList1.ensureCapacity((int) '#');
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        java.lang.constant.ConstantDesc[] constantDescArray48 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49, constantDescArray48);
        Object obj51 = constantDescList49.clone();
        Object[] objArray52 = new Object[] { 'a', constantDescList49 };
        Object[] objArray53 = constantDescList37.toArray(objArray52);
        int int54 = constantDescList37.size();
        boolean boolean55 = constantDescList18.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        constantDescList37.clear();
        boolean boolean58 = constantDescList37.remove((Object) (short) 0);
        boolean boolean59 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc61 = constantDescList1.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj51), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 16 + "'", int54 == 16);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        Object[] objArray4 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList6 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean7 = constantDescList6.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        String str41 = constantDescList39.toString();
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51, constantDescArray50);
        Object obj53 = constantDescList51.clone();
        Object[] objArray54 = new Object[] { 'a', constantDescList51 };
        Object[] objArray55 = constantDescList39.toArray(objArray54);
        int int56 = constantDescList39.size();
        boolean boolean57 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList59.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        int int75 = constantDescList72.lastIndexOf((Object) 1L);
        constantDescList72.ensureCapacity(10);
        boolean boolean78 = constantDescList62.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        boolean boolean79 = constantDescList59.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean80 = constantDescList20.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        java.lang.constant.Constable[][] constableArray81 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][] constableArray82 = constantDescList62.toArray(constableArray81);
        boolean boolean83 = constantDescList6.remove((Object) constantDescList62);
        boolean boolean84 = constantDescList1.addAll(0, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList86 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        Object obj87 = constantDescList86.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList89 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(0);
        boolean boolean90 = constantDescList86.contains((Object) 0);
        int int91 = constantDescList1.indexOf((Object) boolean90);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str41, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56 == 16);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(constantDescStream60);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(constableArray81);
        org.junit.Assert.assertNotNull(constableArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj87), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        String str51 = constantDescList31.toString();
        constantDescList31.ensureCapacity((int) (byte) -1);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str51, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.util.ArrayList<Class<?>> wildcardClassList0 = new java.util.ArrayList<Class<?>>();
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList18.trimToSize();
        Object obj26 = null;
        boolean boolean27 = constantDescList18.remove(obj26);
        constantDescList18.clear();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.util.ArrayList<java.lang.constant.ConstantDesc[]> constantDescArrayList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc[]>((int) (byte) 10);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        constantDescList17.clear();
        boolean boolean28 = constantDescList17.add((java.lang.constant.ConstantDesc) 1.0f);
        boolean boolean30 = constantDescList17.contains((Object) ' ');
        Object obj31 = constantDescList17.clone();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream32 = constantDescList17.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[1.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[1.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[1.0]");
        org.junit.Assert.assertNotNull(constantDescStream32);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        Object[] objArray4 = constantDescList1.toArray();
        Class<?> wildcardClass5 = constantDescList1.getClass();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        Object[] objArray25 = constantDescList0.toArray();
        constantDescList0.trimToSize();
        boolean boolean27 = constantDescList0.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList2.replaceAll(constantDescUnaryOperator8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        String str45 = constantDescList43.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream46 = constantDescList43.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator47 = constantDescList43.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray56 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57, constantDescArray56);
        int int60 = constantDescList57.lastIndexOf((Object) 1L);
        constantDescList57.ensureCapacity(10);
        Object obj63 = constantDescList57.clone();
        boolean boolean64 = constantDescList43.contains((Object) constantDescList57);
        constantDescList43.clear();
        Object obj66 = constantDescList43.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43);
        int int68 = constantDescList0.lastIndexOf((Object) constantDescList67);
        java.lang.constant.ConstantDesc[] constantDescArray85 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList86 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList86, constantDescArray85);
        String str88 = constantDescList86.toString();
        constantDescList86.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean93 = constantDescList86.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc95 = constantDescList86.get(10);
        constantDescList86.clear();
        boolean boolean97 = constantDescList67.contains((Object) constantDescList86);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator98 = constantDescList86.spliterator();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str45, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream46);
        org.junit.Assert.assertNotNull(constantDescSpliterator47);
        org.junit.Assert.assertNotNull(constantDescArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj63), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str88, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + constantDesc95 + "' != '" + 0L + "'", constantDesc95, 0L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator98);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList17.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream43 = constantDescList42.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor44 = constantDescList42.listIterator();
        Object[] objArray45 = constantDescList42.toArray();
        int int46 = constantDescList17.indexOf((Object) constantDescList42);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescStream43);
        org.junit.Assert.assertNotNull(constantDescItor44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList25.stream();
        java.lang.constant.ConstantDesc[] constantDescArray43 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList44 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList44, constantDescArray43);
        String str46 = constantDescList44.toString();
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        Object obj58 = constantDescList56.clone();
        Object[] objArray59 = new Object[] { 'a', constantDescList56 };
        Object[] objArray60 = constantDescList44.toArray(objArray59);
        int int61 = constantDescList44.size();
        java.lang.constant.ConstantDesc[] constantDescArray78 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList79 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79, constantDescArray78);
        String str81 = constantDescList79.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList79.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList79.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream84 = constantDescList79.parallelStream();
        boolean boolean85 = constantDescList44.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79);
        int int86 = constantDescList25.lastIndexOf((Object) constantDescList44);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream87 = constantDescList44.parallelStream();
        boolean boolean88 = constantDescList17.contains((Object) constantDescStream87);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor89 = constantDescList17.iterator();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
        org.junit.Assert.assertNotNull(constantDescStream26);
        org.junit.Assert.assertNotNull(constantDescArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str46, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj58), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 16 + "'", int61 == 16);
        org.junit.Assert.assertNotNull(constantDescArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str81, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream82);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertNotNull(constantDescStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(constantDescItor89);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        Object[] objArray11 = constantDescList8.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc14 = constantDescList8.set(16, (java.lang.constant.ConstantDesc) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 16 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList12.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList12.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList69.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator73 = constantDescList69.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList69.parallelStream();
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 0.0d);
        boolean boolean77 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList12.remove((int) '#');
        java.lang.constant.ConstantDesc constantDesc82 = constantDescList12.set(12, (java.lang.constant.ConstantDesc) "[10, 1, 0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertNotNull(constantDescSpliterator73);
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertEquals("'" + constantDesc82 + "' != '" + 1 + "'", constantDesc82, 1);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.get(10);
        Object obj27 = constantDescList17.clone();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 0L + "'", constantDesc26, 0L);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj27), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        Object[] objArray25 = constantDescList0.toArray();
        constantDescList0.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator27 = constantDescList0.spliterator();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator28 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList0.replaceAll(constantDescUnaryOperator28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescSpliterator27);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.lang.constant.ConstantDesc[] constantDescArray14 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15, constantDescArray14);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        String str36 = constantDescList34.toString();
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        Object obj48 = constantDescList46.clone();
        Object[] objArray49 = new Object[] { 'a', constantDescList46 };
        Object[] objArray50 = constantDescList34.toArray(objArray49);
        int int51 = constantDescList34.size();
        boolean boolean52 = constantDescList15.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        constantDescList15.trimToSize();
        constantDescList15.ensureCapacity(100);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor56 = constantDescList15.listIterator();
        boolean boolean57 = constantDescList1.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream59 = constantDescList58.parallelStream();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str36, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 16 + "'", int51 == 16);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(constantDescItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(constantDescStream59);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        boolean boolean42 = constantDescList17.add((java.lang.constant.ConstantDesc) 10);
        java.lang.constant.ConstantDesc constantDesc44 = constantDescList17.get(0);
        Class<?> wildcardClass45 = constantDesc44.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + constantDesc44 + "' != '" + 10 + "'", constantDesc44, 10);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.lang.constant.ConstantDesc[] constantDescArray9 = new java.lang.constant.ConstantDesc[] { 3, 1L, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", (-1L), 100.0d, 3, 16, 0.0f, 2 };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList10 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList10, constantDescArray9);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray13 = constantDescList12.toArray();
        int int14 = constantDescList12.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor16 = constantDescList12.listIterator(0);
        int int17 = constantDescList10.lastIndexOf((Object) 0);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList10.replaceAll(constantDescUnaryOperator18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(constantDescItor16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        String str74 = constantDescList72.toString();
        java.lang.constant.ConstantDesc[] constantDescArray83 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList84 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84, constantDescArray83);
        Object obj86 = constantDescList84.clone();
        Object[] objArray87 = new Object[] { 'a', constantDescList84 };
        Object[] objArray88 = constantDescList72.toArray(objArray87);
        int int89 = constantDescList72.size();
        boolean boolean90 = constantDescList53.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream91 = constantDescList72.stream();
        boolean boolean92 = constantDescList31.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc95 = constantDescList72.set((int) (byte) 100, (java.lang.constant.ConstantDesc) 27);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str74, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 16 + "'", int89 == 16);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(constantDescStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        Object obj19 = constantDescList9.clone();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        constantDescList37.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean44 = constantDescList37.add((java.lang.constant.ConstantDesc) 16);
        Object obj45 = constantDescList37.clone();
        boolean boolean46 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        constantDescList37.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        String str69 = constantDescList67.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream70 = constantDescList67.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator71 = constantDescList67.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList67.parallelStream();
        boolean boolean73 = constantDescList49.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        constantDescList67.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = constantDescList37.addAll((int) 'a', (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 18");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str69, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream70);
        org.junit.Assert.assertNotNull(constantDescSpliterator71);
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray9 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList10 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList10, constantDescArray9);
        int int13 = constantDescList10.lastIndexOf((Object) 1L);
        constantDescList10.ensureCapacity(10);
        Object obj16 = constantDescList10.clone();
        constantDescList10.ensureCapacity(4);
        Object[] objArray19 = constantDescList10.toArray();
        int int20 = constantDescList0.lastIndexOf((Object) objArray19);
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.lang.constant.ConstantDesc constantDesc26 = null;
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList23.set(0, constantDesc26);
        constantDescList23.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream29 = constantDescList23.stream();
        boolean boolean30 = constantDescList0.contains((Object) constantDescStream29);
        constantDescList0.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc33 = constantDescList0.get(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 8 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 0L + "'", constantDesc27, 0L);
        org.junit.Assert.assertNotNull(constantDescStream29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        int int23 = constantDescList20.lastIndexOf((Object) 1L);
        constantDescList20.ensureCapacity(10);
        Object[] objArray26 = constantDescList20.toArray();
        boolean boolean28 = constantDescList20.add((java.lang.constant.ConstantDesc) 100);
        boolean boolean29 = constantDescList2.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList20.replaceAll(constantDescUnaryOperator30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean73 = constantDescList54.add((java.lang.constant.ConstantDesc) "hi!");
        boolean boolean74 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        constantDescList17.trimToSize();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor76 = constantDescList17.listIterator();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(constantDescItor76);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList2.stream();
        int int9 = constantDescList2.size();
        java.lang.constant.ConstantDesc[] constantDescArray26 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27, constantDescArray26);
        String str29 = constantDescList27.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream30 = constantDescList27.parallelStream();
        java.lang.constant.ConstantDesc constantDesc33 = constantDescList27.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        String str34 = constantDescList27.toString();
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        String str68 = constantDescList66.toString();
        java.lang.constant.ConstantDesc[] constantDescArray77 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList78 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList78, constantDescArray77);
        Object obj80 = constantDescList78.clone();
        Object[] objArray81 = new Object[] { 'a', constantDescList78 };
        Object[] objArray82 = constantDescList66.toArray(objArray81);
        int int83 = constantDescList66.size();
        boolean boolean84 = constantDescList47.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream85 = constantDescList66.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList86 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray87 = constantDescList86.toArray();
        boolean boolean88 = constantDescList86.isEmpty();
        boolean boolean89 = constantDescList66.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList86);
        boolean boolean90 = constantDescList27.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList91 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList93 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        constantDescList93.trimToSize();
        boolean boolean95 = constantDescList91.equals((Object) constantDescList93);
        boolean boolean96 = constantDescList2.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList93);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(constantDescStream8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(constantDescArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str29, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream30);
        org.junit.Assert.assertEquals("'" + constantDesc33 + "' != '" + 1 + "'", constantDesc33, 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str34, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str68, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj80), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 16 + "'", int83 == 16);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(constantDescStream85);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        Object[] objArray26 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray28 = constantDescList27.toArray();
        boolean boolean29 = constantDescList27.isEmpty();
        int int30 = constantDescList27.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.lang.constant.ConstantDesc[] constantDescArray48 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49, constantDescArray48);
        String str51 = constantDescList49.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList49.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator53 = constantDescList49.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray62 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList63, constantDescArray62);
        int int66 = constantDescList63.lastIndexOf((Object) 1L);
        constantDescList63.ensureCapacity(10);
        Object obj69 = constantDescList63.clone();
        boolean boolean70 = constantDescList49.contains((Object) constantDescList63);
        constantDescList49.clear();
        Object[] objArray72 = constantDescList49.toArray();
        boolean boolean73 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49);
        constantDescList31.trimToSize();
        boolean boolean75 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor76 = constantDescList31.iterator();
        constantDescList31.clear();
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(constantDescArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str51, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescSpliterator53);
        org.junit.Assert.assertNotNull(constantDescArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj69), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(constantDescItor76);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor18 = constantDescList9.iterator();
        Object obj19 = constantDescList9.clone();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        String str39 = constantDescList37.toString();
        constantDescList37.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean44 = constantDescList37.add((java.lang.constant.ConstantDesc) 16);
        Object obj45 = constantDescList37.clone();
        boolean boolean46 = constantDescList9.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        constantDescList37.trimToSize();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList50 = constantDescList37.subList((int) (byte) 10, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(10) > toIndex(-1)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str39, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        constantDescList17.clear();
        Object obj40 = constantDescList17.clone();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream41 = constantDescList17.stream();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream42 = constantDescList17.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray44 = constantDescList43.toArray();
        boolean boolean45 = constantDescList43.isEmpty();
        int int46 = constantDescList43.size();
        constantDescList43.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList49.parallelStream();
        boolean boolean51 = constantDescList43.remove((Object) constantDescStream50);
        boolean boolean52 = constantDescList17.contains((Object) constantDescList43);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        java.lang.constant.ConstantDesc constantDesc59 = null;
        java.lang.constant.ConstantDesc constantDesc60 = constantDescList56.set(0, constantDesc59);
        boolean boolean61 = constantDescList56.isEmpty();
        boolean boolean63 = constantDescList56.add((java.lang.constant.ConstantDesc) "[]");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = constantDescList17.addAll(3, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 3, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertNotNull(constantDescStream41);
        org.junit.Assert.assertNotNull(constantDescStream42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + constantDesc60 + "' != '" + 0L + "'", constantDesc60, 0L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        Object[] objArray76 = constantDescList57.toArray();
        boolean boolean78 = constantDescList57.add((java.lang.constant.ConstantDesc) (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor80 = constantDescList57.listIterator((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 52, Size: 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get((int) (short) 0);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        boolean boolean45 = constantDescList29.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        Object[] objArray46 = constantDescList39.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList48 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream49 = constantDescList48.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray60 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61, constantDescArray60);
        int int64 = constantDescList61.lastIndexOf((Object) 1L);
        constantDescList61.ensureCapacity(10);
        boolean boolean67 = constantDescList51.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        boolean boolean69 = constantDescList61.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList61.trimToSize();
        boolean boolean71 = constantDescList48.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        boolean boolean72 = constantDescList39.contains((Object) constantDescList61);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor74 = constantDescList39.listIterator(3);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList39.parallelStream();
        boolean boolean76 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add((int) (byte) -1, (java.lang.constant.ConstantDesc) "[0, 0.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 5");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 10 + "'", constantDesc27, 10);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream49);
        org.junit.Assert.assertNotNull(constantDescArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor74);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        constantDescList9.ensureCapacity((int) (short) 0);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        java.lang.constant.ConstantDesc[] constantDescArray49 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50, constantDescArray49);
        String str52 = constantDescList50.toString();
        java.lang.constant.ConstantDesc[] constantDescArray61 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62, constantDescArray61);
        Object obj64 = constantDescList62.clone();
        Object[] objArray65 = new Object[] { 'a', constantDescList62 };
        Object[] objArray66 = constantDescList50.toArray(objArray65);
        int int67 = constantDescList50.size();
        boolean boolean68 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream71 = constantDescList70.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray82 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83, constantDescArray82);
        int int86 = constantDescList83.lastIndexOf((Object) 1L);
        constantDescList83.ensureCapacity(10);
        boolean boolean89 = constantDescList73.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83);
        boolean boolean90 = constantDescList70.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean91 = constantDescList31.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean92 = constantDescList9.equals((Object) constantDescList73);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream93 = constantDescList73.parallelStream();
        Class<?> wildcardClass94 = constantDescStream93.getClass();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(constantDescArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str52, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj64), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 16 + "'", int67 == 16);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(constantDescStream71);
        org.junit.Assert.assertNotNull(constantDescArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(constantDescStream93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        String str78 = constantDescList76.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream79 = constantDescList76.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator80 = constantDescList76.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream81 = constantDescList76.parallelStream();
        boolean boolean82 = constantDescList58.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        constantDescList58.ensureCapacity(8);
        java.lang.constant.ConstantDesc constantDesc86 = null;
        constantDescList58.add((int) (short) 10, constantDesc86);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator88 = constantDescList58.spliterator();
        boolean boolean89 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream90 = constantDescList31.parallelStream();
        constantDescList31.clear();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList31.add((int) (byte) -1, (java.lang.constant.ConstantDesc) 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str78, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream79);
        org.junit.Assert.assertNotNull(constantDescSpliterator80);
        org.junit.Assert.assertNotNull(constantDescStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(constantDescStream90);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        String str22 = constantDescList20.toString();
        java.lang.constant.ConstantDesc[] constantDescArray31 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList32 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList32, constantDescArray31);
        Object obj34 = constantDescList32.clone();
        Object[] objArray35 = new Object[] { 'a', constantDescList32 };
        Object[] objArray36 = constantDescList20.toArray(objArray35);
        int int37 = constantDescList20.size();
        java.lang.constant.ConstantDesc[] constantDescArray54 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55, constantDescArray54);
        String str57 = constantDescList55.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream58 = constantDescList55.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator59 = constantDescList55.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList55.parallelStream();
        boolean boolean61 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList55);
        int int62 = constantDescList1.lastIndexOf((Object) constantDescList20);
        java.lang.constant.ConstantDesc constantDesc65 = constantDescList20.set(10, (java.lang.constant.ConstantDesc) (-1.0f));
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str22, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj34), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 16 + "'", int37 == 16);
        org.junit.Assert.assertNotNull(constantDescArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str57, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream58);
        org.junit.Assert.assertNotNull(constantDescSpliterator59);
        org.junit.Assert.assertNotNull(constantDescStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + constantDesc65 + "' != '" + 1 + "'", constantDesc65, 1);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        int int2 = constantDescList0.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList5 = constantDescList0.subList((int) (short) 0, (int) (byte) 0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList0.stream();
        java.lang.constant.ConstantDesc[] constantDescArray15 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList16 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList16, constantDescArray15);
        int int19 = constantDescList16.lastIndexOf((Object) 1L);
        constantDescList16.ensureCapacity(10);
        Object[] objArray22 = constantDescList16.toArray();
        String str23 = constantDescList16.toString();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList16.iterator();
        boolean boolean25 = constantDescList0.contains((Object) constantDescItor24);
        Object[][] objArray26 = new Object[][] {};
        Object[][] objArray27 = constantDescList0.toArray(objArray26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc29 = constantDescList0.remove((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(constantDescList5);
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertNotNull(constantDescArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str23, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(objArray27);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor21 = constantDescList11.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor23 = constantDescList11.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 9");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescItor21);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        int int23 = constantDescList1.lastIndexOf((Object) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList25.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray37 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList38 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38, constantDescArray37);
        int int41 = constantDescList38.lastIndexOf((Object) 1L);
        constantDescList38.ensureCapacity(10);
        boolean boolean44 = constantDescList28.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
        boolean boolean46 = constantDescList38.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList38.trimToSize();
        boolean boolean48 = constantDescList25.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
        boolean boolean49 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList38);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream26);
        org.junit.Assert.assertNotNull(constantDescArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        Object obj56 = constantDescList31.clone();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream57 = constantDescList31.parallelStream();
        Object obj58 = null;
        int int59 = constantDescList31.indexOf(obj58);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj56), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor51 = constantDescList31.listIterator((int) (byte) 0);
        Object obj52 = null;
        boolean boolean53 = constantDescList31.remove(obj52);
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator54 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList31.replaceAll(constantDescUnaryOperator54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescItor51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        String str24 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        String str58 = constantDescList56.toString();
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        Object obj70 = constantDescList68.clone();
        Object[] objArray71 = new Object[] { 'a', constantDescList68 };
        Object[] objArray72 = constantDescList56.toArray(objArray71);
        int int73 = constantDescList56.size();
        boolean boolean74 = constantDescList37.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList56.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray77 = constantDescList76.toArray();
        boolean boolean78 = constantDescList76.isEmpty();
        boolean boolean79 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean80 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList17.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList86 = constantDescList83.subList(16, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(16) > toIndex(0)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 16 + "'", int73 == 16);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(constantDescStream82);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        Object obj56 = constantDescList54.clone();
        Object[] objArray57 = new Object[] { 'a', constantDescList54 };
        Object[] objArray58 = constantDescList42.toArray(objArray57);
        int int59 = constantDescList42.size();
        boolean boolean60 = constantDescList23.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream61 = constantDescList42.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray63 = constantDescList62.toArray();
        boolean boolean64 = constantDescList62.isEmpty();
        boolean boolean65 = constantDescList42.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean66 = constantDescList8.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) '#');
        boolean boolean69 = constantDescList8.equals((Object) constantDescList68);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList71 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList71.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList74 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray83 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList84 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84, constantDescArray83);
        int int87 = constantDescList84.lastIndexOf((Object) 1L);
        constantDescList84.ensureCapacity(10);
        boolean boolean90 = constantDescList74.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84);
        boolean boolean91 = constantDescList71.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList93 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        int int94 = constantDescList71.indexOf((Object) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream95 = constantDescList71.parallelStream();
        int int96 = constantDescList68.lastIndexOf((Object) constantDescStream95);
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 16 + "'", int59 == 16);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(constantDescStream61);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertNotNull(constantDescArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        boolean boolean16 = constantDescList9.remove((Object) 1L);
        constantDescList9.ensureCapacity((int) (short) 0);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        java.lang.constant.ConstantDesc[] constantDescArray49 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50, constantDescArray49);
        String str52 = constantDescList50.toString();
        java.lang.constant.ConstantDesc[] constantDescArray61 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62, constantDescArray61);
        Object obj64 = constantDescList62.clone();
        Object[] objArray65 = new Object[] { 'a', constantDescList62 };
        Object[] objArray66 = constantDescList50.toArray(objArray65);
        int int67 = constantDescList50.size();
        boolean boolean68 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList70 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream71 = constantDescList70.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray82 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83, constantDescArray82);
        int int86 = constantDescList83.lastIndexOf((Object) 1L);
        constantDescList83.ensureCapacity(10);
        boolean boolean89 = constantDescList73.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList83);
        boolean boolean90 = constantDescList70.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean91 = constantDescList31.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean92 = constantDescList9.equals((Object) constantDescList73);
        constantDescList9.trimToSize();
        constantDescList9.ensureCapacity(10);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor96 = constantDescList9.listIterator();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(constantDescArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str52, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj64), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 16 + "'", int67 == 16);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(constantDescStream71);
        org.junit.Assert.assertNotNull(constantDescArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(constantDescItor96);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean1 = constantDescList0.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream54 = constantDescList53.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean73 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        boolean boolean74 = constantDescList14.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.lang.constant.Constable[][] constableArray75 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][] constableArray76 = constantDescList56.toArray(constableArray75);
        boolean boolean77 = constantDescList0.remove((Object) constantDescList56);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList56.add((int) (byte) 100, (java.lang.constant.ConstantDesc) "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream54);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(constableArray75);
        org.junit.Assert.assertNotNull(constableArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList0 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc41 = constantDescList17.set(2, (java.lang.constant.ConstantDesc) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        int int56 = constantDescList53.lastIndexOf((Object) 1L);
        constantDescList53.ensureCapacity(10);
        boolean boolean59 = constantDescList43.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        boolean boolean61 = constantDescList53.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray72 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73, constantDescArray72);
        int int76 = constantDescList73.lastIndexOf((Object) 1L);
        constantDescList73.ensureCapacity(10);
        boolean boolean79 = constantDescList63.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        Object[] objArray80 = constantDescList73.toArray();
        boolean boolean81 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean82 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList17.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc41 + "' != '" + 10.0f + "'", constantDesc41, 10.0f);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        boolean boolean42 = constantDescList17.add((java.lang.constant.ConstantDesc) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList44 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray45 = constantDescList44.toArray();
        boolean boolean46 = constantDescList44.isEmpty();
        int int47 = constantDescList44.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator48 = constantDescList44.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51, constantDescArray50);
        java.lang.constant.ConstantDesc constantDesc54 = null;
        java.lang.constant.ConstantDesc constantDesc55 = constantDescList51.set(0, constantDesc54);
        boolean boolean56 = constantDescList51.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream59 = constantDescList58.parallelStream();
        boolean boolean60 = constantDescList51.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        Iterable[] iterableArray62 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray63 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray62;
        constantDescIterableArray63[0] = constantDescList51;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray66 = constantDescList44.toArray(constantDescIterableArray63);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = constantDescList17.addAll((-1), (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 17");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator48);
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + constantDesc55 + "' != '" + 0L + "'", constantDesc55, 0L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(constantDescStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(iterableArray62);
        org.junit.Assert.assertNotNull(constantDescIterableArray63);
        org.junit.Assert.assertNotNull(constantDescIterableArray66);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        Object[] objArray18 = constantDescList9.toArray();
        int int20 = constantDescList9.indexOf((Object) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc23 = constantDescList9.set((int) (byte) 10, (java.lang.constant.ConstantDesc) "[null]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 10 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        constantDescList2.add((int) (byte) 1, (java.lang.constant.ConstantDesc) 2);
        java.lang.constant.ConstantDesc[] constantDescArray27 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList28 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList28, constantDescArray27);
        String str30 = constantDescList28.toString();
        constantDescList28.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean35 = constantDescList28.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc37 = constantDescList28.get(10);
        Object[] objArray38 = constantDescList28.toArray();
        int int39 = constantDescList2.lastIndexOf((Object) objArray38);
        boolean boolean40 = constantDescList2.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str30, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + constantDesc37 + "' != '" + 0L + "'", constantDesc37, 0L);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.util.ArrayList<java.util.RandomAccess> randomAccessList0 = new java.util.ArrayList<java.util.RandomAccess>();
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean74 = constantDescList66.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList66.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList66.set(0, (java.lang.constant.ConstantDesc) 5);
        int int80 = constantDescList31.indexOf((Object) constantDescList66);
        boolean boolean82 = constantDescList31.remove((Object) (-1));
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList31.spliterator();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList86 = constantDescList31.subList(1, (int) (short) 1);
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertNotNull(constantDescList86);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        boolean boolean59 = constantDescList56.add((java.lang.constant.ConstantDesc) "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream62 = constantDescList61.parallelStream();
        Object obj63 = constantDescList61.clone();
        CharSequence[] charSequenceArray70 = new CharSequence[] { "", "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "", "hi!", "", "" };
        CharSequence[] charSequenceArray71 = constantDescList61.toArray(charSequenceArray70);
        boolean boolean72 = constantDescList56.equals((Object) charSequenceArray70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc74 = constantDescList56.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(constantDescStream62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj63), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add((int) (byte) -1, (java.lang.constant.ConstantDesc) 8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 17");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        Object obj25 = constantDescList17.clone();
        Object obj26 = constantDescList17.clone();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj25), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get((int) (short) 0);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        boolean boolean45 = constantDescList29.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        Object[] objArray46 = constantDescList39.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList48 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream49 = constantDescList48.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray60 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61, constantDescArray60);
        int int64 = constantDescList61.lastIndexOf((Object) 1L);
        constantDescList61.ensureCapacity(10);
        boolean boolean67 = constantDescList51.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        boolean boolean69 = constantDescList61.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList61.trimToSize();
        boolean boolean71 = constantDescList48.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        boolean boolean72 = constantDescList39.contains((Object) constantDescList61);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor74 = constantDescList39.listIterator(3);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList39.parallelStream();
        boolean boolean76 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        String[] strArray81 = new String[] { "[0, 0.0]", "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "[100]", "[100, 100.0, hi!, 1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!, 10.0]" };
        // The following exception was thrown during execution in test generation
        try {
            String[] strArray82 = constantDescList17.toArray(strArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.String");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 10 + "'", constantDesc27, 10);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream49);
        org.junit.Assert.assertNotNull(constantDescArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescItor74);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.parallelStream();
        constantDescList31.clear();
        boolean boolean53 = constantDescList31.contains((Object) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList31.add((int) (short) -1, (java.lang.constant.ConstantDesc) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        String str24 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        String str58 = constantDescList56.toString();
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        Object obj70 = constantDescList68.clone();
        Object[] objArray71 = new Object[] { 'a', constantDescList68 };
        Object[] objArray72 = constantDescList56.toArray(objArray71);
        int int73 = constantDescList56.size();
        boolean boolean74 = constantDescList37.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList56.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray77 = constantDescList76.toArray();
        boolean boolean78 = constantDescList76.isEmpty();
        boolean boolean79 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean80 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList17.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc85 = constantDescList17.set((int) (byte) -1, (java.lang.constant.ConstantDesc) "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 16 + "'", int73 == 16);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(constantDescStream82);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str2 = constantDescList1.toString();
        Object obj3 = constantDescList1.clone();
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        boolean boolean12 = constantDescList7.isEmpty();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator13 = constantDescList7.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = constantDescList1.addAll((int) 'a', (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj3), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "[]");
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator13);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor9 = constantDescList8.listIterator();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator11 = constantDescList2.spliterator();
        Class<?> wildcardClass12 = constantDescList2.getClass();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(constantDescItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.util.ArrayList<java.util.ArrayList<java.lang.constant.ConstantDesc>> constantDescListList1 = new java.util.ArrayList<java.util.ArrayList<java.lang.constant.ConstantDesc>>(0);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList27.parallelStream();
        Object obj29 = constantDescList27.clone();
        boolean boolean30 = constantDescList19.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        String str31 = constantDescList19.toString();
        constantDescList19.ensureCapacity((int) (byte) 0);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str31, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc41 = constantDescList17.set(2, (java.lang.constant.ConstantDesc) 10);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        int int56 = constantDescList53.lastIndexOf((Object) 1L);
        constantDescList53.ensureCapacity(10);
        boolean boolean59 = constantDescList43.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        boolean boolean61 = constantDescList53.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray72 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList73 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73, constantDescArray72);
        int int76 = constantDescList73.lastIndexOf((Object) 1L);
        constantDescList73.ensureCapacity(10);
        boolean boolean79 = constantDescList63.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        Object[] objArray80 = constantDescList73.toArray();
        boolean boolean81 = constantDescList53.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        boolean boolean82 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList73);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList73.parallelStream();
        Class<?> wildcardClass84 = constantDescStream83.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc41 + "' != '" + 10.0f + "'", constantDesc41, 10.0f);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        String str74 = constantDescList72.toString();
        java.lang.constant.ConstantDesc[] constantDescArray83 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList84 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84, constantDescArray83);
        Object obj86 = constantDescList84.clone();
        Object[] objArray87 = new Object[] { 'a', constantDescList84 };
        Object[] objArray88 = constantDescList72.toArray(objArray87);
        int int89 = constantDescList72.size();
        boolean boolean90 = constantDescList53.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream91 = constantDescList72.stream();
        boolean boolean92 = constantDescList31.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        String str93 = constantDescList31.toString();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList95 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(2);
        boolean boolean96 = constantDescList31.contains((Object) 2);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str74, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 16 + "'", int89 == 16);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(constantDescStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[0, 0.0]" + "'", str93, "[0, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        constantDescList9.ensureCapacity(4);
        Object[] objArray18 = constantDescList9.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray29 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList30 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList30, constantDescArray29);
        int int33 = constantDescList30.lastIndexOf((Object) 1L);
        constantDescList30.ensureCapacity(10);
        boolean boolean36 = constantDescList20.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList30);
        boolean boolean38 = constantDescList30.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList30.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList40 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList30);
        boolean boolean41 = constantDescList9.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList40);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList9.add(10, (java.lang.constant.ConstantDesc) 5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        java.lang.constant.ConstantDesc[] constantDescArray64 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList65 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65, constantDescArray64);
        String str67 = constantDescList65.toString();
        java.lang.constant.ConstantDesc[] constantDescArray76 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList77 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList77, constantDescArray76);
        Object obj79 = constantDescList77.clone();
        Object[] objArray80 = new Object[] { 'a', constantDescList77 };
        Object[] objArray81 = constantDescList65.toArray(objArray80);
        int int82 = constantDescList65.size();
        boolean boolean83 = constantDescList46.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        Object obj84 = constantDescList65.clone();
        boolean boolean85 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList65);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList88 = constantDescList17.subList((int) 'a', 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(97) > toIndex(1)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(constantDescArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str67, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 16 + "'", int82 == 16);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor55 = constantDescList51.listIterator();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor56 = constantDescList51.iterator();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescItor55);
        org.junit.Assert.assertNotNull(constantDescItor56);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray22 = constantDescList21.toArray();
        boolean boolean23 = constantDescList21.isEmpty();
        int int24 = constantDescList21.size();
        boolean boolean25 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        Object obj26 = constantDescList21.clone();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator4 = constantDescList0.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        boolean boolean12 = constantDescList7.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream15 = constantDescList14.parallelStream();
        boolean boolean16 = constantDescList7.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        Iterable[] iterableArray18 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray19 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray18;
        constantDescIterableArray19[0] = constantDescList7;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray22 = constantDescList0.toArray(constantDescIterableArray19);
        java.lang.constant.ConstantDesc[] constantDescArray34 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList35 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35, constantDescArray34);
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean72 = constantDescList35.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream73 = constantDescList54.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList74 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray75 = constantDescList74.toArray();
        boolean boolean76 = constantDescList74.isEmpty();
        boolean boolean77 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
        boolean boolean78 = constantDescList0.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator79 = constantDescList0.spliterator();
        constantDescList0.trimToSize();
        constantDescList0.ensureCapacity((int) (short) -1);
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator4);
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(constantDescStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(iterableArray18);
        org.junit.Assert.assertNotNull(constantDescIterableArray19);
        org.junit.Assert.assertNotNull(constantDescIterableArray22);
        org.junit.Assert.assertNotNull(constantDescArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(constantDescStream73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator79);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator4 = constantDescList0.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        boolean boolean12 = constantDescList7.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream15 = constantDescList14.parallelStream();
        boolean boolean16 = constantDescList7.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        Iterable[] iterableArray18 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray19 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray18;
        constantDescIterableArray19[0] = constantDescList7;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray22 = constantDescList0.toArray(constantDescIterableArray19);
        constantDescList0.clear();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList0.listIterator();
        // The following exception was thrown during execution in test generation
        try {
            constantDescList0.add((int) 'a', (java.lang.constant.ConstantDesc) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator4);
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(constantDescStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(iterableArray18);
        org.junit.Assert.assertNotNull(constantDescIterableArray19);
        org.junit.Assert.assertNotNull(constantDescIterableArray22);
        org.junit.Assert.assertNotNull(constantDescItor24);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 10);
        constantDescList1.ensureCapacity((int) '4');
        constantDescList1.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor7 = constantDescList1.listIterator((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList18.trimToSize();
        Object obj26 = null;
        boolean boolean27 = constantDescList18.remove(obj26);
        int int28 = constantDescList18.size();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream29 = constantDescList18.stream();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 16 + "'", int28 == 16);
        org.junit.Assert.assertNotNull(constantDescStream29);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        Class<?> wildcardClass26 = constantDescList19.getClass();
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str2 = constantDescList1.toString();
        Object[] objArray3 = constantDescList1.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray20 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21, constantDescArray20);
        String str23 = constantDescList21.toString();
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList21.set(0, (java.lang.constant.ConstantDesc) 10);
        Object[] objArray27 = constantDescList21.toArray();
        boolean boolean28 = constantDescList1.contains((Object) constantDescList21);
        java.lang.constant.ConstantDesc constantDesc30 = constantDescList21.get(0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str23, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 10 + "'", constantDesc26, 10);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + constantDesc30 + "' != '" + 10 + "'", constantDesc30, 10);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList18.trimToSize();
        Object obj26 = null;
        boolean boolean27 = constantDescList18.remove(obj26);
        int int28 = constantDescList18.size();
        Class<?> wildcardClass29 = constantDescList18.getClass();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 16 + "'", int28 == 16);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        java.lang.constant.ConstantDesc[] constantDescArray7 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList8, constantDescArray7);
        Object obj10 = constantDescList8.clone();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor12 = constantDescList8.listIterator(4);
        java.lang.constant.ConstantDesc constantDesc14 = constantDescList8.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(constantDescArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj10), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(constantDescItor12);
        org.junit.Assert.assertEquals("'" + constantDesc14 + "' != '" + 1.0f + "'", constantDesc14, 1.0f);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        java.lang.constant.ConstantDesc[] constantDescArray32 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList33 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33, constantDescArray32);
        String str35 = constantDescList33.toString();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        Object obj47 = constantDescList45.clone();
        Object[] objArray48 = new Object[] { 'a', constantDescList45 };
        Object[] objArray49 = constantDescList33.toArray(objArray48);
        int int50 = constantDescList33.size();
        boolean boolean51 = constantDescList14.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList33);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList33.parallelStream();
        boolean boolean53 = constantDescList33.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray70 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList71 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList71, constantDescArray70);
        String str73 = constantDescList71.toString();
        constantDescList71.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean78 = constantDescList71.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc80 = constantDescList71.get(10);
        constantDescList71.clear();
        int int82 = constantDescList33.indexOf((Object) constantDescList71);
        constantDescList71.add(0, (java.lang.constant.ConstantDesc) 10.0d);
        boolean boolean86 = constantDescList1.remove((Object) constantDescList71);
        String[] strArray89 = new String[] { "hi!", "[0, 0.0]" };
        // The following exception was thrown during execution in test generation
        try {
            Comparable<String>[] strComparableArray90 = constantDescList71.toArray((Comparable<String>[]) strArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.String");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(constantDescArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str35, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 16 + "'", int50 == 16);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(constantDescArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str73, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + constantDesc80 + "' != '" + 0L + "'", constantDesc80, 0L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        constantDescList0.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray14 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList15, constantDescArray14);
        java.lang.constant.ConstantDesc[] constantDescArray33 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList34 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34, constantDescArray33);
        String str36 = constantDescList34.toString();
        java.lang.constant.ConstantDesc[] constantDescArray45 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList46 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList46, constantDescArray45);
        Object obj48 = constantDescList46.clone();
        Object[] objArray49 = new Object[] { 'a', constantDescList46 };
        Object[] objArray50 = constantDescList34.toArray(objArray49);
        int int51 = constantDescList34.size();
        boolean boolean52 = constantDescList15.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList34);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream53 = constantDescList34.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray55 = constantDescList54.toArray();
        boolean boolean56 = constantDescList54.isEmpty();
        boolean boolean57 = constantDescList34.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream58 = constantDescList34.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean60 = constantDescList34.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray78 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList79 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79, constantDescArray78);
        String str81 = constantDescList79.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList79.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList79.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream84 = constantDescList79.parallelStream();
        boolean boolean85 = constantDescList61.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList79);
        constantDescList61.ensureCapacity(8);
        java.lang.constant.ConstantDesc constantDesc89 = null;
        constantDescList61.add((int) (short) 10, constantDesc89);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator91 = constantDescList61.spliterator();
        boolean boolean92 = constantDescList34.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream93 = constantDescList34.parallelStream();
        constantDescList34.clear();
        boolean boolean95 = constantDescList0.remove((Object) constantDescList34);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection96 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = constantDescList0.containsAll(constantDescCollection96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(constantDescArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str36, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 16 + "'", int51 == 16);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(constantDescStream53);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(constantDescStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(constantDescArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str81, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream82);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertNotNull(constantDescStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(constantDescStream93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        constantDescList1.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator3 = constantDescList1.spliterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray5 = constantDescList4.toArray();
        boolean boolean6 = constantDescList4.isEmpty();
        int int7 = constantDescList4.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator8 = constantDescList4.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        java.lang.constant.ConstantDesc constantDesc14 = null;
        java.lang.constant.ConstantDesc constantDesc15 = constantDescList11.set(0, constantDesc14);
        boolean boolean16 = constantDescList11.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream19 = constantDescList18.parallelStream();
        boolean boolean20 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        Iterable[] iterableArray22 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray23 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray22;
        constantDescIterableArray23[0] = constantDescList11;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray26 = constantDescList4.toArray(constantDescIterableArray23);
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray27 = constantDescList1.toArray(constantDescIterableArray26);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator28 = constantDescList1.spliterator();
        org.junit.Assert.assertNotNull(constantDescSpliterator3);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator8);
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + constantDesc15 + "' != '" + 0L + "'", constantDesc15, 0L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(constantDescStream19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(iterableArray22);
        org.junit.Assert.assertNotNull(constantDescIterableArray23);
        org.junit.Assert.assertNotNull(constantDescIterableArray26);
        org.junit.Assert.assertNotNull(constantDescIterableArray27);
        org.junit.Assert.assertNotNull(constantDescSpliterator28);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream38 = constantDescList37.parallelStream();
        Object obj39 = constantDescList37.clone();
        boolean boolean40 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator41 = constantDescList37.spliterator();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator42 = constantDescList37.spliterator();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor44 = constantDescList37.listIterator(0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList37.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(constantDescStream38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator41);
        org.junit.Assert.assertNotNull(constantDescSpliterator42);
        org.junit.Assert.assertNotNull(constantDescItor44);
        org.junit.Assert.assertNotNull(constantDescStream45);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList4 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray13 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14, constantDescArray13);
        int int17 = constantDescList14.lastIndexOf((Object) 1L);
        constantDescList14.ensureCapacity(10);
        boolean boolean20 = constantDescList4.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        boolean boolean21 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList4);
        boolean boolean23 = constantDescList1.add((java.lang.constant.ConstantDesc) 2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc25 = constantDescList1.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray22 = constantDescList21.toArray();
        boolean boolean23 = constantDescList21.isEmpty();
        int int24 = constantDescList21.size();
        boolean boolean25 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        java.lang.constant.ConstantDesc constantDesc27 = constantDescList17.get(8);
        java.lang.constant.ConstantDesc[] constantDescArray35 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36, constantDescArray35);
        Object obj38 = constantDescList36.clone();
        boolean boolean39 = constantDescList17.remove(obj38);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList40 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList41 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList40);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream42 = constantDescList40.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList40);
        boolean boolean45 = constantDescList43.add((java.lang.constant.ConstantDesc) 10.0f);
        boolean boolean46 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43);
        Class<?> wildcardClass47 = constantDescList17.getClass();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + constantDesc27 + "' != '" + 0 + "'", constantDesc27, 0);
        org.junit.Assert.assertNotNull(constantDescArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj38), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(constantDescStream42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor26 = constantDescList0.listIterator((int) (byte) 0);
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        java.lang.constant.ConstantDesc constantDesc32 = null;
        java.lang.constant.ConstantDesc constantDesc33 = constantDescList29.set(0, constantDesc32);
        boolean boolean34 = constantDescList29.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream37 = constantDescList36.parallelStream();
        boolean boolean38 = constantDescList29.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36);
        boolean boolean39 = constantDescList0.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36);
        constantDescList0.ensureCapacity(10);
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor26);
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + constantDesc33 + "' != '" + 0L + "'", constantDesc33, 0L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(constantDescStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.get(10);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 1L, 10, (-1.0f) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        String str66 = constantDescList64.toString();
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        Object obj78 = constantDescList76.clone();
        Object[] objArray79 = new Object[] { 'a', constantDescList76 };
        Object[] objArray80 = constantDescList64.toArray(objArray79);
        int int81 = constantDescList64.size();
        boolean boolean82 = constantDescList45.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList64.stream();
        boolean boolean84 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean85 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList87 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream88 = constantDescList87.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList90 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str91 = constantDescList90.toString();
        boolean boolean92 = constantDescList87.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList90);
        boolean boolean93 = constantDescList17.equals((Object) boolean92);
        boolean boolean94 = constantDescList17.isEmpty();
        boolean boolean96 = constantDescList17.contains((Object) 4);
        Object[] objArray97 = constantDescList17.toArray();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 0L + "'", constantDesc26, 0L);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str66, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj78), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 16 + "'", int81 == 16);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescStream88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[]" + "'", str91, "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray97), "[-1.0, 16]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray97), "[-1.0, 16]");
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList27.parallelStream();
        Object obj29 = constantDescList27.clone();
        boolean boolean30 = constantDescList19.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        Class<?> wildcardClass31 = constantDescList27.getClass();
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc26 = constantDescList17.get(10);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 1L, 10, (-1.0f) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        java.lang.constant.ConstantDesc[] constantDescArray63 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList64 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64, constantDescArray63);
        String str66 = constantDescList64.toString();
        java.lang.constant.ConstantDesc[] constantDescArray75 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76, constantDescArray75);
        Object obj78 = constantDescList76.clone();
        Object[] objArray79 = new Object[] { 'a', constantDescList76 };
        Object[] objArray80 = constantDescList64.toArray(objArray79);
        int int81 = constantDescList64.size();
        boolean boolean82 = constantDescList45.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream83 = constantDescList64.stream();
        boolean boolean84 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        boolean boolean85 = constantDescList17.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList64);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList87 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream88 = constantDescList87.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList90 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(10);
        String str91 = constantDescList90.toString();
        boolean boolean92 = constantDescList87.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList90);
        boolean boolean93 = constantDescList17.equals((Object) boolean92);
        boolean boolean94 = constantDescList17.isEmpty();
        boolean boolean96 = constantDescList17.contains((Object) 4);
        boolean boolean97 = constantDescList17.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + constantDesc26 + "' != '" + 0L + "'", constantDesc26, 0L);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(constantDescArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str66, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj78), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 16 + "'", int81 == 16);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constantDescStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescStream88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[]" + "'", str91, "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray9 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList10 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList10, constantDescArray9);
        int int13 = constantDescList10.lastIndexOf((Object) 1L);
        constantDescList10.ensureCapacity(10);
        Object obj16 = constantDescList10.clone();
        constantDescList10.ensureCapacity(4);
        Object[] objArray19 = constantDescList10.toArray();
        int int20 = constantDescList0.lastIndexOf((Object) objArray19);
        int int21 = constantDescList0.size();
        Object[] objArray22 = constantDescList0.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc24 = constantDescList0.remove((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 100 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        Object[] objArray4 = constantDescList1.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray22 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23, constantDescArray22);
        String str25 = constantDescList23.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList23.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator27 = constantDescList23.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        int int40 = constantDescList37.lastIndexOf((Object) 1L);
        constantDescList37.ensureCapacity(10);
        Object obj43 = constantDescList37.clone();
        boolean boolean44 = constantDescList23.contains((Object) constantDescList37);
        java.lang.constant.ConstantDesc constantDesc46 = constantDescList23.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc49 = constantDescList23.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        int int51 = constantDescList23.lastIndexOf((Object) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        boolean boolean52 = constantDescList1.addAll((int) (byte) 0, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc54 = constantDescList23.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 16");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(constantDescArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str25, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream26);
        org.junit.Assert.assertNotNull(constantDescSpliterator27);
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj43), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + constantDesc46 + "' != '" + 1 + "'", constantDesc46, 1);
        org.junit.Assert.assertEquals("'" + constantDesc49 + "' != '" + 1 + "'", constantDesc49, 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        Object obj26 = constantDescList17.clone();
        java.lang.constant.ConstantDesc constantDesc29 = constantDescList17.set(12, (java.lang.constant.ConstantDesc) 3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList32 = constantDescList17.subList((int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(0) > toIndex(-1)");
        } catch (IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals("'" + constantDesc29 + "' != '" + 0.0d + "'", constantDesc29, 0.0d);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray26 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27, constantDescArray26);
        int int30 = constantDescList27.lastIndexOf((Object) 1L);
        constantDescList27.ensureCapacity(10);
        boolean boolean33 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        boolean boolean35 = constantDescList27.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList27.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray48 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49, constantDescArray48);
        int int52 = constantDescList49.lastIndexOf((Object) 1L);
        constantDescList49.ensureCapacity(10);
        boolean boolean55 = constantDescList39.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49);
        boolean boolean56 = constantDescList27.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        boolean boolean57 = constantDescList9.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        int int58 = constantDescList27.size();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(constantDescArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 9 + "'", int58 == 9);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        Object[] objArray4 = constantDescList1.toArray();
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList1.replaceAll(constantDescUnaryOperator5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList58.clear();
        constantDescList58.ensureCapacity((int) '4');
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        Object[] objArray26 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray28 = constantDescList27.toArray();
        boolean boolean29 = constantDescList27.isEmpty();
        int int30 = constantDescList27.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.lang.constant.ConstantDesc[] constantDescArray48 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49, constantDescArray48);
        String str51 = constantDescList49.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream52 = constantDescList49.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator53 = constantDescList49.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray62 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList63 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList63, constantDescArray62);
        int int66 = constantDescList63.lastIndexOf((Object) 1L);
        constantDescList63.ensureCapacity(10);
        Object obj69 = constantDescList63.clone();
        boolean boolean70 = constantDescList49.contains((Object) constantDescList63);
        constantDescList49.clear();
        Object[] objArray72 = constantDescList49.toArray();
        boolean boolean73 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49);
        constantDescList31.trimToSize();
        boolean boolean75 = constantDescList1.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor76 = constantDescList31.iterator();
        constantDescList31.ensureCapacity(5);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(constantDescArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str51, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream52);
        org.junit.Assert.assertNotNull(constantDescSpliterator53);
        org.junit.Assert.assertNotNull(constantDescArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj69), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(constantDescItor76);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        String str11 = constantDescList8.toString();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor12 = constantDescList8.listIterator();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertNotNull(constantDescItor12);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray17 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList18 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18, constantDescArray17);
        String str20 = constantDescList18.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream21 = constantDescList18.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator22 = constantDescList18.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream23 = constantDescList18.parallelStream();
        boolean boolean24 = constantDescList0.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList18);
        constantDescList18.trimToSize();
        int int26 = constantDescList18.size();
        int int27 = constantDescList18.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream30 = constantDescList29.stream();
        int int31 = constantDescList29.size();
        boolean boolean32 = constantDescList29.isEmpty();
        boolean boolean33 = constantDescList18.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator34 = constantDescList29.spliterator();
        org.junit.Assert.assertNotNull(constantDescArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str20, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream21);
        org.junit.Assert.assertNotNull(constantDescSpliterator22);
        org.junit.Assert.assertNotNull(constantDescStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 16 + "'", int26 == 16);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 16 + "'", int27 == 16);
        org.junit.Assert.assertNotNull(constantDescStream30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator34);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        constantDescList0.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        Object obj17 = constantDescList11.clone();
        constantDescList11.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor20 = constantDescList11.iterator();
        Object obj21 = constantDescList11.clone();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        String str41 = constantDescList39.toString();
        constantDescList39.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean46 = constantDescList39.add((java.lang.constant.ConstantDesc) 16);
        Object obj47 = constantDescList39.clone();
        boolean boolean48 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        String str69 = constantDescList67.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream70 = constantDescList67.parallelStream();
        boolean boolean71 = constantDescList11.addAll(4, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        boolean boolean72 = constantDescList0.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream73 = constantDescList11.parallelStream();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj17), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj21), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str41, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj47), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str69, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(constantDescStream73);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        Object obj37 = constantDescList31.clone();
        boolean boolean38 = constantDescList17.contains((Object) constantDescList31);
        java.lang.constant.ConstantDesc constantDesc40 = constantDescList17.get((int) (short) 10);
        constantDescList17.add(12, (java.lang.constant.ConstantDesc) 100.0d);
        boolean boolean44 = constantDescList17.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + constantDesc40 + "' != '" + 1 + "'", constantDesc40, 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        int int69 = constantDescList66.lastIndexOf((Object) 1L);
        constantDescList66.ensureCapacity(10);
        boolean boolean72 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        boolean boolean74 = constantDescList66.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList66.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList66.set(0, (java.lang.constant.ConstantDesc) 5);
        int int80 = constantDescList31.indexOf((Object) constantDescList66);
        boolean boolean82 = constantDescList31.remove((Object) (-1));
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator83 = constantDescList31.spliterator();
        int int84 = constantDescList31.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList86 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream87 = constantDescList86.parallelStream();
        Object obj88 = constantDescList86.clone();
        CharSequence[] charSequenceArray95 = new CharSequence[] { "", "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "", "hi!", "", "" };
        CharSequence[] charSequenceArray96 = constantDescList86.toArray(charSequenceArray95);
        // The following exception was thrown during execution in test generation
        try {
            CharSequence[] charSequenceArray97 = constantDescList31.toArray(charSequenceArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.CharSequence");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 16 + "'", int84 == 16);
        org.junit.Assert.assertNotNull(constantDescStream87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray95);
        org.junit.Assert.assertNotNull(charSequenceArray96);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList53.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator57 = constantDescList53.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        Object obj73 = constantDescList67.clone();
        boolean boolean74 = constantDescList53.contains((Object) constantDescList67);
        boolean boolean75 = constantDescList17.addAll(2, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        int int76 = constantDescList67.size();
        constantDescList67.clear();
        constantDescList67.clear();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescSpliterator57);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        constantDescList0.trimToSize();
        String str3 = constantDescList0.toString();
        java.lang.constant.ConstantDesc[] constantDescArray5 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList6 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList6, constantDescArray5);
        java.lang.constant.ConstantDesc constantDesc9 = null;
        java.lang.constant.ConstantDesc constantDesc10 = constantDescList6.set(0, constantDesc9);
        Object[] objArray11 = constantDescList6.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList13 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream14 = constantDescList13.stream();
        Object[] objArray15 = constantDescList13.toArray();
        boolean boolean16 = constantDescList6.contains((Object) constantDescList13);
        int int17 = constantDescList0.indexOf((Object) constantDescList13);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertNotNull(constantDescArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + constantDesc10 + "' != '" + 0L + "'", constantDesc10, 0L);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[null]");
        org.junit.Assert.assertNotNull(constantDescStream14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) 10.0f);
        String str24 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray36 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37, constantDescArray36);
        java.lang.constant.ConstantDesc[] constantDescArray55 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56, constantDescArray55);
        String str58 = constantDescList56.toString();
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        Object obj70 = constantDescList68.clone();
        Object[] objArray71 = new Object[] { 'a', constantDescList68 };
        Object[] objArray72 = constantDescList56.toArray(objArray71);
        int int73 = constantDescList56.size();
        boolean boolean74 = constantDescList37.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream75 = constantDescList56.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList76 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray77 = constantDescList76.toArray();
        boolean boolean78 = constantDescList76.isEmpty();
        boolean boolean79 = constantDescList56.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList76);
        boolean boolean80 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream82 = constantDescList17.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList83 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17);
        boolean boolean85 = constantDescList83.add((java.lang.constant.ConstantDesc) "[null]");
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream86 = constantDescList83.stream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str24, "[10, 10.0, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(constantDescArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str58, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 16 + "'", int73 == 16);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constantDescStream75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(constantDescStream82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(constantDescStream86);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        constantDescList0.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray6 = constantDescList5.toArray();
        boolean boolean7 = constantDescList5.isEmpty();
        int int8 = constantDescList5.size();
        constantDescList5.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream12 = constantDescList11.parallelStream();
        boolean boolean13 = constantDescList5.remove((Object) constantDescStream12);
        boolean boolean14 = constantDescList0.remove((Object) constantDescList5);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList15 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.lang.constant.ConstantDesc[] constantDescArray24 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25, constantDescArray24);
        int int28 = constantDescList25.lastIndexOf((Object) 1L);
        constantDescList25.ensureCapacity(10);
        Object obj31 = constantDescList25.clone();
        constantDescList25.ensureCapacity(4);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor34 = constantDescList25.iterator();
        Object obj35 = constantDescList25.clone();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        String str55 = constantDescList53.toString();
        constantDescList53.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean60 = constantDescList53.add((java.lang.constant.ConstantDesc) 16);
        Object obj61 = constantDescList53.clone();
        boolean boolean62 = constantDescList25.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53);
        java.lang.constant.ConstantDesc[] constantDescArray80 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList81 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81, constantDescArray80);
        String str83 = constantDescList81.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream84 = constantDescList81.parallelStream();
        boolean boolean85 = constantDescList25.addAll(4, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList81);
        String str86 = constantDescList25.toString();
        boolean boolean87 = constantDescList15.contains((Object) constantDescList25);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream88 = constantDescList25.parallelStream();
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(constantDescStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(constantDescArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescItor34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj35), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str55, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(String.valueOf(obj61), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[-1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 16]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constantDescArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str83, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[100, 100.0, hi!, 1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!, 10.0]" + "'", str86, "[100, 100.0, hi!, 1.0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(constantDescStream88);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = constantDescList2.addAll(0, constantDescCollection8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.toArray()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray9 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList10 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList10, constantDescArray9);
        int int13 = constantDescList10.lastIndexOf((Object) 1L);
        constantDescList10.ensureCapacity(10);
        Object obj16 = constantDescList10.clone();
        constantDescList10.ensureCapacity(4);
        Object[] objArray19 = constantDescList10.toArray();
        int int20 = constantDescList0.lastIndexOf((Object) objArray19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream24 = constantDescList23.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray35 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36, constantDescArray35);
        int int39 = constantDescList36.lastIndexOf((Object) 1L);
        constantDescList36.ensureCapacity(10);
        boolean boolean42 = constantDescList26.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36);
        boolean boolean43 = constantDescList23.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        int int46 = constantDescList23.indexOf((Object) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList23.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = constantDescList0.addAll((int) (short) 10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream24);
        org.junit.Assert.assertNotNull(constantDescArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream47);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray26 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27, constantDescArray26);
        int int30 = constantDescList27.lastIndexOf((Object) 1L);
        constantDescList27.ensureCapacity(10);
        boolean boolean33 = constantDescList17.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        boolean boolean35 = constantDescList27.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList27.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray48 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList49 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49, constantDescArray48);
        int int52 = constantDescList49.lastIndexOf((Object) 1L);
        constantDescList49.ensureCapacity(10);
        boolean boolean55 = constantDescList39.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList49);
        boolean boolean56 = constantDescList27.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        boolean boolean57 = constantDescList9.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.lang.constant.ConstantDesc constantDesc59 = constantDescList9.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(constantDescArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + constantDesc59 + "' != '" + 100L + "'", constantDesc59, 100L);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList12.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList12.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList69.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator73 = constantDescList69.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList69.parallelStream();
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 0.0d);
        boolean boolean77 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList12.remove((int) '#');
        Object[] objArray80 = constantDescList12.toArray();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertNotNull(constantDescSpliterator73);
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[10.0, 0.0, 1, 10, 100.0, -1.0, 0.0, 1, [10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0], hi!, -1, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, 10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 1, 10, 0.0, 0.0, 10, 0, 0.0]");
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.stream();
        Object[] objArray3 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList5 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (short) 1);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream6 = constantDescList5.stream();
        int int7 = constantDescList1.indexOf((Object) constantDescList5);
        java.lang.constant.ConstantDesc[] constantDescArray24 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList25 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25, constantDescArray24);
        String str27 = constantDescList25.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList25.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator29 = constantDescList25.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        int int42 = constantDescList39.lastIndexOf((Object) 1L);
        constantDescList39.ensureCapacity(10);
        Object obj45 = constantDescList39.clone();
        boolean boolean46 = constantDescList25.contains((Object) constantDescList39);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator47 = constantDescList25.spliterator();
        boolean boolean48 = constantDescList5.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList25);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList50 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray59 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60, constantDescArray59);
        int int63 = constantDescList60.lastIndexOf((Object) 1L);
        constantDescList60.ensureCapacity(10);
        boolean boolean66 = constantDescList50.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60);
        Object obj67 = constantDescList50.clone();
        boolean boolean69 = constantDescList50.add((java.lang.constant.ConstantDesc) 100L);
        boolean boolean70 = constantDescList25.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList50);
        java.util.List<java.lang.constant.ConstantDesc> constantDescList73 = constantDescList50.subList(0, 1);
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(constantDescStream6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(constantDescArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str27, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(constantDescSpliterator29);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(constantDescArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(constantDescList73);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        String str16 = constantDescList9.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        java.lang.constant.ConstantDesc[] constantDescArray47 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList48 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48, constantDescArray47);
        String str50 = constantDescList48.toString();
        java.lang.constant.ConstantDesc[] constantDescArray59 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60, constantDescArray59);
        Object obj62 = constantDescList60.clone();
        Object[] objArray63 = new Object[] { 'a', constantDescList60 };
        Object[] objArray64 = constantDescList48.toArray(objArray63);
        int int65 = constantDescList48.size();
        boolean boolean66 = constantDescList29.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream67 = constantDescList48.parallelStream();
        constantDescList48.clear();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator69 = constantDescList48.spliterator();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator70 = constantDescList48.spliterator();
        boolean boolean71 = constantDescList9.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator72 = constantDescList9.spliterator();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str16, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(constantDescArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str50, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj62), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 16 + "'", int65 == 16);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(constantDescStream67);
        org.junit.Assert.assertNotNull(constantDescSpliterator69);
        org.junit.Assert.assertNotNull(constantDescSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator72);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.lang.constant.ConstantDesc constantDesc23 = constantDescList17.set((int) (byte) 1, (java.lang.constant.ConstantDesc) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertEquals("'" + constantDesc23 + "' != '" + 1 + "'", constantDesc23, 1);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.util.ArrayList<AutoCloseable> autoCloseableList1 = new java.util.ArrayList<AutoCloseable>(0);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.ArrayList<java.lang.constant.Constable> constableList1 = new java.util.ArrayList<java.lang.constant.Constable>(10);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc constantDesc22 = constantDescList17.set(0, (java.lang.constant.ConstantDesc) 10);
        Object[] objArray23 = constantDescList17.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        Object obj27 = constantDescList26.clone();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>(0);
        boolean boolean30 = constantDescList26.contains((Object) 0);
        boolean boolean31 = constantDescList17.addAll((int) (byte) 1, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator32 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream33 = constantDescList17.stream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals("'" + constantDesc22 + "' != '" + 10 + "'", constantDesc22, 10);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator32);
        org.junit.Assert.assertNotNull(constantDescStream33);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object[] objArray15 = constantDescList9.toArray();
        String str16 = constantDescList9.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        java.lang.constant.ConstantDesc[] constantDescArray47 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList48 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48, constantDescArray47);
        String str50 = constantDescList48.toString();
        java.lang.constant.ConstantDesc[] constantDescArray59 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList60 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList60, constantDescArray59);
        Object obj62 = constantDescList60.clone();
        Object[] objArray63 = new Object[] { 'a', constantDescList60 };
        Object[] objArray64 = constantDescList48.toArray(objArray63);
        int int65 = constantDescList48.size();
        boolean boolean66 = constantDescList29.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream67 = constantDescList48.parallelStream();
        constantDescList48.clear();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator69 = constantDescList48.spliterator();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator70 = constantDescList48.spliterator();
        boolean boolean71 = constantDescList9.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList48);
        int int72 = constantDescList48.size();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str16, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(constantDescArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str50, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj62), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 16 + "'", int65 == 16);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(constantDescStream67);
        org.junit.Assert.assertNotNull(constantDescSpliterator69);
        org.junit.Assert.assertNotNull(constantDescSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) '#');
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        constantDescList19.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean26 = constantDescList19.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc constantDesc28 = constantDescList19.get(10);
        boolean boolean29 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        String str49 = constantDescList47.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList47.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList47.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray60 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList61 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList61, constantDescArray60);
        int int64 = constantDescList61.lastIndexOf((Object) 1L);
        constantDescList61.ensureCapacity(10);
        Object obj67 = constantDescList61.clone();
        boolean boolean68 = constantDescList47.contains((Object) constantDescList61);
        constantDescList47.clear();
        Object obj70 = constantDescList47.clone();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream71 = constantDescList47.stream();
        boolean boolean72 = constantDescList1.equals((Object) constantDescList47);
        Object obj73 = constantDescList47.clone();
        constantDescList47.ensureCapacity((int) (short) 1);
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + constantDesc28 + "' != '" + 0L + "'", constantDesc28, 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str49, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj67), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertNotNull(constantDescStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        java.lang.constant.ConstantDesc[] constantDescArray15 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList16 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList16, constantDescArray15);
        java.lang.constant.ConstantDesc[] constantDescArray34 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList35 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35, constantDescArray34);
        String str37 = constantDescList35.toString();
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList47 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList47, constantDescArray46);
        Object obj49 = constantDescList47.clone();
        Object[] objArray50 = new Object[] { 'a', constantDescList47 };
        Object[] objArray51 = constantDescList35.toArray(objArray50);
        int int52 = constantDescList35.size();
        boolean boolean53 = constantDescList16.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList55 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream56 = constantDescList55.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray67 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68, constantDescArray67);
        int int71 = constantDescList68.lastIndexOf((Object) 1L);
        constantDescList68.ensureCapacity(10);
        boolean boolean74 = constantDescList58.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList68);
        boolean boolean75 = constantDescList55.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        boolean boolean76 = constantDescList16.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList58);
        int int77 = constantDescList16.size();
        int int78 = constantDescList1.lastIndexOf((Object) int77);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream79 = constantDescList1.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray81 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList82 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList82, constantDescArray81);
        java.lang.constant.ConstantDesc constantDesc85 = null;
        java.lang.constant.ConstantDesc constantDesc86 = constantDescList82.set(0, constantDesc85);
        boolean boolean87 = constantDescList82.isEmpty();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator88 = constantDescList82.spliterator();
        boolean boolean89 = constantDescList1.equals((Object) constantDescSpliterator88);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc91 = constantDescList1.remove(8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 8 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(constantDescArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(constantDescArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str37, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj49), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 16 + "'", int52 == 16);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(constantDescStream56);
        org.junit.Assert.assertNotNull(constantDescArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 27 + "'", int77 == 27);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(constantDescStream79);
        org.junit.Assert.assertNotNull(constantDescArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + constantDesc86 + "' != '" + 0L + "'", constantDesc86, 0L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        constantDescList12.trimToSize();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator51 = constantDescList12.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray68 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList69 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69, constantDescArray68);
        String str71 = constantDescList69.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream72 = constantDescList69.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator73 = constantDescList69.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream74 = constantDescList69.parallelStream();
        boolean boolean76 = constantDescList69.add((java.lang.constant.ConstantDesc) 0.0d);
        boolean boolean77 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList69);
        java.lang.constant.ConstantDesc constantDesc79 = constantDescList12.remove((int) '#');
        boolean boolean81 = constantDescList12.add((java.lang.constant.ConstantDesc) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        java.util.function.UnaryOperator<java.lang.constant.ConstantDesc> constantDescUnaryOperator82 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList12.replaceAll(constantDescUnaryOperator82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescSpliterator51);
        org.junit.Assert.assertNotNull(constantDescArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str71, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream72);
        org.junit.Assert.assertNotNull(constantDescSpliterator73);
        org.junit.Assert.assertNotNull(constantDescStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + constantDesc79 + "' != '" + 0 + "'", constantDesc79, 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.constant.ConstantDesc> constantDescList6 = constantDescList0.subList((int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 100");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray1 = constantDescList0.toArray();
        boolean boolean2 = constantDescList0.isEmpty();
        int int3 = constantDescList0.size();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator4 = constantDescList0.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray6 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList7 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList7, constantDescArray6);
        java.lang.constant.ConstantDesc constantDesc10 = null;
        java.lang.constant.ConstantDesc constantDesc11 = constantDescList7.set(0, constantDesc10);
        boolean boolean12 = constantDescList7.isEmpty();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream15 = constantDescList14.parallelStream();
        boolean boolean16 = constantDescList7.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList14);
        Iterable[] iterableArray18 = new Iterable[1];
        @SuppressWarnings("unchecked")
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray19 = (Iterable<java.lang.constant.ConstantDesc>[]) iterableArray18;
        constantDescIterableArray19[0] = constantDescList7;
        Iterable<java.lang.constant.ConstantDesc>[] constantDescIterableArray22 = constantDescList0.toArray(constantDescIterableArray19);
        java.lang.constant.ConstantDesc[] constantDescArray34 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList35 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35, constantDescArray34);
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.lang.constant.ConstantDesc[] constantDescArray65 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList66 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList66, constantDescArray65);
        Object obj68 = constantDescList66.clone();
        Object[] objArray69 = new Object[] { 'a', constantDescList66 };
        Object[] objArray70 = constantDescList54.toArray(objArray69);
        int int71 = constantDescList54.size();
        boolean boolean72 = constantDescList35.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream73 = constantDescList54.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList74 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray75 = constantDescList74.toArray();
        boolean boolean76 = constantDescList74.isEmpty();
        boolean boolean77 = constantDescList54.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
        boolean boolean78 = constantDescList0.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc80 = constantDescList74.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(objArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray1), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray1), "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(constantDescSpliterator4);
        org.junit.Assert.assertNotNull(constantDescArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + constantDesc11 + "' != '" + 0L + "'", constantDesc11, 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(constantDescStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(iterableArray18);
        org.junit.Assert.assertNotNull(constantDescIterableArray19);
        org.junit.Assert.assertNotNull(constantDescIterableArray22);
        org.junit.Assert.assertNotNull(constantDescArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 16 + "'", int71 == 16);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(constantDescStream73);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList42.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator46 = constantDescList42.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList42.parallelStream();
        Class<?> wildcardClass48 = constantDescList42.getClass();
        boolean boolean49 = constantDescList17.equals((Object) constantDescList42);
        constantDescList17.clear();
        java.lang.constant.ConstantDesc constantDesc52 = null;
        // The following exception was thrown during execution in test generation
        try {
            constantDescList17.add((int) (byte) 1, constantDesc52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream45);
        org.junit.Assert.assertNotNull(constantDescSpliterator46);
        org.junit.Assert.assertNotNull(constantDescStream47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream55 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList56 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean57 = constantDescList31.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList56);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList58 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray59 = constantDescList58.toArray();
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        constantDescList9.ensureCapacity(10);
        Object obj15 = constantDescList9.clone();
        int int16 = constantDescList9.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc18 = constantDescList9.get(12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 12 out of bounds for length 8");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor23 = constantDescList21.listIterator(8);
        Object[] objArray24 = constantDescList21.toArray();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList21.stream();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescItor23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]");
        org.junit.Assert.assertNotNull(constantDescStream25);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        Object[] objArray36 = constantDescList17.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray53 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList54 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList54, constantDescArray53);
        String str56 = constantDescList54.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream57 = constantDescList54.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator58 = constantDescList54.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream59 = constantDescList54.parallelStream();
        boolean boolean61 = constantDescList54.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor62 = constantDescList54.iterator();
        constantDescList54.clear();
        int int64 = constantDescList17.indexOf((Object) constantDescList54);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor65 = constantDescList17.listIterator();
        java.lang.constant.ConstantDesc constantDesc67 = constantDescList17.remove(0);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList68 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray85 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList86 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList86, constantDescArray85);
        String str88 = constantDescList86.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream89 = constantDescList86.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator90 = constantDescList86.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream91 = constantDescList86.parallelStream();
        boolean boolean92 = constantDescList68.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList86);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor93 = constantDescList86.listIterator();
        String str94 = constantDescList86.toString();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor95 = constantDescList86.iterator();
        boolean boolean96 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList86);
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str56, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream57);
        org.junit.Assert.assertNotNull(constantDescSpliterator58);
        org.junit.Assert.assertNotNull(constantDescStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constantDescItor62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(constantDescItor65);
        org.junit.Assert.assertEquals("'" + constantDesc67 + "' != '" + 10 + "'", constantDesc67, 10);
        org.junit.Assert.assertNotNull(constantDescArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str88, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream89);
        org.junit.Assert.assertNotNull(constantDescSpliterator90);
        org.junit.Assert.assertNotNull(constantDescStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(constantDescItor93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str94, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescItor95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) '#');
        constantDescList1.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList3 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray20 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21, constantDescArray20);
        String str23 = constantDescList21.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream24 = constantDescList21.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator25 = constantDescList21.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream26 = constantDescList21.parallelStream();
        boolean boolean27 = constantDescList3.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList21);
        constantDescList21.clear();
        int int29 = constantDescList1.indexOf((Object) constantDescList21);
        org.junit.Assert.assertNotNull(constantDescArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str23, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream24);
        org.junit.Assert.assertNotNull(constantDescSpliterator25);
        org.junit.Assert.assertNotNull(constantDescStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList1.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor3 = constantDescList1.listIterator();
        Object[] objArray4 = constantDescList1.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList6 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean7 = constantDescList6.isEmpty();
        java.lang.constant.ConstantDesc[] constantDescArray19 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList20 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList20, constantDescArray19);
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList39 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39, constantDescArray38);
        String str41 = constantDescList39.toString();
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51, constantDescArray50);
        Object obj53 = constantDescList51.clone();
        Object[] objArray54 = new Object[] { 'a', constantDescList51 };
        Object[] objArray55 = constantDescList39.toArray(objArray54);
        int int56 = constantDescList39.size();
        boolean boolean57 = constantDescList20.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList39);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream60 = constantDescList59.parallelStream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList62 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        int int75 = constantDescList72.lastIndexOf((Object) 1L);
        constantDescList72.ensureCapacity(10);
        boolean boolean78 = constantDescList62.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        boolean boolean79 = constantDescList59.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean80 = constantDescList20.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        java.lang.constant.Constable[][] constableArray81 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][] constableArray82 = constantDescList62.toArray(constableArray81);
        boolean boolean83 = constantDescList6.remove((Object) constantDescList62);
        boolean boolean84 = constantDescList1.addAll(0, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList62);
        boolean boolean85 = constantDescList1.isEmpty();
        org.junit.Assert.assertNotNull(constantDescStream2);
        org.junit.Assert.assertNotNull(constantDescItor3);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(constantDescArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str41, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 16 + "'", int56 == 16);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(constantDescStream60);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(constableArray81);
        org.junit.Assert.assertNotNull(constableArray82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        boolean boolean36 = constantDescList17.add((java.lang.constant.ConstantDesc) "hi!");
        Object[] objArray37 = constantDescList17.toArray();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0, hi!]");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream50 = constantDescList31.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList51 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray52 = constantDescList51.toArray();
        boolean boolean53 = constantDescList51.isEmpty();
        boolean boolean54 = constantDescList31.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList51);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList57 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray66 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList67 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67, constantDescArray66);
        int int70 = constantDescList67.lastIndexOf((Object) 1L);
        constantDescList67.ensureCapacity(10);
        boolean boolean73 = constantDescList57.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList67);
        Object obj74 = constantDescList57.clone();
        boolean boolean75 = constantDescList31.addAll(10, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList57);
        constantDescList57.trimToSize();
        Object obj77 = constantDescList57.clone();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc80 = constantDescList57.set(0, (java.lang.constant.ConstantDesc) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(constantDescStream50);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList0 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream2 = constantDescList0.parallelStream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.constant.ConstantDesc constantDesc4 = constantDescList0.remove((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescStream2);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 0.0d);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList17.iterator();
        constantDescList17.clear();
        java.lang.constant.ConstantDesc[] constantDescArray35 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList36 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList36, constantDescArray35);
        int int39 = constantDescList36.lastIndexOf((Object) 1L);
        constantDescList36.ensureCapacity(10);
        boolean boolean42 = constantDescList17.equals((Object) constantDescList36);
        java.util.Collection<java.lang.constant.ConstantDesc> constantDescCollection43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = constantDescList36.containsAll(constantDescCollection43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(constantDescArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        int int34 = constantDescList31.lastIndexOf((Object) 1L);
        constantDescList31.ensureCapacity(10);
        boolean boolean37 = constantDescList21.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        Object[] objArray38 = constantDescList31.toArray();
        boolean boolean39 = constantDescList11.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream40 = constantDescList31.parallelStream();
        java.lang.constant.ConstantDesc[] constantDescArray52 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList53 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList53, constantDescArray52);
        java.lang.constant.ConstantDesc[] constantDescArray71 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList72 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72, constantDescArray71);
        String str74 = constantDescList72.toString();
        java.lang.constant.ConstantDesc[] constantDescArray83 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList84 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList84, constantDescArray83);
        Object obj86 = constantDescList84.clone();
        Object[] objArray87 = new Object[] { 'a', constantDescList84 };
        Object[] objArray88 = constantDescList72.toArray(objArray87);
        int int89 = constantDescList72.size();
        boolean boolean90 = constantDescList53.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream91 = constantDescList72.stream();
        boolean boolean92 = constantDescList31.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList72);
        String str93 = constantDescList31.toString();
        String str94 = constantDescList31.toString();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator95 = constantDescList31.spliterator();
        boolean boolean96 = constantDescList31.isEmpty();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(constantDescStream40);
        org.junit.Assert.assertNotNull(constantDescArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(constantDescArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str74, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 16 + "'", int89 == 16);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(constantDescStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[0, 0.0]" + "'", str93, "[0, 0.0]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[0, 0.0]" + "'", str94, "[0, 0.0]");
        org.junit.Assert.assertNotNull(constantDescSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.lang.constant.ConstantDesc[] constantDescArray28 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList29 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList29, constantDescArray28);
        Object obj31 = constantDescList29.clone();
        Object[] objArray32 = new Object[] { 'a', constantDescList29 };
        Object[] objArray33 = constantDescList17.toArray(objArray32);
        int int34 = constantDescList17.size();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor35 = constantDescList17.listIterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList37 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream38 = constantDescList37.parallelStream();
        Object obj39 = constantDescList37.clone();
        boolean boolean40 = constantDescList17.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList37);
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator41 = constantDescList37.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream42 = constantDescList37.stream();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 16 + "'", int34 == 16);
        org.junit.Assert.assertNotNull(constantDescItor35);
        org.junit.Assert.assertNotNull(constantDescStream38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(constantDescSpliterator41);
        org.junit.Assert.assertNotNull(constantDescStream42);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        constantDescList17.add(0, (java.lang.constant.ConstantDesc) (-1.0f));
        boolean boolean24 = constantDescList17.add((java.lang.constant.ConstantDesc) 16);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream25 = constantDescList17.stream();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList26 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray27 = constantDescList26.toArray();
        boolean boolean28 = constantDescList26.isEmpty();
        int int29 = constantDescList26.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList30 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList26);
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor31 = constantDescList26.listIterator();
        constantDescList26.trimToSize();
        java.lang.constant.ConstantDesc[] constantDescArray34 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList35 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList35, constantDescArray34);
        java.lang.constant.ConstantDesc constantDesc38 = null;
        java.lang.constant.ConstantDesc constantDesc39 = constantDescList35.set(0, constantDesc38);
        constantDescList35.trimToSize();
        Class<?> wildcardClass41 = constantDescList35.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray42 = new java.lang.reflect.GenericDeclaration[] { wildcardClass41 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray43 = constantDescList26.toArray(genericDeclarationArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement[] annotatedElementArray44 = constantDescList17.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: arraycopy: element type mismatch: can not cast one of the elements of java.lang.Object[] to the type of the destination array, java.lang.reflect.GenericDeclaration");
        } catch (ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(constantDescStream25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(constantDescItor31);
        org.junit.Assert.assertNotNull(constantDescArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + constantDesc39 + "' != '" + 0L + "'", constantDesc39, 0L);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(genericDeclarationArray42);
        org.junit.Assert.assertNotNull(genericDeclarationArray43);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.lang.constant.ConstantDesc[] constantDescArray8 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList9 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList9, constantDescArray8);
        int int12 = constantDescList9.lastIndexOf((Object) 1L);
        String str13 = constantDescList9.toString();
        org.junit.Assert.assertNotNull(constantDescArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]" + "'", str13, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) (byte) 100);
        java.lang.constant.ConstantDesc[] constantDescArray18 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList19 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19, constantDescArray18);
        String str21 = constantDescList19.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList19.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor24 = constantDescList19.listIterator((int) (byte) 10);
        boolean boolean25 = constantDescList1.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList19);
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList27 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream28 = constantDescList27.parallelStream();
        Object obj29 = constantDescList27.clone();
        boolean boolean30 = constantDescList19.removeAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList27);
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor31 = constantDescList27.iterator();
        org.junit.Assert.assertNotNull(constantDescArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str21, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(constantDescStream28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(constantDescItor31);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList1 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.lang.constant.ConstantDesc[] constantDescArray10 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList11 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11, constantDescArray10);
        int int14 = constantDescList11.lastIndexOf((Object) 1L);
        constantDescList11.ensureCapacity(10);
        boolean boolean17 = constantDescList1.containsAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        boolean boolean19 = constantDescList11.add((java.lang.constant.ConstantDesc) 10.0f);
        constantDescList11.trimToSize();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList21 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList11);
        String str22 = constantDescList21.toString();
        org.junit.Assert.assertNotNull(constantDescArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]" + "'", str22, "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0, 10.0]");
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.lang.constant.ConstantDesc[] constantDescArray11 = new java.lang.constant.ConstantDesc[] { 10.0f, 0.0d, 1, 10, 100.0f, (-1.0d), 0.0d, 1, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]", "hi!", (-1) };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList12 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList12, constantDescArray11);
        java.lang.constant.ConstantDesc[] constantDescArray30 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList31 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31, constantDescArray30);
        String str33 = constantDescList31.toString();
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 100.0d, 1.0f, "hi!", 1.0f, 100, (-1), 0.0f };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList43 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList43, constantDescArray42);
        Object obj45 = constantDescList43.clone();
        Object[] objArray46 = new Object[] { 'a', constantDescList43 };
        Object[] objArray47 = constantDescList31.toArray(objArray46);
        int int48 = constantDescList31.size();
        boolean boolean49 = constantDescList12.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor51 = constantDescList12.listIterator((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 27");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(constantDescArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str33, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[100.0, 1.0, hi!, 1.0, 100, -1, 0.0]");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[a, [100.0, 1.0, hi!, 1.0, 100, -1, 0.0]]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 16 + "'", int48 == 16);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.lang.constant.ConstantDesc[] constantDescArray16 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList17 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList17, constantDescArray16);
        String str19 = constantDescList17.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList17.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator21 = constantDescList17.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream22 = constantDescList17.parallelStream();
        constantDescList17.clear();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList24 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        java.lang.constant.ConstantDesc[] constantDescArray41 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList42 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42, constantDescArray41);
        String str44 = constantDescList42.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream45 = constantDescList42.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator46 = constantDescList42.spliterator();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream47 = constantDescList42.parallelStream();
        boolean boolean48 = constantDescList24.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        boolean boolean49 = constantDescList17.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList42);
        Object obj50 = constantDescList42.clone();
        org.junit.Assert.assertNotNull(constantDescArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str19, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescSpliterator21);
        org.junit.Assert.assertNotNull(constantDescStream22);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str44, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream45);
        org.junit.Assert.assertNotNull(constantDescSpliterator46);
        org.junit.Assert.assertNotNull(constantDescStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(String.valueOf(obj50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        Object[] objArray7 = constantDescList2.toArray();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList8 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray9 = constantDescList8.toArray();
        boolean boolean10 = constantDescList2.remove((Object) constantDescList8);
        Object[] objArray11 = constantDescList8.toArray();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor12 = constantDescList8.iterator();
        int int13 = constantDescList8.size();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList14 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        Object[] objArray15 = constantDescList14.toArray();
        int int16 = constantDescList14.size();
        java.util.List<java.lang.constant.ConstantDesc> constantDescList19 = constantDescList14.subList((int) (short) 0, (int) (byte) 0);
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream20 = constantDescList14.stream();
        java.util.Iterator<java.lang.constant.ConstantDesc> constantDescItor21 = constantDescList14.iterator();
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList23 = new java.util.ArrayList<java.lang.constant.ConstantDesc>((int) ' ');
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream24 = constantDescList23.parallelStream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor25 = constantDescList23.listIterator();
        Object[] objArray26 = constantDescList23.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray44 = new java.lang.constant.ConstantDesc[] { 10, 1, 10.0f, 10L, 0.0f, 0, 1, 0.0d, 0, 0L, 1, 10L, 0.0d, 0.0f, 10, 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList45 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45, constantDescArray44);
        String str47 = constantDescList45.toString();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream48 = constantDescList45.parallelStream();
        java.util.Spliterator<java.lang.constant.ConstantDesc> constantDescSpliterator49 = constantDescList45.spliterator();
        java.lang.constant.ConstantDesc[] constantDescArray58 = new java.lang.constant.ConstantDesc[] { 0, 100L, 100.0d, 0.0d, "hi!", 1.0d, "hi!", 10.0d };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList59 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList59, constantDescArray58);
        int int62 = constantDescList59.lastIndexOf((Object) 1L);
        constantDescList59.ensureCapacity(10);
        Object obj65 = constantDescList59.clone();
        boolean boolean66 = constantDescList45.contains((Object) constantDescList59);
        java.lang.constant.ConstantDesc constantDesc68 = constantDescList45.get((int) (short) 10);
        java.lang.constant.ConstantDesc constantDesc71 = constantDescList45.set((int) (short) 1, (java.lang.constant.ConstantDesc) (-1.0f));
        int int73 = constantDescList45.lastIndexOf((Object) "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        boolean boolean74 = constantDescList23.addAll((int) (byte) 0, (java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList45);
        boolean boolean75 = constantDescList14.retainAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList23);
        int int76 = constantDescList8.indexOf((Object) constantDescList14);
        Class<?> wildcardClass77 = constantDescList14.getClass();
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[null]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(constantDescItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(constantDescList19);
        org.junit.Assert.assertNotNull(constantDescStream20);
        org.junit.Assert.assertNotNull(constantDescItor21);
        org.junit.Assert.assertNotNull(constantDescStream24);
        org.junit.Assert.assertNotNull(constantDescItor25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertNotNull(constantDescArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]" + "'", str47, "[10, 1, 10.0, 10, 0.0, 0, 1, 0.0, 0, 0, 1, 10, 0.0, 0.0, 10, 0]");
        org.junit.Assert.assertNotNull(constantDescStream48);
        org.junit.Assert.assertNotNull(constantDescSpliterator49);
        org.junit.Assert.assertNotNull(constantDescArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(String.valueOf(obj65), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[0, 100, 100.0, 0.0, hi!, 1.0, hi!, 10.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + constantDesc68 + "' != '" + 1 + "'", constantDesc68, 1);
        org.junit.Assert.assertEquals("'" + constantDesc71 + "' != '" + 1 + "'", constantDesc71, 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.lang.constant.ConstantDesc[] constantDescArray1 = new java.lang.constant.ConstantDesc[] { 0L };
        java.util.ArrayList<java.lang.constant.ConstantDesc> constantDescList2 = new java.util.ArrayList<java.lang.constant.ConstantDesc>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.constant.ConstantDesc>) constantDescList2, constantDescArray1);
        java.lang.constant.ConstantDesc constantDesc5 = null;
        java.lang.constant.ConstantDesc constantDesc6 = constantDescList2.set(0, constantDesc5);
        constantDescList2.trimToSize();
        java.util.stream.Stream<java.lang.constant.ConstantDesc> constantDescStream8 = constantDescList2.stream();
        java.util.ListIterator<java.lang.constant.ConstantDesc> constantDescItor10 = constantDescList2.listIterator(0);
        // The following exception was thrown during execution in test generation
        try {
            constantDescList2.add(8, (java.lang.constant.ConstantDesc) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 8, Size: 1");
        } catch (IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(constantDescArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + constantDesc6 + "' != '" + 0L + "'", constantDesc6, 0L);
        org.junit.Assert.assertNotNull(constantDescStream8);
        org.junit.Assert.assertNotNull(constantDescItor10);
    }
}

