package org.huawei.linkedhashset;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        boolean boolean9 = strComparableSet0.remove((java.lang.Object) '#');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet0.parallelStream();
        int int11 = strComparableSet0.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str71 = strComparableSet70.toString();
        boolean boolean72 = strComparableSet43.equals((java.lang.Object) strComparableSet70);
        boolean boolean73 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object obj74 = strComparableSet70.clone();
        boolean boolean75 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        boolean boolean13 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet16.toArray();
        int int19 = strComparableSet16.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream39 = strComparableSet36.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj42 = strComparableSet41.clone();
        boolean boolean43 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean44 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        boolean boolean49 = strComparableSet46.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet51.equals((java.lang.Object) 1);
        boolean boolean54 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet51.contains((java.lang.Object) strComparableSet57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray71 = new java.lang.reflect.GenericDeclaration[] { wildcardClass60, wildcardClass62, wildcardClass64, wildcardClass66, wildcardClass68, wildcardClass70 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray72 = strComparableSet51.toArray(genericDeclarationArray71);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray73 = strComparableSet22.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray71);
        boolean boolean74 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object obj75 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strComparableStream39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(genericDeclarationArray71);
        org.junit.Assert.assertNotNull(genericDeclarationArray72);
        org.junit.Assert.assertNotNull(annotatedElementArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[hi!]");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        int int56 = strComparableSet6.size();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj59 = strComparableSet6.clone();
        java.lang.String str60 = strComparableSet6.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[[]]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[[]]" + "'", str60, "[[]]");
        org.junit.Assert.assertNotNull(strComparableItor61);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean28 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet26.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.lang.Object[] objArray34 = strComparableSet32.toArray();
        int int35 = strComparableSet32.size();
        boolean boolean36 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str39 = strComparableSet38.toString();
        boolean boolean40 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.String str41 = strComparableSet26.toString();
        boolean boolean42 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        boolean boolean49 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[]" + "'", str39, "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[]" + "'", str41, "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet8.parallelStream();
        java.lang.Object[] objArray12 = strComparableSet8.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = strComparableSet8.iterator();
        int int14 = strComparableSet8.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet8.parallelStream();
        java.lang.Object obj16 = strComparableSet8.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet8.parallelStream();
        boolean boolean18 = strComparableSet1.contains((java.lang.Object) strComparableStream17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object[] objArray67 = strComparableSet63.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean82 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean83 = strComparableSet58.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str86 = strComparableSet85.toString();
        boolean boolean87 = strComparableSet58.equals((java.lang.Object) strComparableSet85);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator88 = strComparableSet85.spliterator();
        boolean boolean89 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor90 = strComparableSet85.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[]" + "'", str86, "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableItor90);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        boolean boolean33 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object obj46 = null;
        boolean boolean47 = strComparableSet42.equals(obj46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet59.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj65 = strComparableSet64.clone();
        boolean boolean66 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean67 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean68 = strComparableSet42.equals((java.lang.Object) strComparableSet59);
        int int69 = strComparableSet59.size();
        boolean boolean70 = strComparableSet26.remove((java.lang.Object) int69);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.lang.Object[] objArray19 = strComparableSet14.toArray();
        boolean boolean20 = strComparableSet13.equals((java.lang.Object) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator21 = strComparableSet13.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator21);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = strComparableSet26.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet38.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet70 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean71 = strComparableSet53.equals((java.lang.Object) (short) 1);
        boolean boolean72 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean76 = strComparableSet74.contains((java.lang.Object) 100L);
        boolean boolean78 = strComparableSet74.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean79 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean80 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strComparableItor31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet6.stream();
        java.lang.Object obj23 = strComparableSet6.clone();
        java.lang.Object[] objArray24 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean81 = strComparableSet0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet43.contains((java.lang.Object) strComparableSet49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray63 = new java.lang.reflect.GenericDeclaration[] { wildcardClass52, wildcardClass54, wildcardClass56, wildcardClass58, wildcardClass60, wildcardClass62 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray64 = strComparableSet43.toArray(genericDeclarationArray63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        boolean boolean71 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean72 = strComparableSet43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean74 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean76 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(genericDeclarationArray63);
        org.junit.Assert.assertNotNull(genericDeclarationArray64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean59 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj60 = strComparableSet57.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean64 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        strComparableSet62.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean14 = strComparableSet12.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.String str47 = strComparableSet12.toString();
        boolean boolean48 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        int int49 = strComparableSet5.size();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.stream();
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = strComparableSet2.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet2.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableItor15);
        org.junit.Assert.assertNotNull(strComparableStream16);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) 'a', (float) 3);
        java.lang.Object[] objArray17 = strComparableSet16.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet16.stream();
        boolean boolean19 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet20 = new java.util.LinkedHashSet<java.lang.Class<?>>();
        boolean boolean21 = strComparableSet6.remove((java.lang.Object) wildcardClassSet20);
        java.lang.String str22 = strComparableSet6.toString();
        java.lang.Object[] objArray23 = strComparableSet6.toArray();
        boolean boolean24 = strComparableSet6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        boolean boolean54 = strComparableSet51.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet56.equals((java.lang.Object) 1);
        boolean boolean59 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.Object[] objArray65 = strComparableSet61.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean80 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean81 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str84 = strComparableSet83.toString();
        boolean boolean85 = strComparableSet56.equals((java.lang.Object) strComparableSet83);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator86 = strComparableSet83.spliterator();
        boolean boolean87 = strComparableSet20.equals((java.lang.Object) strComparableSet83);
        boolean boolean88 = strComparableSet7.equals((java.lang.Object) strComparableSet20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[]" + "'", str84, "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object obj21 = strComparableSet11.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean43 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[[], [[]]]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj59 = strComparableSet56.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet56.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean75 = strComparableSet67.contains((java.lang.Object) 100);
        boolean boolean76 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        strComparableSet56.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet80.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet84.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object[] objArray88 = strComparableSet86.toArray();
        int int89 = strComparableSet86.size();
        boolean boolean90 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet92 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str93 = strComparableSet92.toString();
        boolean boolean94 = strComparableSet80.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet92);
        java.lang.String str95 = strComparableSet80.toString();
        boolean boolean96 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean97 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        java.lang.Object obj98 = strComparableSet36.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[]" + "'", str93, "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[]" + "'", str95, "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(obj98);
        org.junit.Assert.assertEquals(obj98.toString(), "[[[], [[]]]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj98), "[[[], [[]]]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj98), "[[[], [[]]]]");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet6.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean55 = strComparableSet6.remove((java.lang.Object) strComparableSet50);
        boolean boolean57 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[[], [[]]]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        boolean boolean9 = strComparableSet8.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.lang.Object[] objArray66 = strComparableSet62.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream75 = strComparableSet72.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj78 = strComparableSet77.clone();
        boolean boolean79 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean80 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean82 = strComparableSet57.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str85 = strComparableSet84.toString();
        boolean boolean86 = strComparableSet57.equals((java.lang.Object) strComparableSet84);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator87 = strComparableSet84.spliterator();
        boolean boolean88 = strComparableSet21.equals((java.lang.Object) strComparableSet84);
        boolean boolean89 = strComparableSet21.isEmpty();
        boolean boolean90 = strComparableSet8.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(strComparableStream75);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[]" + "'", str85, "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        boolean boolean9 = strComparableSet0.remove((java.lang.Object) '#');
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet45.contains((java.lang.Object) strComparableSet51);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator53 = strComparableSet51.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet51.stream();
        boolean boolean55 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean56 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator53);
        org.junit.Assert.assertNotNull(strComparableStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList52 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableList52.stream();
        boolean boolean55 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet21.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strComparableStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj9 = null;
        boolean boolean10 = strComparableSet1.contains(obj9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet57.contains((java.lang.Object) strComparableSet63);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet63.spliterator();
        boolean boolean66 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = strComparableSet17.iterator();
        boolean boolean69 = strComparableSet1.equals((java.lang.Object) strComparableItor68);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableStream70);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int7 = strComparableSet5.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet10.spliterator();
        int int16 = strComparableSet10.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet18.parallelStream();
        boolean boolean28 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator30 = strComparableSet29.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet77.contains((java.lang.Object) strComparableSet83);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator85 = strComparableSet83.spliterator();
        boolean boolean86 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.lang.String str87 = strComparableSet37.toString();
        boolean boolean88 = strComparableSet29.contains((java.lang.Object) strComparableSet37);
        boolean boolean89 = strComparableSet18.remove((java.lang.Object) strComparableSet29);
        boolean boolean90 = strComparableSet10.contains((java.lang.Object) strComparableSet18);
        boolean boolean91 = strComparableSet10.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[]" + "'", str87, "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.lang.String str18 = strComparableSet2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator40 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        boolean boolean49 = strComparableSet46.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet51.equals((java.lang.Object) 1);
        boolean boolean54 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = strComparableSet43.iterator();
        boolean boolean57 = strComparableSet32.remove((java.lang.Object) strComparableItor56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertNotNull(strComparableSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean31 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.lang.Object[] objArray36 = strComparableSet34.toArray();
        int int37 = strComparableSet34.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        boolean boolean42 = strComparableSet39.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet44.equals((java.lang.Object) 1);
        boolean boolean47 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj55 = strComparableSet54.clone();
        boolean boolean56 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean57 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean68 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.lang.Object[] objArray73 = strComparableSet69.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet79.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj85 = strComparableSet84.clone();
        boolean boolean86 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean87 = strComparableSet74.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean88 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean89 = strComparableSet64.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        strComparableSet74.clear();
        boolean boolean91 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean92 = strComparableSet16.equals((java.lang.Object) strComparableSet34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.lang.String str58 = strComparableSet26.toString();
        java.lang.Object obj59 = strComparableSet26.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean75 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj76 = strComparableSet73.clone();
        java.lang.Object[] objArray77 = strComparableSet73.toArray();
        java.lang.Object[] objArray78 = strComparableSet73.toArray();
        boolean boolean79 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object obj80 = strComparableSet73.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean85 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet83.clear();
        boolean boolean87 = strComparableSet73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        int int88 = strComparableSet73.size();
        boolean boolean89 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.String str90 = strComparableSet26.toString();
        java.lang.String str91 = strComparableSet26.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[[]]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[[]]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[]" + "'", str90, "[]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[]" + "'", str91, "[]");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[][][]> annotatedElementArraySet1 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[][][]>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean8 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj9 = strComparableSet6.clone();
        java.lang.Object[] objArray10 = strComparableSet6.toArray();
        boolean boolean11 = strComparableSet6.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean13 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator21 = strComparableSet20.spliterator();
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet14.spliterator();
        boolean boolean24 = strComparableSet12.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        boolean boolean25 = strComparableSet1.contains((java.lang.Object) boolean24);
        java.lang.String str26 = strComparableSet1.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj44 = strComparableSet43.clone();
        boolean boolean45 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean46 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean57 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet33.stream();
        boolean boolean60 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean61 = strComparableSet1.equals((java.lang.Object) strComparableSet33);
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[[]]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean24 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj25 = strComparableSet22.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet27.parallelStream();
        java.lang.Object[] objArray30 = strComparableSet27.toArray();
        boolean boolean31 = strComparableSet2.equals((java.lang.Object) strComparableSet27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.lang.Object[] objArray12 = strComparableSet6.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean17 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj18 = strComparableSet15.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet15.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean34 = strComparableSet26.contains((java.lang.Object) 100);
        boolean boolean35 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet15.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor37 = strComparableSet15.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        boolean boolean42 = strComparableSet39.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet44.equals((java.lang.Object) 1);
        boolean boolean47 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj55 = strComparableSet54.clone();
        boolean boolean56 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean57 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        boolean boolean82 = strComparableSet79.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean86 = strComparableSet84.equals((java.lang.Object) 1);
        boolean boolean87 = strComparableSet79.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean88 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet90 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean91 = strComparableSet84.contains((java.lang.Object) strComparableSet90);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator92 = strComparableSet90.spliterator();
        boolean boolean93 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet90);
        java.lang.String str94 = strComparableSet44.toString();
        java.lang.Object[] objArray95 = strComparableSet44.toArray();
        boolean boolean97 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean98 = strComparableSet15.contains((java.lang.Object) boolean97);
        boolean boolean99 = strComparableSet6.equals((java.lang.Object) boolean97);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableItor37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[]" + "'", str94, "[]");
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet26.parallelStream();
        java.lang.String str49 = strComparableSet26.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet51.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj57 = strComparableSet56.clone();
        boolean boolean58 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        boolean boolean67 = strComparableSet64.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet69.equals((java.lang.Object) 1);
        boolean boolean72 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator74 = strComparableSet61.spliterator();
        boolean boolean75 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray76 = strComparableSet51.toArray();
        boolean boolean77 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator78 = strComparableSet26.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strComparableStream54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator78);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str54 = strComparableSet53.toString();
        boolean boolean55 = strComparableSet26.equals((java.lang.Object) strComparableSet53);
        java.lang.String str56 = strComparableSet53.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream57 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str60 = strComparableSet59.toString();
        boolean boolean62 = strComparableSet59.equals((java.lang.Object) 10L);
        boolean boolean63 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(strComparableStream57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[]" + "'", str60, "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj2 = strComparableSet1.clone();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator3 = strComparableSet1.spliterator();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator3);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet6.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet6.parallelStream();
        java.lang.Object obj25 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean17 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj18 = strComparableSet15.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet15.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean34 = strComparableSet26.contains((java.lang.Object) 100);
        boolean boolean35 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean36 = strComparableSet12.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet26.equals(obj37);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = strComparableSet41.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.Object[] objArray51 = strComparableSet47.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean54 = strComparableSet47.remove((java.lang.Object) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean76 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean77 = strComparableSet41.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableItor46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object[] objArray67 = strComparableSet63.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean82 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean83 = strComparableSet58.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str86 = strComparableSet85.toString();
        boolean boolean87 = strComparableSet58.equals((java.lang.Object) strComparableSet85);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator88 = strComparableSet85.spliterator();
        boolean boolean89 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean91 = strComparableSet85.add((java.lang.Comparable<java.lang.String>) "[[hi!, []]]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[]" + "'", str86, "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet52.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet58.toArray();
        java.lang.Object[] objArray63 = strComparableSet58.toArray();
        int int64 = strComparableSet58.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = strComparableSet58.iterator();
        boolean boolean67 = strComparableSet58.remove((java.lang.Object) '#');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet58.parallelStream();
        boolean boolean69 = strComparableSet52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str72 = strComparableSet71.toString();
        boolean boolean74 = strComparableSet71.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.lang.Object[] objArray79 = strComparableSet75.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableSet85.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int87 = strComparableSet85.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream88 = strComparableSet85.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet90 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj91 = strComparableSet90.clone();
        boolean boolean92 = strComparableSet85.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet90);
        boolean boolean93 = strComparableSet80.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet90);
        boolean boolean94 = strComparableSet75.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean95 = strComparableSet71.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream96 = strComparableSet71.parallelStream();
        boolean boolean97 = strComparableSet52.contains((java.lang.Object) strComparableSet71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strComparableItor65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(strComparableStream88);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strComparableStream96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.lang.Object obj56 = strComparableSet51.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = strComparableSet76.iterator();
        boolean boolean79 = strComparableSet65.equals((java.lang.Object) strComparableSet76);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strComparableItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        int int54 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet26.parallelStream();
        java.lang.Class<?> wildcardClass56 = strComparableSet26.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean31 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        strComparableSet16.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableSet77.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableSet77.size();
        boolean boolean80 = strComparableSet77.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet82.equals((java.lang.Object) 1);
        boolean boolean85 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean86 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean89 = strComparableSet82.contains((java.lang.Object) strComparableSet88);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator90 = strComparableSet88.spliterator();
        boolean boolean91 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator92 = strComparableSet42.spliterator();
        boolean boolean93 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean94 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean96 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[[hi!, []]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }
}

