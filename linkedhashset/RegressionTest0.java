package org.huawei.linkedhashset;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>(10, (float) (byte) 10);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement> annotatedElementSet0 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement>();
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet2 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>>((int) (short) 10, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Object> objSet1 = new java.util.LinkedHashSet<java.lang.Object>(strComparableCollection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.size()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.invoke.TypeDescriptor.OfField[] ofFieldArray18 = new java.lang.invoke.TypeDescriptor.OfField[1];
        @SuppressWarnings("unchecked")
        java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[] wildcardClassOfFieldArray19 = (java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[]) ofFieldArray18;
        wildcardClassOfFieldArray19[0] = wildcardClass16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>[] wildcardClassOfFieldArray22 = strComparableSet2.toArray(wildcardClassOfFieldArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(ofFieldArray18);
        org.junit.Assert.assertNotNull(wildcardClassOfFieldArray19);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = strComparableSet6.removeAll(strComparableCollection59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream57 = strComparableSet6.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(strComparableStream57);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Class<?> wildcardClass16 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet2 = new java.util.LinkedHashSet<java.lang.Class<?>>((int) ' ', 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean8 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = strComparableSet1.addAll(strComparableCollection7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.lang.Class<?> wildcardClass12 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator10 = strComparableSet9.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet57.contains((java.lang.Object) strComparableSet63);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet63.spliterator();
        boolean boolean66 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.String str67 = strComparableSet17.toString();
        boolean boolean68 = strComparableSet9.contains((java.lang.Object) strComparableSet17);
        boolean boolean69 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.Comparable<java.lang.String> strComparable17 = null;
        boolean boolean18 = strComparableSet2.add(strComparable17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        java.util.LinkedHashSet<java.lang.String> strSet1 = new java.util.LinkedHashSet<java.lang.String>((int) '4');
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableItor10);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator74 = strComparableSet73.spliterator();
        java.lang.Class<?> wildcardClass75 = strComparableSet73.getClass();
        boolean boolean76 = strComparableSet42.remove((java.lang.Object) strComparableSet73);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>> strComparableBaseStreamSet2 = new java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>>((int) (short) 100, (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.lang.Object obj33 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet2 = new java.util.LinkedHashSet<java.lang.Class<?>>((int) '4', (float) 10L);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray78 = strComparableSet62.toArray();
        boolean boolean79 = strComparableSet10.equals((java.lang.Object) strComparableSet62);
        java.lang.Object[] objArray80 = strComparableSet62.toArray();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet21.spliterator();
        java.lang.Class<?> wildcardClass85 = strComparableSpliterator84.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>> strComparableBaseStreamSet0 = new java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>>();
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet43.contains((java.lang.Object) strComparableSet49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray63 = new java.lang.reflect.GenericDeclaration[] { wildcardClass52, wildcardClass54, wildcardClass56, wildcardClass58, wildcardClass60, wildcardClass62 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray64 = strComparableSet43.toArray(genericDeclarationArray63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        boolean boolean71 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean72 = strComparableSet43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean74 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.Object obj75 = strComparableSet66.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(genericDeclarationArray63);
        org.junit.Assert.assertNotNull(genericDeclarationArray64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[hi!, []]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[hi!, []]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[hi!, []]");
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        java.util.LinkedHashSet<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet1 = new java.util.LinkedHashSet<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>>((int) ' ');
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor5 = strComparableSet2.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableItor5);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>((int) (short) -1, (float) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean23 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet11.spliterator();
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object[] objArray26 = strComparableSet11.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        strComparableSet6.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object obj7 = strComparableSet1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[hi!]");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.constant.Constable[]> constableArraySet1 = new java.util.LinkedHashSet<java.lang.constant.Constable[]>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet0 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>();
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean33 = strComparableSet15.contains((java.lang.Object) strComparableSet31);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = strComparableSet15.iterator();
        boolean boolean35 = strComparableSet2.equals((java.lang.Object) strComparableItor34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        java.util.LinkedHashSet<java.lang.String[]> strArraySet1 = new java.util.LinkedHashSet<java.lang.String[]>((int) (byte) 10);
        java.lang.Class<?> wildcardClass2 = strArraySet1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet2 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]>((int) (byte) 100, (float) (byte) 10);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet10.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>(0, (float) '#');
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        strComparableSet10.clear();
        java.lang.Object[] objArray21 = strComparableSet10.toArray();
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray23 = strComparableSet10.toArray(strComparableCollectionArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream5 = strComparableSet1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(strComparableStream5);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet10.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = strComparableSet0.containsAll(strComparableCollection9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        java.lang.Object obj73 = strComparableSet42.clone();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = strComparableSet42.addAll(strComparableCollection74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Object[] objArray14 = strComparableSet10.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.util.LinkedHashSet<java.lang.Object> objSet0 = new java.util.LinkedHashSet<java.lang.Object>();
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        boolean boolean57 = strComparableSet19.equals((java.lang.Object) boolean56);
        boolean boolean58 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator59 = strComparableSet19.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator59);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet26.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strComparableStream52);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration> genericDeclarationSet1 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration>(0);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet1 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>((int) 'a');
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.lang.String str48 = strComparableSet26.toString();
        int int49 = strComparableSet26.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.lang.Object[] objArray37 = strComparableSet35.toArray();
        int int38 = strComparableSet35.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.Object[] objArray74 = strComparableSet70.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet80.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj86 = strComparableSet85.clone();
        boolean boolean87 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean88 = strComparableSet75.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean90 = strComparableSet65.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        strComparableSet75.clear();
        boolean boolean92 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean93 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        strComparableSet6.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>> strComparableSetSet2 = new java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>>((int) (short) 10, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        java.util.LinkedHashSet<java.lang.Cloneable> cloneableSet1 = new java.util.LinkedHashSet<java.lang.Cloneable>(3);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj74 = null;
        boolean boolean75 = strComparableSet73.contains(obj74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator4 = strComparableSet3.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean9 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj10 = strComparableSet7.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet7.parallelStream();
        boolean boolean12 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj81 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet78.parallelStream();
        boolean boolean83 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean84 = strComparableSet55.remove((java.lang.Object) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = strComparableSet55.iterator();
        boolean boolean87 = strComparableSet55.remove((java.lang.Object) (-1L));
        boolean boolean88 = strComparableSet3.contains((java.lang.Object) strComparableSet55);
        boolean boolean89 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean91 = strComparableSet0.contains((java.lang.Object) 0.0d);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet0.parallelStream();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertNotNull(strComparableSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableStream92);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet81.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean85 = strComparableSet0.contains((java.lang.Object) boolean84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet0.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(strComparableItor87);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableSet75.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int77 = strComparableSet75.size();
        boolean boolean78 = strComparableSet75.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean82 = strComparableSet80.equals((java.lang.Object) 1);
        boolean boolean83 = strComparableSet75.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean84 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet80.contains((java.lang.Object) strComparableSet86);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator88 = strComparableSet86.spliterator();
        boolean boolean89 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.String str90 = strComparableSet40.toString();
        boolean boolean92 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList94 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean95 = strComparableList94.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream96 = strComparableList94.stream();
        boolean boolean97 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList94);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream98 = strComparableList94.stream();
        boolean boolean99 = strComparableSet6.remove((java.lang.Object) strComparableList94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[]" + "'", str90, "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(strComparableStream96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(strComparableStream98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator4 = strComparableSet3.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean9 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj10 = strComparableSet7.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet7.parallelStream();
        boolean boolean12 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj81 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet78.parallelStream();
        boolean boolean83 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean84 = strComparableSet55.remove((java.lang.Object) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = strComparableSet55.iterator();
        boolean boolean87 = strComparableSet55.remove((java.lang.Object) (-1L));
        boolean boolean88 = strComparableSet3.contains((java.lang.Object) strComparableSet55);
        boolean boolean89 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.lang.Object obj90 = strComparableSet0.clone();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertNotNull(strComparableSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "[]");
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList2 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean4 = strComparableList2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object[] objArray24 = strComparableSet22.toArray();
        java.lang.Object[] objArray25 = strComparableSet22.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        strComparableSet62.clear();
        boolean boolean79 = strComparableSet22.remove((java.lang.Object) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator82 = strComparableSet81.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableSet85.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean87 = strComparableSet85.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj88 = strComparableSet85.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream89 = strComparableSet85.parallelStream();
        boolean boolean90 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean91 = strComparableSet62.remove((java.lang.Object) strComparableSet85);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableSet85.iterator();
        java.lang.Object[] objArray93 = strComparableSet85.toArray();
        int int94 = strComparableSet85.size();
        boolean boolean95 = strComparableSet5.contains((java.lang.Object) strComparableSet85);
        boolean boolean97 = strComparableSet85.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean98 = strComparableList2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableItor92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[[]]");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldSet1 = new java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 0);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>((int) (short) 100, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet0.iterator();
        java.lang.Class<?> wildcardClass82 = strComparableSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj81 = strComparableSet0.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[]");
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.stream();
        boolean boolean70 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet49.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean23 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet11.spliterator();
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet11.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet29.clear();
        boolean boolean33 = strComparableSet11.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean34 = strComparableSet29.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>> strComparableBaseStreamSet2 = new java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>>((int) (byte) 1, (float) (short) 10);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream66 = strComparableSet63.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj69 = strComparableSet68.clone();
        boolean boolean70 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean71 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet74.equals((java.lang.Object) 1);
        boolean boolean77 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean82 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableSet84.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableSet84.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream87 = strComparableSet84.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj90 = strComparableSet89.clone();
        boolean boolean91 = strComparableSet84.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        boolean boolean92 = strComparableSet79.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet93 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet95 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean96 = strComparableSet93.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet95);
        boolean boolean97 = strComparableSet79.contains((java.lang.Object) strComparableSet95);
        boolean boolean98 = strComparableSet78.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean99 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strComparableStream66);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(strComparableStream87);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = strComparableSet32.retainAll(strComparableCollection36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet59.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertNotNull(strComparableStream92);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator25 = strComparableSet10.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator26 = strComparableSet10.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator25);
        org.junit.Assert.assertNotNull(strComparableSpliterator26);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet8 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>((int) '#');
        boolean boolean9 = strComparableSet1.equals((java.lang.Object) strComparableIterableSet8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator42 = strComparableSet29.spliterator();
        boolean boolean43 = strComparableSet1.contains((java.lang.Object) strComparableSpliterator42);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '4');
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet2.toString();
        boolean boolean17 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[]]" + "'", str15, "[[]]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.util.LinkedHashSet<java.lang.Object[]> objArraySet0 = new java.util.LinkedHashSet<java.lang.Object[]>();
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        boolean boolean61 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean62 = strComparableSet57.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>((int) (short) -1, (float) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator4 = strComparableSet3.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean9 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj10 = strComparableSet7.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet7.parallelStream();
        boolean boolean12 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj81 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet78.parallelStream();
        boolean boolean83 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean84 = strComparableSet55.remove((java.lang.Object) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = strComparableSet55.iterator();
        boolean boolean87 = strComparableSet55.remove((java.lang.Object) (-1L));
        boolean boolean88 = strComparableSet3.contains((java.lang.Object) strComparableSet55);
        boolean boolean89 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean91 = strComparableSet0.contains((java.lang.Object) 0.0d);
        java.lang.Object obj92 = strComparableSet0.clone();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertNotNull(strComparableSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "[]");
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream51 = strComparableSet48.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj54 = strComparableSet53.clone();
        boolean boolean55 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean56 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object[] objArray72 = strComparableSet68.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream81 = strComparableSet78.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj84 = strComparableSet83.clone();
        boolean boolean85 = strComparableSet78.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean86 = strComparableSet73.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean88 = strComparableSet63.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object[] objArray89 = strComparableSet73.toArray();
        java.util.LinkedHashSet[] linkedHashSetArray91 = new java.util.LinkedHashSet[2];
        @SuppressWarnings("unchecked")
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[] strComparableSetArray92 = (java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]) linkedHashSetArray91;
        strComparableSetArray92[0] = strComparableSet23;
        strComparableSetArray92[1] = strComparableSet73;
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[] strComparableSetArray97 = strComparableSet2.toArray(strComparableSetArray92);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(strComparableStream51);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(strComparableStream81);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(linkedHashSetArray91);
        org.junit.Assert.assertNotNull(strComparableSetArray92);
        org.junit.Assert.assertNotNull(strComparableSetArray97);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        boolean boolean61 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean62 = strComparableSet52.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        boolean boolean60 = strComparableSet0.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean65 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj66 = strComparableSet63.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str72 = strComparableSet71.toString();
        boolean boolean74 = strComparableSet71.equals((java.lang.Object) 10L);
        boolean boolean75 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean76 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.lang.Object obj77 = strComparableSet0.clone();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean37 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean38 = strComparableSet6.remove((java.lang.Object) strComparableSet13);
        java.lang.Object obj39 = null;
        boolean boolean40 = strComparableSet13.remove(obj39);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        boolean boolean71 = strComparableSet68.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet73.equals((java.lang.Object) 1);
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object obj77 = null;
        boolean boolean78 = strComparableSet73.equals(obj77);
        boolean boolean79 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet53.spliterator();
        boolean boolean81 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection82 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = strComparableSet53.containsAll(strComparableCollection82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator6 = strComparableSet5.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet8.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean14 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj15 = strComparableSet12.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet12.parallelStream();
        boolean boolean17 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.lang.Object[] objArray22 = strComparableSet20.toArray();
        java.lang.Object[] objArray23 = strComparableSet20.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.lang.Object[] objArray59 = strComparableSet55.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean74 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean75 = strComparableSet50.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        strComparableSet60.clear();
        boolean boolean77 = strComparableSet20.remove((java.lang.Object) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet79.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean85 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj86 = strComparableSet83.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream87 = strComparableSet83.parallelStream();
        boolean boolean88 = strComparableSet79.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean89 = strComparableSet60.remove((java.lang.Object) strComparableSet83);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor90 = strComparableSet60.iterator();
        boolean boolean92 = strComparableSet60.remove((java.lang.Object) (-1L));
        boolean boolean93 = strComparableSet8.contains((java.lang.Object) strComparableSet60);
        boolean boolean94 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean95 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean96 = strComparableSet60.isEmpty();
        boolean boolean98 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator6);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableItor90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean64 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj65 = strComparableSet62.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream66 = strComparableSet62.parallelStream();
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator28 = strComparableSet27.spliterator();
        boolean boolean29 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strComparableStream30);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        java.lang.Class<?> wildcardClass55 = strComparableSet26.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) ' ', 1.0f);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet6.parallelStream();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = strComparableSet6.addAll(strComparableCollection65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strComparableStream64);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        int int74 = strComparableSet65.size();
        int int75 = strComparableSet65.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet65.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean81 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet79.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean86 = strComparableSet83.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.lang.Object[] objArray87 = strComparableSet85.toArray();
        int int88 = strComparableSet85.size();
        boolean boolean89 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet91 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str92 = strComparableSet91.toString();
        boolean boolean93 = strComparableSet79.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet91);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor94 = strComparableSet91.iterator();
        boolean boolean95 = strComparableSet65.equals((java.lang.Object) strComparableItor94);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[]" + "'", str92, "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strComparableItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet26.spliterator();
        boolean boolean59 = strComparableSet26.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean44 = strComparableSet42.contains((java.lang.Object) 100L);
        boolean boolean46 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean47 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object obj48 = strComparableSet42.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[[]]");
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet22.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet22.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(strComparableStream27);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.lang.Class<?> wildcardClass8 = strComparableSet1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        int int89 = strComparableSet80.size();
        boolean boolean90 = strComparableSet0.contains((java.lang.Object) strComparableSet80);
        boolean boolean92 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>((int) (short) 100, (float) 3);
        java.lang.Class<?> wildcardClass3 = constantDescSet2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>((int) '4', (float) 10);
        java.lang.Class<?> wildcardClass3 = strComparableIterableSet2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        java.util.LinkedHashSet<java.lang.constant.Constable[][]> constableArraySet1 = new java.util.LinkedHashSet<java.lang.constant.Constable[][]>((int) '4');
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Class<?> wildcardClass6 = strComparableSet1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.util.LinkedHashSet<java.util.HashSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.HashSet<java.lang.Comparable<java.lang.String>>>((int) ' ');
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.util.LinkedHashSet<java.lang.constant.Constable[]> constableArraySet1 = new java.util.LinkedHashSet<java.lang.constant.Constable[]>((int) (short) 100);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        strComparableSet2.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.util.LinkedHashSet<java.lang.Cloneable> cloneableSet1 = new java.util.LinkedHashSet<java.lang.Cloneable>((int) (short) 10);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        java.lang.Object obj73 = strComparableSet42.clone();
        boolean boolean74 = strComparableSet42.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object obj35 = null;
        boolean boolean36 = strComparableSet31.equals(obj35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean38 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator4 = strComparableSet3.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean9 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj10 = strComparableSet7.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet7.parallelStream();
        boolean boolean12 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj81 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet78.parallelStream();
        boolean boolean83 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean84 = strComparableSet55.remove((java.lang.Object) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = strComparableSet55.iterator();
        boolean boolean87 = strComparableSet55.remove((java.lang.Object) (-1L));
        boolean boolean88 = strComparableSet3.contains((java.lang.Object) strComparableSet55);
        boolean boolean89 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.lang.Class<?> wildcardClass90 = strComparableSet0.getClass();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertNotNull(strComparableSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.lang.String str48 = strComparableSet26.toString();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator49 = strComparableSet26.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator49);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.lang.Class<?> wildcardClass47 = objArray46.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean44 = strComparableSet42.contains((java.lang.Object) 100L);
        boolean boolean46 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean47 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet21.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet21.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertNotNull(strComparableStream49);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.util.LinkedHashSet<java.util.stream.Stream<java.lang.Comparable<java.lang.String>>> strComparableStreamSet0 = new java.util.LinkedHashSet<java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        int int46 = strComparableSet41.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet41.contains((java.lang.Object) false);
        boolean boolean58 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        boolean boolean67 = strComparableSet64.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet69.equals((java.lang.Object) 1);
        boolean boolean72 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableSet74.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableSet74.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet74.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj80 = strComparableSet79.clone();
        boolean boolean81 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean82 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableSet84.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableSet84.size();
        boolean boolean87 = strComparableSet84.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean91 = strComparableSet89.equals((java.lang.Object) 1);
        boolean boolean92 = strComparableSet84.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        boolean boolean93 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet95 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean96 = strComparableSet89.contains((java.lang.Object) strComparableSet95);
        boolean boolean97 = strComparableSet59.equals((java.lang.Object) boolean96);
        boolean boolean98 = strComparableSet32.remove((java.lang.Object) boolean96);
        int int99 = strComparableSet32.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object obj27 = strComparableSet22.clone();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = strComparableSet22.iterator();
        java.lang.Class<?> wildcardClass29 = strComparableItor28.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertNotNull(strComparableItor28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean67 = strComparableSet6.isEmpty();
        java.lang.Object obj68 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet2.stream();
        java.lang.Class<?> wildcardClass61 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableStream60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray56 = strComparableSet26.toArray();
        java.lang.Object[] objArray57 = strComparableSet26.toArray();
        java.lang.Object obj58 = strComparableSet26.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[hi!]");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator25 = strComparableSet10.spliterator();
        java.lang.Object obj26 = strComparableSet10.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet27.contains((java.lang.Object) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        boolean boolean54 = strComparableSet51.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet56.equals((java.lang.Object) 1);
        boolean boolean59 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet61.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj67 = strComparableSet66.clone();
        boolean boolean68 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean69 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        boolean boolean74 = strComparableSet71.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet76.equals((java.lang.Object) 1);
        boolean boolean79 = strComparableSet71.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean80 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet76.contains((java.lang.Object) strComparableSet82);
        boolean boolean84 = strComparableSet46.equals((java.lang.Object) boolean83);
        boolean boolean85 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean89 = strComparableSet86.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        java.lang.Object[] objArray90 = strComparableSet86.toArray();
        java.lang.Object[] objArray91 = strComparableSet86.toArray();
        int int92 = strComparableSet86.size();
        java.lang.String str93 = strComparableSet86.toString();
        boolean boolean94 = strComparableSet43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        boolean boolean95 = strComparableSet10.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[]");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[]" + "'", str93, "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet65.stream();
        java.lang.Class<?> wildcardClass75 = strComparableStream74.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray52 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray53 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray52;
        strComparableCollectionArray53[0] = strComparableSet26;
        strComparableCollectionArray53[1] = strComparableSet45;
        strComparableCollectionArray53[2] = strComparableSet50;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray60 = strComparableSet11.toArray(strComparableCollectionArray53);
        boolean boolean61 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object[] objArray62 = strComparableSet11.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(collectionArray52);
        org.junit.Assert.assertNotNull(strComparableCollectionArray53);
        org.junit.Assert.assertNotNull(strComparableCollectionArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = strComparableSet2.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(strComparableItor61);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean59 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object obj90 = null;
        boolean boolean91 = strComparableSet86.equals(obj90);
        boolean boolean92 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator93 = strComparableSet66.spliterator();
        boolean boolean94 = strComparableSet58.contains((java.lang.Object) strComparableSpliterator93);
        java.lang.Class<?> wildcardClass95 = strComparableSet58.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        java.lang.String[][] strArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][] strArray75 = strComparableSet65.toArray(strArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>> strComparableListSet2 = new java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>>((int) (short) -1, 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        int int56 = strComparableSet6.size();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object[] objArray59 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[[]]");
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet1.stream();
        java.lang.Class<?> wildcardClass27 = strComparableSet1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean37 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean38 = strComparableSet6.remove((java.lang.Object) strComparableSet13);
        java.lang.Object obj39 = strComparableSet13.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 1, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        java.util.LinkedHashSet<java.lang.Object[]> objArraySet1 = new java.util.LinkedHashSet<java.lang.Object[]>((int) (byte) 0);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        int int34 = strComparableSet6.size();
        java.lang.Comparable<java.lang.String> strComparable35 = null;
        boolean boolean36 = strComparableSet6.add(strComparable35);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet0 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        int int89 = strComparableSet80.size();
        boolean boolean90 = strComparableSet0.contains((java.lang.Object) strComparableSet80);
        boolean boolean92 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Class<?> wildcardClass93 = strComparableSet80.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet2.toString();
        int int16 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean27 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.lang.Object[] objArray32 = strComparableSet28.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean35 = strComparableSet28.remove((java.lang.Object) strComparableSet34);
        boolean boolean36 = strComparableSet23.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean37 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet39.stream();
        boolean boolean44 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.String str46 = strComparableSet39.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[]]" + "'", str15, "[[]]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[]" + "'", str46, "[]");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet6.parallelStream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(strComparableItor33);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet2 = new java.util.LinkedHashSet<java.lang.Class<?>>(100, (float) 2);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.lang.Class<?> wildcardClass12 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.util.LinkedHashSet<java.util.ArrayList<java.lang.Comparable<java.lang.String>>> strComparableListSet1 = new java.util.LinkedHashSet<java.util.ArrayList<java.lang.Comparable<java.lang.String>>>((int) (short) 0);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>((int) ' ');
        boolean boolean60 = strComparableSet57.remove((java.lang.Object) ' ');
        boolean boolean61 = strComparableSet50.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean6 = strComparableSet4.contains((java.lang.Object) 100L);
        boolean boolean8 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = strComparableSet4.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet38.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean44 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj45 = strComparableSet42.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet42.parallelStream();
        boolean boolean47 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean52 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj53 = strComparableSet50.clone();
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.lang.Object[] objArray55 = strComparableSet50.toArray();
        boolean boolean56 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object obj57 = strComparableSet50.clone();
        java.lang.Object obj58 = strComparableSet50.clone();
        boolean boolean59 = strComparableSet21.remove(obj58);
        boolean boolean60 = strComparableSet2.equals(obj58);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableItor9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[[]]");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[[]]");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[[]]");
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        int int74 = strComparableSet65.size();
        int int75 = strComparableSet65.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableSet77.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableSet77.size();
        boolean boolean80 = strComparableSet77.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet81.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.lang.Object[] objArray85 = strComparableSet81.toArray();
        java.lang.Object[] objArray86 = strComparableSet81.toArray();
        int int87 = strComparableSet81.size();
        boolean boolean88 = strComparableSet77.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.lang.Class<?> wildcardClass89 = strComparableSet81.getClass();
        boolean boolean90 = strComparableSet65.remove((java.lang.Object) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean18 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj19 = strComparableSet16.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str25 = strComparableSet24.toString();
        boolean boolean27 = strComparableSet24.equals((java.lang.Object) 10L);
        boolean boolean28 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator29 = strComparableSet24.spliterator();
        boolean boolean30 = strComparableSet0.equals((java.lang.Object) strComparableSet24);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = strComparableSet24.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strComparableItor31);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, 100.0f);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream12 = strComparableSet9.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj15 = strComparableSet14.clone();
        boolean boolean16 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet9.parallelStream();
        boolean boolean19 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean23 = strComparableSet9.contains((java.lang.Object) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet29.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj35 = strComparableSet34.clone();
        boolean boolean36 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean37 = strComparableSet24.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        boolean boolean42 = strComparableSet39.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet44.equals((java.lang.Object) 1);
        boolean boolean47 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean61 = strComparableSet48.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray65 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray66 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray65;
        strComparableCollectionArray66[0] = strComparableSet39;
        strComparableCollectionArray66[1] = strComparableSet58;
        strComparableCollectionArray66[2] = strComparableSet63;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray73 = strComparableSet24.toArray(strComparableCollectionArray66);
        boolean boolean74 = strComparableSet22.contains((java.lang.Object) strComparableCollectionArray66);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray75 = strComparableSet1.toArray(strComparableCollectionArray66);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strComparableStream12);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(collectionArray65);
        org.junit.Assert.assertNotNull(strComparableCollectionArray66);
        org.junit.Assert.assertNotNull(strComparableCollectionArray73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        boolean boolean20 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = strComparableSet6.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet46.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj52 = strComparableSet51.clone();
        boolean boolean53 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean65 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        int int66 = strComparableSet41.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet41.spliterator();
        boolean boolean68 = strComparableSet6.contains((java.lang.Object) strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableItor34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strComparableStream49);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object[] objArray57 = strComparableSet56.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream3 = strComparableSet1.parallelStream();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertNotNull(strComparableStream3);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        boolean boolean43 = strComparableSet5.equals((java.lang.Object) boolean42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str45 = strComparableSet5.toString();
        java.lang.Object obj46 = strComparableSet5.clone();
        boolean boolean47 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int48 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[]" + "'", str45, "[]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.Class<?> wildcardClass56 = strComparableSet49.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.stream();
        boolean boolean17 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet21.spliterator();
        java.lang.Object obj35 = strComparableSet21.clone();
        java.lang.String[] strArray40 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray41 = strComparableSet21.toArray(strArray40);
        java.io.Serializable[] serializableArray42 = strComparableSet1.toArray((java.io.Serializable[]) strArray41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(serializableArray42);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet4.stream();
        boolean boolean9 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean11 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet18.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.constant.Constable[] constableArray76 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray77 = strComparableSet49.toArray(constableArray76);
        boolean boolean78 = strComparableSet18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean79 = strComparableSet4.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean80 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet4);
        int int81 = strComparableSet1.size();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(constableArray76);
        org.junit.Assert.assertNotNull(constableArray77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean37 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean38 = strComparableSet6.remove((java.lang.Object) strComparableSet13);
        strComparableSet13.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet30.contains((java.lang.Object) strComparableSet36);
        boolean boolean38 = strComparableSet0.equals((java.lang.Object) boolean37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet0);
        java.lang.Object[] objArray40 = strComparableSet39.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.lang.Object[] objArray7 = strComparableSet2.toArray();
        java.lang.Class<?> wildcardClass8 = objArray7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[[]]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj39 = strComparableSet36.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet36.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.Object obj51 = null;
        boolean boolean52 = strComparableSet47.equals(obj51);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean55 = strComparableSet47.contains((java.lang.Object) 100);
        boolean boolean56 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        boolean boolean81 = strComparableSet78.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean88 = strComparableSet83.isEmpty();
        boolean boolean89 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet91 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean93 = strComparableSet91.contains((java.lang.Object) 100L);
        boolean boolean94 = strComparableSet83.contains((java.lang.Object) strComparableSet91);
        boolean boolean95 = strComparableSet6.contains((java.lang.Object) strComparableSet83);
        java.lang.String str96 = strComparableSet6.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[]" + "'", str96, "[]");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.io.Serializable[]> serializableArraySet2 = new java.util.LinkedHashSet<java.io.Serializable[]>(2, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        int int89 = strComparableSet80.size();
        boolean boolean90 = strComparableSet0.contains((java.lang.Object) strComparableSet80);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet0.spliterator();
        boolean boolean93 = strComparableSet0.add((java.lang.Comparable<java.lang.String>) "[[]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3, (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        int int23 = strComparableSet13.size();
        strComparableSet13.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) -1, 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet18.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertNotNull(strComparableStream19);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet6.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableStream9);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        strComparableSet2.clear();
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.lang.String str48 = strComparableSet26.toString();
        boolean boolean50 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet57.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream66 = strComparableSet63.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj69 = strComparableSet68.clone();
        boolean boolean70 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean71 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator74 = strComparableSet73.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet73.spliterator();
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean77 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(strComparableStream66);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator74);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.reflect.Type> typeSet2 = new java.util.LinkedHashSet<java.lang.reflect.Type>(0, (float) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.parallelStream();
        boolean boolean12 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[[]]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>> strComparableListSet2 = new java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>>((int) (short) 100, (float) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet10.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator27 = strComparableSet10.spliterator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(strComparableSpliterator27);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet41.contains((java.lang.Object) false);
        boolean boolean58 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        boolean boolean67 = strComparableSet64.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet69.equals((java.lang.Object) 1);
        boolean boolean72 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableSet74.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int76 = strComparableSet74.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet74.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj80 = strComparableSet79.clone();
        boolean boolean81 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean82 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableSet84.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableSet84.size();
        boolean boolean87 = strComparableSet84.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean91 = strComparableSet89.equals((java.lang.Object) 1);
        boolean boolean92 = strComparableSet84.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        boolean boolean93 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet95 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean96 = strComparableSet89.contains((java.lang.Object) strComparableSet95);
        boolean boolean97 = strComparableSet59.equals((java.lang.Object) boolean96);
        boolean boolean98 = strComparableSet32.remove((java.lang.Object) boolean96);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor99 = strComparableSet32.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(strComparableItor99);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>(0, (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean37 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean38 = strComparableSet6.remove((java.lang.Object) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet39.toArray();
        java.lang.Object[] objArray44 = strComparableSet39.toArray();
        int int45 = strComparableSet39.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = strComparableSet39.iterator();
        boolean boolean48 = strComparableSet39.remove((java.lang.Object) '#');
        boolean boolean49 = strComparableSet13.contains((java.lang.Object) boolean48);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strComparableItor46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean57 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.lang.Class<?> wildcardClass58 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet81.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean85 = strComparableSet0.contains((java.lang.Object) boolean84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet0.stream();
        java.lang.Object obj87 = strComparableSet0.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean90 = strComparableSet89.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableSet89.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet89.parallelStream();
        java.lang.Object[] objArray93 = strComparableSet89.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor94 = strComparableSet89.iterator();
        boolean boolean95 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.lang.Object[] objArray96 = strComparableSet0.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(strComparableStream92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray96), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray96), "[]");
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet29.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj35 = strComparableSet34.clone();
        boolean boolean36 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean37 = strComparableSet24.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray41 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray42 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray41;
        strComparableCollectionArray42[0] = strComparableSet15;
        strComparableCollectionArray42[1] = strComparableSet34;
        strComparableCollectionArray42[2] = strComparableSet39;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray49 = strComparableSet0.toArray(strComparableCollectionArray42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean52 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(collectionArray41);
        org.junit.Assert.assertNotNull(strComparableCollectionArray42);
        org.junit.Assert.assertNotNull(strComparableCollectionArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>> strComparableListSet2 = new java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>>((int) (short) 1, (float) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.Object[] objArray84 = strComparableSet21.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet21.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(strComparableStream85);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Comparable<java.lang.String> strComparable26 = null;
        boolean boolean27 = strComparableSet10.add(strComparable26);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet10.parallelStream();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strComparableStream28);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        int int89 = strComparableSet80.size();
        boolean boolean90 = strComparableSet0.contains((java.lang.Object) strComparableSet80);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet0.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        java.util.LinkedHashSet<java.io.Serializable> serializableSet0 = new java.util.LinkedHashSet<java.io.Serializable>();
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator38 = strComparableSet37.spliterator();
        boolean boolean39 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator37 = strComparableSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(strComparableSpliterator37);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        boolean boolean33 = strComparableSet28.isEmpty();
        java.lang.Class<?> wildcardClass34 = strComparableSet28.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 1);
        boolean boolean2 = strComparableSet1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet6.parallelStream();
        java.lang.Object obj48 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldSet1 = new java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet62.contains((java.lang.Object) strComparableSet68);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator70 = strComparableSet68.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet77.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int85 = strComparableSet83.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet83.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj89 = strComparableSet88.clone();
        boolean boolean90 = strComparableSet83.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean91 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean93 = strComparableSet77.contains((java.lang.Object) false);
        boolean boolean94 = strComparableSet68.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean95 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor96 = strComparableSet77.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strComparableItor96);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.lang.Object[] objArray11 = strComparableSet7.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean26 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.lang.constant.Constable[] constableArray32 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray38 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray44 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray50 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray51 = new java.lang.constant.Constable[][] { constableArray32, constableArray38, constableArray44, constableArray50 };
        java.lang.constant.Constable[][] constableArray52 = strComparableSet7.toArray(constableArray51);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableSet54.size();
        boolean boolean57 = strComparableSet54.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet59.equals((java.lang.Object) 1);
        boolean boolean62 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object obj63 = null;
        boolean boolean64 = strComparableSet59.equals(obj63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        boolean boolean69 = strComparableSet66.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet71.equals((java.lang.Object) 1);
        boolean boolean74 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet76.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj82 = strComparableSet81.clone();
        boolean boolean83 = strComparableSet76.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean84 = strComparableSet71.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean85 = strComparableSet59.equals((java.lang.Object) strComparableSet76);
        strComparableSet59.clear();
        boolean boolean87 = strComparableSet7.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet90 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean91 = strComparableSet88.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet90);
        boolean boolean92 = strComparableSet7.contains((java.lang.Object) boolean91);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream93 = strComparableSet7.stream();
        java.lang.Object obj94 = strComparableSet7.clone();
        boolean boolean95 = strComparableSet1.equals(obj94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(constableArray32);
        org.junit.Assert.assertNotNull(constableArray38);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray50);
        org.junit.Assert.assertNotNull(constableArray51);
        org.junit.Assert.assertNotNull(constableArray52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableStream93);
        org.junit.Assert.assertNotNull(obj94);
        org.junit.Assert.assertEquals(obj94.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj94), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet56.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet62.toArray();
        int int65 = strComparableSet62.size();
        boolean boolean66 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str69 = strComparableSet68.toString();
        boolean boolean70 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.String str71 = strComparableSet56.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet56.iterator();
        boolean boolean73 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean74 = strComparableSet26.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean60 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj61 = strComparableSet58.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean65 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.Object[] objArray70 = strComparableSet66.toArray();
        java.lang.Object[] objArray71 = strComparableSet66.toArray();
        int int72 = strComparableSet66.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = strComparableSet66.iterator();
        boolean boolean75 = strComparableSet66.remove((java.lang.Object) '#');
        boolean boolean76 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream81 = strComparableSet78.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj84 = strComparableSet83.clone();
        boolean boolean85 = strComparableSet78.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet78.parallelStream();
        boolean boolean87 = strComparableSet58.equals((java.lang.Object) strComparableStream86);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet90 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 1);
        boolean boolean91 = strComparableSet58.contains((java.lang.Object) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(strComparableItor73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(strComparableStream81);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.lang.Class<?> wildcardClass8 = strComparableSet1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.String str52 = strComparableSet20.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[]" + "'", str52, "[]");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]> comparableSetArraySet2 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]>((int) ' ', (float) 10L);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.String str60 = strComparableSet2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[]" + "'", str60, "[]");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Class<?> wildcardClass14 = strComparableSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.lang.String str32 = strComparableSet28.toString();
        boolean boolean33 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.lang.Class<?> wildcardClass46 = constableArray44.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        java.lang.String str32 = strComparableSet26.toString();
        strComparableSet26.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.lang.String str35 = strComparableSet32.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet35.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet41.toArray();
        int int44 = strComparableSet41.size();
        boolean boolean45 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        boolean boolean71 = strComparableSet68.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet73.equals((java.lang.Object) 1);
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean77 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean80 = strComparableSet73.contains((java.lang.Object) strComparableSet79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray93 = new java.lang.reflect.GenericDeclaration[] { wildcardClass82, wildcardClass84, wildcardClass86, wildcardClass88, wildcardClass90, wildcardClass92 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray94 = strComparableSet73.toArray(genericDeclarationArray93);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray95 = strComparableSet41.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray94);
        int int96 = strComparableSet41.size();
        java.lang.Object obj97 = strComparableSet41.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(genericDeclarationArray93);
        org.junit.Assert.assertNotNull(genericDeclarationArray94);
        org.junit.Assert.assertNotNull(annotatedElementArray95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "[]");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        int int34 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.lang.Object[] objArray71 = strComparableSet67.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableSet77.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableSet77.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableSet77.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj83 = strComparableSet82.clone();
        boolean boolean84 = strComparableSet77.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean85 = strComparableSet72.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean86 = strComparableSet67.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean87 = strComparableSet62.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.constant.Constable[] constableArray89 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray90 = strComparableSet62.toArray(constableArray89);
        java.lang.Class<?> wildcardClass91 = constableArray90.getClass();
        boolean boolean92 = strComparableSet6.equals((java.lang.Object) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(strComparableStream80);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(constableArray89);
        org.junit.Assert.assertNotNull(constableArray90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean46 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean47 = strComparableSet5.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet6.stream();
        boolean boolean32 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        boolean boolean37 = strComparableSet34.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        boolean boolean42 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet55.equals((java.lang.Object) 1);
        boolean boolean58 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet44.iterator();
        boolean boolean60 = strComparableSet6.equals((java.lang.Object) strComparableItor59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet2.toString();
        int int16 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean27 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.lang.Object[] objArray32 = strComparableSet28.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean35 = strComparableSet28.remove((java.lang.Object) strComparableSet34);
        boolean boolean36 = strComparableSet23.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean37 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.lang.Object[] objArray38 = strComparableSet28.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[]]" + "'", str15, "[[]]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        boolean boolean81 = strComparableSet78.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean89 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean91 = strComparableSet83.contains((java.lang.Object) (byte) 10);
        boolean boolean92 = strComparableSet49.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet26.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj69 = null;
        boolean boolean70 = strComparableSet65.equals(obj69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableSet82.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet82.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj88 = strComparableSet87.clone();
        boolean boolean89 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean90 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean91 = strComparableSet65.equals((java.lang.Object) strComparableSet82);
        strComparableSet65.clear();
        boolean boolean93 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        strComparableSet65.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strComparableStream85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>(0, (float) (byte) 100);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.lang.Object[] objArray7 = strComparableSet2.toArray();
        boolean boolean9 = strComparableSet2.remove((java.lang.Object) false);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean40 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean42 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean47 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet45.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.lang.Object[] objArray53 = strComparableSet51.toArray();
        int int54 = strComparableSet51.size();
        boolean boolean55 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean56 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.lang.Object obj57 = strComparableSet36.clone();
        boolean boolean58 = strComparableSet2.remove(obj57);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj9 = null;
        boolean boolean10 = strComparableSet1.contains(obj9);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        boolean boolean14 = strComparableSet1.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.lang.Object[] objArray10 = strComparableSet5.toArray();
        int int11 = strComparableSet5.size();
        boolean boolean12 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        int int19 = strComparableSet13.size();
        boolean boolean20 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean24 = strComparableSet22.contains((java.lang.Object) 100L);
        boolean boolean26 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = strComparableSet22.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        boolean boolean32 = strComparableSet29.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet34.equals((java.lang.Object) 1);
        boolean boolean37 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet39.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj45 = strComparableSet44.clone();
        boolean boolean46 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean47 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        boolean boolean79 = strComparableSet76.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet81.equals((java.lang.Object) 1);
        boolean boolean84 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.lang.Object obj85 = null;
        boolean boolean86 = strComparableSet81.equals(obj85);
        boolean boolean87 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator88 = strComparableSet61.spliterator();
        int int89 = strComparableSet61.size();
        boolean boolean90 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean91 = strComparableSet13.equals((java.lang.Object) boolean90);
        boolean boolean93 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strComparableItor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet7.parallelStream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = strComparableSet7.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertNotNull(strComparableItor10);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.lang.String str34 = strComparableSet1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[[]]" + "'", str34, "[[]]");
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.Object obj17 = strComparableSet2.clone();
        boolean boolean18 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet6.stream();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection35 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean36 = strComparableSet6.containsAll(strComparableCollection35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableStream34);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet2.toString();
        int int16 = strComparableSet2.size();
        int int17 = strComparableSet2.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[]]" + "'", str15, "[[]]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        boolean boolean12 = strComparableSet9.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet14.equals((java.lang.Object) 1);
        boolean boolean17 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet19.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj25 = strComparableSet24.clone();
        boolean boolean26 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean27 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet35.contains((java.lang.Object) strComparableSet51);
        boolean boolean54 = strComparableSet34.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean59 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj60 = strComparableSet57.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.Object[] objArray70 = strComparableSet66.toArray();
        java.lang.Object[] objArray71 = strComparableSet66.toArray();
        int int72 = strComparableSet66.size();
        boolean boolean73 = strComparableSet62.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean74 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean75 = strComparableSet34.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean76 = strComparableSet1.contains((java.lang.Object) strComparableSet34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.Object[] objArray84 = strComparableSet21.toArray();
        java.lang.Object[] objArray85 = strComparableSet21.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator4 = strComparableSet3.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean9 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj10 = strComparableSet7.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet7.parallelStream();
        boolean boolean12 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj81 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet78.parallelStream();
        boolean boolean83 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean84 = strComparableSet55.remove((java.lang.Object) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = strComparableSet55.iterator();
        boolean boolean87 = strComparableSet55.remove((java.lang.Object) (-1L));
        boolean boolean88 = strComparableSet3.contains((java.lang.Object) strComparableSet55);
        boolean boolean89 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream90 = strComparableSet55.stream();
        java.lang.Object obj91 = strComparableSet55.clone();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertNotNull(strComparableSpliterator4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableItor85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strComparableStream90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[]");
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        boolean boolean57 = strComparableSet19.equals((java.lang.Object) boolean56);
        boolean boolean58 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj76 = strComparableSet75.clone();
        boolean boolean77 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableSet79.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableSet82.size();
        boolean boolean85 = strComparableSet82.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean89 = strComparableSet87.equals((java.lang.Object) 1);
        boolean boolean90 = strComparableSet82.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean91 = strComparableSet79.remove((java.lang.Object) strComparableSet87);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator92 = strComparableSet79.spliterator();
        boolean boolean93 = strComparableSet16.contains((java.lang.Object) strComparableSpliterator92);
        java.lang.Class<?> wildcardClass94 = strComparableSpliterator92.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strComparableStream80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.stream();
        boolean boolean17 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet12.stream();
        java.lang.Object[] objArray20 = strComparableSet12.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[, hi!]");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        int int74 = strComparableSet65.size();
        boolean boolean76 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet65.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableStream77);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream78 = strComparableSet77.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        boolean boolean83 = strComparableSet80.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet85.equals((java.lang.Object) 1);
        boolean boolean88 = strComparableSet80.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet77.remove((java.lang.Object) strComparableSet85);
        boolean boolean90 = strComparableSet85.isEmpty();
        boolean boolean91 = strComparableSet52.contains((java.lang.Object) strComparableSet85);
        boolean boolean92 = strComparableSet85.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableStream78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.String str13 = strComparableSet8.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.String str17 = strComparableSet2.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor18 = strComparableSet2.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet39.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet39.remove((java.lang.Object) strComparableSet47);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator52 = strComparableSet39.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean57 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet55.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray63 = strComparableSet61.toArray();
        int int64 = strComparableSet61.size();
        boolean boolean65 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str68 = strComparableSet67.toString();
        boolean boolean69 = strComparableSet55.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet55.stream();
        boolean boolean72 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[]" + "'", str17, "[]");
        org.junit.Assert.assertNotNull(strComparableItor18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[]" + "'", str68, "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Cloneable> cloneableSet1 = new java.util.LinkedHashSet<java.lang.Cloneable>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet6.spliterator();
        java.lang.Object[] objArray35 = strComparableSet6.toArray();
        java.lang.Class<?> wildcardClass36 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        java.util.LinkedHashSet<java.util.RandomAccess> randomAccessSet1 = new java.util.LinkedHashSet<java.util.RandomAccess>(3);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.util.LinkedHashSet<java.lang.constant.Constable> constableSet1 = new java.util.LinkedHashSet<java.lang.constant.Constable>((int) (byte) 1);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream5 = strComparableSet1.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strComparableStream5);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean71 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj72 = strComparableSet69.clone();
        java.lang.Object[] objArray73 = strComparableSet69.toArray();
        boolean boolean74 = strComparableSet69.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean76 = strComparableSet75.isEmpty();
        boolean boolean77 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet65.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[[]]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strComparableStream79);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.ArrayList<java.lang.Comparable<java.lang.String>>> strComparableListSet2 = new java.util.LinkedHashSet<java.util.ArrayList<java.lang.Comparable<java.lang.String>>>(0, (float) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet26.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean59 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        int int60 = strComparableSet58.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        boolean boolean11 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator13 = strComparableSet12.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean64 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet60.contains((java.lang.Object) strComparableSet66);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet66.spliterator();
        boolean boolean69 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.String str70 = strComparableSet20.toString();
        boolean boolean71 = strComparableSet12.contains((java.lang.Object) strComparableSet20);
        boolean boolean72 = strComparableSet1.remove((java.lang.Object) strComparableSet12);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        java.lang.Object[] objArray77 = strComparableSet73.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet79.spliterator();
        boolean boolean81 = strComparableSet73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet73.stream();
        boolean boolean83 = strComparableSet12.equals((java.lang.Object) strComparableSet73);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        java.lang.Object[] objArray32 = strComparableSet26.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet6.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet6.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        strComparableSet69.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>> strComparableSetSet0 = new java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>>((int) (short) 100);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.util.LinkedHashSet<java.lang.reflect.Type[]> typeArraySet2 = new java.util.LinkedHashSet<java.lang.reflect.Type[]>(2, (float) 1);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet32.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj44 = strComparableSet43.clone();
        boolean boolean45 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean46 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator49 = strComparableSet48.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator50 = strComparableSet48.spliterator();
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet48.stream();
        boolean boolean53 = strComparableSet17.equals((java.lang.Object) strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator49);
        org.junit.Assert.assertNotNull(strComparableSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean8 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj9 = strComparableSet6.clone();
        java.lang.Object[] objArray10 = strComparableSet6.toArray();
        boolean boolean11 = strComparableSet6.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean13 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator21 = strComparableSet20.spliterator();
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet14.spliterator();
        boolean boolean24 = strComparableSet12.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        boolean boolean25 = strComparableSet1.contains((java.lang.Object) boolean24);
        int int26 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[[]]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet22.parallelStream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor27 = strComparableSet22.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(strComparableItor27);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.HashSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet2 = new java.util.LinkedHashSet<java.util.HashSet<java.lang.Comparable<java.lang.String>>>((int) '4', (float) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.stream();
        boolean boolean17 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean18 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean20 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = strComparableSet12.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableItor21);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet21.parallelStream();
        java.lang.String str27 = strComparableSet21.toString();
        boolean boolean29 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "[[]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet2 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]>(0, (float) (byte) 1);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        boolean boolean19 = strComparableSet18.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int20 = strComparableSet5.size();
        java.lang.Class<?> wildcardClass21 = strComparableSet5.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.lang.Object[] objArray39 = strComparableSet37.toArray();
        int int40 = strComparableSet37.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean65 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean66 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean67 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator70 = strComparableSet69.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean75 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj76 = strComparableSet73.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet73.parallelStream();
        boolean boolean78 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean83 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj84 = strComparableSet81.clone();
        java.lang.Object[] objArray85 = strComparableSet81.toArray();
        java.lang.Object[] objArray86 = strComparableSet81.toArray();
        boolean boolean87 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.lang.Object obj88 = strComparableSet81.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet91 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean92 = strComparableSet91.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean93 = strComparableSet91.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet91.clear();
        boolean boolean95 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet91);
        int int96 = strComparableSet81.size();
        boolean boolean97 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[[]]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[[]]");
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean63 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj64 = strComparableSet61.clone();
        java.lang.Object[] objArray65 = strComparableSet61.toArray();
        boolean boolean66 = strComparableSet6.equals((java.lang.Object) strComparableSet61);
        java.lang.Object[] objArray67 = strComparableSet61.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[[]]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[[]]");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet22.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet22.remove((java.lang.Object) strComparableSet30);
        boolean boolean35 = strComparableSet30.isEmpty();
        boolean boolean36 = strComparableSet0.remove((java.lang.Object) strComparableSet30);
        boolean boolean37 = strComparableSet30.isEmpty();
        java.lang.Object obj38 = strComparableSet30.clone();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet0 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]>();
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object obj52 = null;
        boolean boolean53 = strComparableSet26.remove(obj52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet56.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet62.toArray();
        int int65 = strComparableSet62.size();
        boolean boolean66 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str69 = strComparableSet68.toString();
        boolean boolean70 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = strComparableSet68.iterator();
        boolean boolean72 = strComparableSet26.remove((java.lang.Object) strComparableItor71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strComparableItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.lang.Object obj67 = strComparableSet37.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.util.LinkedHashSet<java.util.Iterator<java.lang.Comparable<java.lang.String>>> strComparableItorSet2 = new java.util.LinkedHashSet<java.util.Iterator<java.lang.Comparable<java.lang.String>>>(0, (float) 1);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.lang.Object[] objArray37 = strComparableSet35.toArray();
        int int38 = strComparableSet35.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.Object[] objArray74 = strComparableSet70.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet80.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj86 = strComparableSet85.clone();
        boolean boolean87 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean88 = strComparableSet75.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean90 = strComparableSet65.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        strComparableSet75.clear();
        boolean boolean92 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean93 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream94 = strComparableSet35.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strComparableStream94);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>> strComparableListSet2 = new java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>>((int) (short) 1, (float) 100);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean86 = strComparableSet68.contains((java.lang.Object) strComparableSet84);
        boolean boolean87 = strComparableSet67.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean88 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator89 = strComparableSet6.spliterator();
        boolean boolean90 = strComparableSet6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableStream6);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean7 = strComparableSet0.remove((java.lang.Object) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        boolean boolean12 = strComparableSet9.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet14.equals((java.lang.Object) 1);
        boolean boolean17 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet19.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj25 = strComparableSet24.clone();
        boolean boolean26 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean27 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean29 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.lang.Comparable<java.lang.String> strComparable30 = null;
        boolean boolean31 = strComparableSet6.add(strComparable30);
        java.lang.String str32 = strComparableSet6.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[null]" + "'", str32, "[null]");
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        boolean boolean9 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.lang.Object[] objArray14 = strComparableSet10.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator17 = strComparableSet16.spliterator();
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator19 = strComparableSet10.spliterator();
        boolean boolean20 = strComparableSet8.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Class<?> wildcardClass21 = strComparableSet10.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean18 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj19 = strComparableSet16.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str25 = strComparableSet24.toString();
        boolean boolean27 = strComparableSet24.equals((java.lang.Object) 10L);
        boolean boolean28 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator29 = strComparableSet24.spliterator();
        boolean boolean30 = strComparableSet0.equals((java.lang.Object) strComparableSet24);
        int int31 = strComparableSet24.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet6.spliterator();
        java.lang.Class<?> wildcardClass10 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean6 = strComparableSet1.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet10.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet16.toArray();
        int int19 = strComparableSet16.size();
        boolean boolean20 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str23 = strComparableSet22.toString();
        boolean boolean24 = strComparableSet10.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[]" + "'", str23, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int15 = strComparableSet5.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor16 = strComparableSet5.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableItor16);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        java.util.LinkedHashSet<java.lang.constant.Constable[]> constableArraySet0 = new java.util.LinkedHashSet<java.lang.constant.Constable[]>();
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean26 = strComparableSet10.isEmpty();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet56.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet62.toArray();
        int int65 = strComparableSet62.size();
        boolean boolean66 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str69 = strComparableSet68.toString();
        boolean boolean70 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.String str71 = strComparableSet56.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet56.iterator();
        boolean boolean73 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet26.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableStream74);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        int int13 = strComparableSet8.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        strComparableSet6.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj39 = strComparableSet36.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.Object[] objArray49 = strComparableSet45.toArray();
        java.lang.Object[] objArray50 = strComparableSet45.toArray();
        int int51 = strComparableSet45.size();
        boolean boolean52 = strComparableSet41.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean53 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str56 = strComparableSet55.toString();
        boolean boolean58 = strComparableSet55.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray63 = strComparableSet59.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean78 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean79 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator82 = strComparableSet81.spliterator();
        boolean boolean83 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean84 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean85 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        strComparableSet6.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet1 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>((int) (short) 1);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet0.parallelStream();
        java.lang.String str7 = strComparableSet0.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) '4');
        boolean boolean11 = strComparableSet0.contains((java.lang.Object) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.Object[] objArray16 = strComparableSet14.toArray();
        java.lang.Object[] objArray17 = strComparableSet14.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        boolean boolean22 = strComparableSet19.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean26 = strComparableSet24.equals((java.lang.Object) 1);
        boolean boolean27 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet29.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj35 = strComparableSet34.clone();
        boolean boolean36 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean37 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        boolean boolean42 = strComparableSet39.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet44.equals((java.lang.Object) 1);
        boolean boolean47 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean48 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.lang.Object[] objArray53 = strComparableSet49.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet59.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj65 = strComparableSet64.clone();
        boolean boolean66 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean67 = strComparableSet54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean68 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean69 = strComparableSet44.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        strComparableSet54.clear();
        boolean boolean71 = strComparableSet14.remove((java.lang.Object) strComparableSet54);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator74 = strComparableSet73.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableSet77.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean79 = strComparableSet77.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj80 = strComparableSet77.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream81 = strComparableSet77.parallelStream();
        boolean boolean82 = strComparableSet73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean83 = strComparableSet54.remove((java.lang.Object) strComparableSet77);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = strComparableSet77.iterator();
        java.lang.Object[] objArray85 = strComparableSet77.toArray();
        int int86 = strComparableSet77.size();
        boolean boolean87 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strComparableItor84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[[]]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        boolean boolean93 = strComparableSet59.equals((java.lang.Object) true);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream94 = strComparableSet59.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strComparableStream94);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.util.LinkedHashSet<java.util.Spliterator<java.lang.Comparable<java.lang.String>>> strComparableSpliteratorSet0 = new java.util.LinkedHashSet<java.util.Spliterator<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet2.stream();
        boolean boolean19 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        boolean boolean33 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet54.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet54.remove((java.lang.Object) strComparableSet62);
        boolean boolean67 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet70.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet79.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj85 = strComparableSet84.clone();
        boolean boolean86 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean87 = strComparableSet74.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream88 = strComparableSet74.parallelStream();
        boolean boolean89 = strComparableSet70.contains((java.lang.Object) strComparableStream88);
        boolean boolean90 = strComparableSet26.contains((java.lang.Object) strComparableSet70);
        java.lang.Object obj91 = strComparableSet70.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableStream88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[]");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        int int89 = strComparableSet80.size();
        boolean boolean90 = strComparableSet0.contains((java.lang.Object) strComparableSet80);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet93 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        java.util.LinkedHashSet<java.lang.String> strSet95 = new java.util.LinkedHashSet<java.lang.String>((int) ' ');
        boolean boolean96 = strComparableSet93.remove((java.lang.Object) ' ');
        boolean boolean97 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet93);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator32 = strComparableSet6.spliterator();
        java.lang.Class<?> wildcardClass33 = strComparableSpliterator32.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj9 = strComparableSet1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[]");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        java.util.LinkedHashSet<java.util.ArrayList<java.lang.Comparable<java.lang.String>>> strComparableListSet0 = new java.util.LinkedHashSet<java.util.ArrayList<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.util.LinkedHashSet<java.io.Serializable> serializableSet2 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        java.lang.Class<?> wildcardClass3 = serializableSet2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int7 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean11 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj12 = strComparableSet9.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet14.parallelStream();
        boolean boolean17 = strComparableSet5.equals((java.lang.Object) strComparableStream16);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = strComparableSet0.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet0.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strComparableItor19);
        org.junit.Assert.assertNotNull(strComparableItor20);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) -1, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean28 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet26.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.lang.Object[] objArray34 = strComparableSet32.toArray();
        int int35 = strComparableSet32.size();
        boolean boolean36 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str39 = strComparableSet38.toString();
        boolean boolean40 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.String str41 = strComparableSet26.toString();
        boolean boolean42 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet26.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet55.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj61 = strComparableSet60.clone();
        boolean boolean62 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean63 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean74 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet70.contains((java.lang.Object) strComparableSet76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray90 = new java.lang.reflect.GenericDeclaration[] { wildcardClass79, wildcardClass81, wildcardClass83, wildcardClass85, wildcardClass87, wildcardClass89 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray91 = strComparableSet70.toArray(genericDeclarationArray90);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet70.parallelStream();
        java.lang.String str93 = strComparableSet70.toString();
        boolean boolean94 = strComparableSet26.equals((java.lang.Object) str93);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[]" + "'", str39, "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[]" + "'", str41, "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(genericDeclarationArray90);
        org.junit.Assert.assertNotNull(genericDeclarationArray91);
        org.junit.Assert.assertNotNull(strComparableStream92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[]" + "'", str93, "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet58.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.stream();
        boolean boolean74 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean75 = strComparableSet58.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean76 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.lang.String str77 = strComparableSet49.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!, []]" + "'", str77, "[hi!, []]");
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        boolean boolean33 = strComparableSet28.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet40.stream();
        boolean boolean45 = strComparableSet28.contains((java.lang.Object) strComparableSet40);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet21.spliterator();
        boolean boolean85 = strComparableSet21.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet57.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj63 = strComparableSet62.clone();
        boolean boolean64 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean65 = strComparableSet52.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray69 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray70 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray69;
        strComparableCollectionArray70[0] = strComparableSet43;
        strComparableCollectionArray70[1] = strComparableSet62;
        strComparableCollectionArray70[2] = strComparableSet67;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray77 = strComparableSet28.toArray(strComparableCollectionArray70);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean80 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean81 = strComparableSet27.contains((java.lang.Object) boolean80);
        java.lang.Object obj82 = strComparableSet27.clone();
        boolean boolean83 = strComparableSet21.contains((java.lang.Object) strComparableSet27);
        boolean boolean84 = strComparableSet21.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(strComparableStream60);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(collectionArray69);
        org.junit.Assert.assertNotNull(strComparableCollectionArray70);
        org.junit.Assert.assertNotNull(strComparableCollectionArray77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet1 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>>((int) '4');
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        java.lang.Object[] objArray57 = strComparableSet6.toArray();
        java.lang.Class<?> wildcardClass58 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet53.parallelStream();
        boolean boolean63 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean67 = strComparableSet53.contains((java.lang.Object) strComparableSet66);
        boolean boolean68 = strComparableSet36.contains((java.lang.Object) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean73 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj74 = strComparableSet71.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet71.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str80 = strComparableSet79.toString();
        boolean boolean82 = strComparableSet79.equals((java.lang.Object) 10L);
        boolean boolean83 = strComparableSet71.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet79.spliterator();
        boolean boolean85 = strComparableSet36.contains((java.lang.Object) strComparableSpliterator84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet36.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[]" + "'", str80, "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet6.parallelStream();
        boolean boolean65 = strComparableSet6.isEmpty();
        java.lang.Class<?> wildcardClass66 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor> typeDescriptorSet2 = new java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor>((int) (short) 10, (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet62.contains((java.lang.Object) strComparableSet68);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator70 = strComparableSet68.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet77.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int85 = strComparableSet83.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet83.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj89 = strComparableSet88.clone();
        boolean boolean90 = strComparableSet83.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean91 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean93 = strComparableSet77.contains((java.lang.Object) false);
        boolean boolean94 = strComparableSet68.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean95 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean96 = strComparableSet77.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((-1), (float) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray58 = strComparableSet42.toArray();
        boolean boolean60 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        strComparableSet63.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableItor21);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet53.parallelStream();
        boolean boolean63 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean67 = strComparableSet53.contains((java.lang.Object) strComparableSet66);
        boolean boolean68 = strComparableSet36.contains((java.lang.Object) strComparableSet66);
        java.lang.Object obj69 = null;
        boolean boolean70 = strComparableSet36.remove(obj69);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean71 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj72 = strComparableSet69.clone();
        java.lang.Object[] objArray73 = strComparableSet69.toArray();
        boolean boolean74 = strComparableSet69.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean76 = strComparableSet75.isEmpty();
        boolean boolean77 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.ArrayList[] arrayListArray80 = new java.util.ArrayList[0];
        @SuppressWarnings("unchecked")
        java.util.ArrayList<java.lang.Comparable<java.lang.String>>[] strComparableListArray81 = (java.util.ArrayList<java.lang.Comparable<java.lang.String>>[]) arrayListArray80;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Comparable<java.lang.String>>[] strComparableListArray82 = strComparableSet6.toArray((java.util.ArrayList<java.lang.Comparable<java.lang.String>>[]) arrayListArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[[]]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(arrayListArray80);
        org.junit.Assert.assertNotNull(strComparableListArray81);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet7.toArray();
        java.lang.Object[] objArray10 = strComparableSet7.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        strComparableSet47.clear();
        boolean boolean64 = strComparableSet7.remove((java.lang.Object) strComparableSet47);
        java.lang.Object obj65 = strComparableSet7.clone();
        boolean boolean67 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableSet1.contains((java.lang.Object) boolean67);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.util.LinkedHashSet<java.util.stream.Stream<java.lang.Comparable<java.lang.String>>> strComparableStreamSet2 = new java.util.LinkedHashSet<java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>((int) (byte) 0, (float) (short) 1);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet30.contains((java.lang.Object) strComparableSet36);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = strComparableSet30.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean41 = strComparableSet30.remove((java.lang.Object) strComparableSet40);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.lang.Object[] objArray47 = strComparableSet42.toArray();
        int int48 = strComparableSet42.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = strComparableSet42.iterator();
        boolean boolean51 = strComparableSet42.remove((java.lang.Object) '#');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet42.parallelStream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator53 = strComparableSet42.spliterator();
        boolean boolean54 = strComparableSet30.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean55 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strComparableItor38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strComparableItor49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(strComparableSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean11 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj12 = strComparableSet9.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        boolean boolean19 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray56 = strComparableSet26.toArray();
        boolean boolean58 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator35 = strComparableSet34.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean40 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj41 = strComparableSet38.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet38.parallelStream();
        boolean boolean43 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean48 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj49 = strComparableSet46.clone();
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.lang.Object[] objArray51 = strComparableSet46.toArray();
        boolean boolean52 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) strComparableSet34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[[]]");
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[[]]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.String str26 = strComparableSet22.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet22.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertNotNull(strComparableStream27);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet7.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        boolean boolean54 = strComparableSet51.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet56.equals((java.lang.Object) 1);
        boolean boolean59 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet56.contains((java.lang.Object) strComparableSet62);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator64 = strComparableSet62.spliterator();
        boolean boolean65 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.String str66 = strComparableSet16.toString();
        boolean boolean67 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[]" + "'", str66, "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.lang.Class<?> wildcardClass3 = strComparableSpliterator2.getClass();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) ' ');
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        strComparableSet5.clear();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.String str17 = strComparableSet2.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        boolean boolean22 = strComparableSet19.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean26 = strComparableSet24.equals((java.lang.Object) 1);
        boolean boolean27 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet24.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        boolean boolean53 = strComparableSet50.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet55.equals((java.lang.Object) 1);
        boolean boolean58 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean59 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj76 = strComparableSet75.clone();
        boolean boolean77 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean79 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean80 = strComparableSet55.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.constant.Constable[] constableArray82 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray83 = strComparableSet55.toArray(constableArray82);
        boolean boolean84 = strComparableSet24.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet55.parallelStream();
        boolean boolean86 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[]" + "'", str17, "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(constableArray82);
        org.junit.Assert.assertNotNull(constableArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableStream85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        java.lang.Object obj13 = strComparableSet1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[hi!]");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.lang.Object[] objArray72 = strComparableSet65.toArray();
        java.util.HashSet[] hashSetArray74 = new java.util.HashSet[0];
        @SuppressWarnings("unchecked")
        java.util.HashSet<java.lang.Comparable<java.lang.String>>[] strComparableSetArray75 = (java.util.HashSet<java.lang.Comparable<java.lang.String>>[]) hashSetArray74;
        // The following exception was thrown during execution in test generation
        try {
            java.util.HashSet<java.lang.Comparable<java.lang.String>>[] strComparableSetArray76 = strComparableSet65.toArray(strComparableSetArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: java.lang.String");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[[]]");
        org.junit.Assert.assertNotNull(hashSetArray74);
        org.junit.Assert.assertNotNull(strComparableSetArray75);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.String str56 = strComparableSet49.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet49.iterator();
        boolean boolean59 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj60 = strComparableSet49.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, []]" + "'", str56, "[hi!, []]");
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[hi!, []]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[hi!, []]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[hi!, []]");
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet23.stream();
        int int28 = strComparableSet23.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str31 = strComparableSet30.toString();
        boolean boolean33 = strComparableSet30.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray38 = strComparableSet34.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean54 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean55 = strComparableSet23.remove((java.lang.Object) strComparableSet30);
        java.lang.Object[] objArray56 = strComparableSet30.toArray();
        boolean boolean57 = strComparableSet2.remove((java.lang.Object) objArray56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean62 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj63 = strComparableSet60.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet65.parallelStream();
        boolean boolean68 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strComparableStream27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[]" + "'", str31, "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        int int57 = strComparableSet6.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        boolean boolean13 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet20.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor25 = strComparableSet20.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator26 = strComparableSet20.spliterator();
        strComparableSet20.clear();
        boolean boolean28 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(strComparableItor25);
        org.junit.Assert.assertNotNull(strComparableSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet6.stream();
        boolean boolean32 = strComparableSet6.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet6.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strComparableStream33);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet2.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object[] objArray13 = strComparableSet11.toArray();
        java.lang.Object[] objArray14 = strComparableSet11.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean65 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean66 = strComparableSet41.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        strComparableSet51.clear();
        boolean boolean68 = strComparableSet11.remove((java.lang.Object) strComparableSet51);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator71 = strComparableSet70.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean75 = strComparableSet74.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean76 = strComparableSet74.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj77 = strComparableSet74.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream78 = strComparableSet74.parallelStream();
        boolean boolean79 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean80 = strComparableSet51.remove((java.lang.Object) strComparableSet74);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet74.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean83 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean85 = strComparableSet2.equals((java.lang.Object) 1.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((-1), (float) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray52 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray53 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray52;
        strComparableCollectionArray53[0] = strComparableSet26;
        strComparableCollectionArray53[1] = strComparableSet45;
        strComparableCollectionArray53[2] = strComparableSet50;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray60 = strComparableSet11.toArray(strComparableCollectionArray53);
        boolean boolean61 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = strComparableSet1.iterator();
        java.lang.Class<?> wildcardClass63 = strComparableItor62.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(collectionArray52);
        org.junit.Assert.assertNotNull(strComparableCollectionArray53);
        org.junit.Assert.assertNotNull(strComparableCollectionArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strComparableItor62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator8 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean13 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet11.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        int int20 = strComparableSet17.size();
        boolean boolean21 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str24 = strComparableSet23.toString();
        boolean boolean25 = strComparableSet11.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean28 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[[]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(strComparableSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[]" + "'", str24, "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object obj64 = null;
        boolean boolean65 = strComparableSet60.equals(obj64);
        boolean boolean66 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet40.spliterator();
        int int68 = strComparableSet40.size();
        boolean boolean69 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean73 = strComparableSet71.contains((java.lang.Object) 100L);
        boolean boolean75 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet71.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet71.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator78 = strComparableSet71.spliterator();
        strComparableSet71.clear();
        java.lang.Object[] objArray80 = strComparableSet71.toArray();
        boolean boolean81 = strComparableSet40.contains((java.lang.Object) objArray80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertNotNull(strComparableSpliterator78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.String str14 = strComparableSet6.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet17.clear();
        java.lang.Class<?> wildcardClass21 = strComparableSet17.getClass();
        boolean boolean22 = strComparableSet6.remove((java.lang.Object) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.lang.Object[] objArray64 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[[]]");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 1);
        boolean boolean9 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str12 = strComparableSet11.toString();
        boolean boolean14 = strComparableSet11.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet15.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean35 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet11.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.lang.Object[] objArray42 = strComparableSet37.toArray();
        int int43 = strComparableSet37.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator44 = strComparableSet37.spliterator();
        boolean boolean45 = strComparableSet11.contains((java.lang.Object) strComparableSpliterator44);
        boolean boolean46 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[]" + "'", str12, "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Class<?> wildcardClass20 = strComparableSet10.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet37.parallelStream();
        java.lang.Class<?> wildcardClass68 = strComparableSet37.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) '4');
        boolean boolean3 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean14 = strComparableSet6.contains((java.lang.Object) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet17.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.lang.Object[] objArray25 = strComparableSet23.toArray();
        int int26 = strComparableSet23.size();
        boolean boolean27 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean28 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        boolean boolean37 = strComparableSet34.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        boolean boolean42 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean43 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator44 = strComparableSet31.spliterator();
        java.lang.Object obj45 = strComparableSet31.clone();
        java.lang.String[] strArray50 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray51 = strComparableSet31.toArray(strArray50);
        java.lang.constant.Constable[] constableArray52 = strComparableSet6.toArray((java.lang.constant.Constable[]) strArray50);
        strComparableSet6.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator44);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(constableArray52);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet26.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj69 = null;
        boolean boolean70 = strComparableSet65.equals(obj69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableSet82.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet82.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj88 = strComparableSet87.clone();
        boolean boolean89 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean90 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean91 = strComparableSet65.equals((java.lang.Object) strComparableSet82);
        strComparableSet65.clear();
        boolean boolean93 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean94 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet96 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj97 = strComparableSet96.clone();
        int int98 = strComparableSet96.size();
        boolean boolean99 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet96);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strComparableStream85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "[]");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.lang.Object[] objArray10 = strComparableSet5.toArray();
        int int11 = strComparableSet5.size();
        boolean boolean12 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        int int19 = strComparableSet13.size();
        boolean boolean20 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj21 = strComparableSet13.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean5 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet4);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet7.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj13 = strComparableSet12.clone();
        boolean boolean14 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean15 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray43 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray44 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray43;
        strComparableCollectionArray44[0] = strComparableSet17;
        strComparableCollectionArray44[1] = strComparableSet36;
        strComparableCollectionArray44[2] = strComparableSet41;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray51 = strComparableSet2.toArray(strComparableCollectionArray44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean54 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean55 = strComparableSet1.contains((java.lang.Object) boolean54);
        java.lang.Object obj56 = strComparableSet1.clone();
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(collectionArray43);
        org.junit.Assert.assertNotNull(strComparableCollectionArray44);
        org.junit.Assert.assertNotNull(strComparableCollectionArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>> strComparableBaseStreamSet1 = new java.util.LinkedHashSet<java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>>((int) 'a');
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream78 = strComparableSet77.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        boolean boolean83 = strComparableSet80.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet85.equals((java.lang.Object) 1);
        boolean boolean88 = strComparableSet80.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet77.remove((java.lang.Object) strComparableSet85);
        boolean boolean90 = strComparableSet85.isEmpty();
        boolean boolean91 = strComparableSet52.contains((java.lang.Object) strComparableSet85);
        java.lang.Object[] objArray92 = strComparableSet85.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableStream78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator36 = strComparableSet35.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean41 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj42 = strComparableSet39.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet39.parallelStream();
        boolean boolean44 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean49 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj50 = strComparableSet47.clone();
        java.lang.Object[] objArray51 = strComparableSet47.toArray();
        java.lang.Object[] objArray52 = strComparableSet47.toArray();
        boolean boolean53 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.Object obj54 = strComparableSet47.clone();
        java.lang.Object obj55 = strComparableSet47.clone();
        boolean boolean56 = strComparableSet18.remove(obj55);
        boolean boolean58 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.String[] strArray60 = strComparableSet18.toArray(strArray59);
        int int61 = strComparableSet18.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[[]]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[[]]");
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "[[]]");
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>>(0);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet23.stream();
        int int28 = strComparableSet23.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str31 = strComparableSet30.toString();
        boolean boolean33 = strComparableSet30.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray38 = strComparableSet34.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean54 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean55 = strComparableSet23.remove((java.lang.Object) strComparableSet30);
        java.lang.Object[] objArray56 = strComparableSet30.toArray();
        boolean boolean57 = strComparableSet2.remove((java.lang.Object) objArray56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = strComparableSet59.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream75 = strComparableSet72.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj78 = strComparableSet77.clone();
        boolean boolean79 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean80 = strComparableSet67.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet72.iterator();
        boolean boolean88 = strComparableSet59.equals((java.lang.Object) strComparableSet72);
        java.lang.Object[] objArray89 = strComparableSet72.toArray();
        boolean boolean90 = strComparableSet2.contains((java.lang.Object) strComparableSet72);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor91 = strComparableSet2.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strComparableStream27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[]" + "'", str31, "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableItor60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(strComparableStream75);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableItor91);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet1 = new java.util.LinkedHashSet<java.lang.reflect.Type>((int) (byte) 0);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean59 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object obj90 = null;
        boolean boolean91 = strComparableSet86.equals(obj90);
        boolean boolean92 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator93 = strComparableSet66.spliterator();
        boolean boolean94 = strComparableSet58.contains((java.lang.Object) strComparableSpliterator93);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream95 = strComparableSet58.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream96 = strComparableSet58.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strComparableStream95);
        org.junit.Assert.assertNotNull(strComparableStream96);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        boolean boolean7 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSet2.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet49.spliterator();
        java.lang.Class<?> wildcardClass57 = strComparableSpliterator56.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.lang.Object[] objArray37 = strComparableSet35.toArray();
        int int38 = strComparableSet35.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.Object[] objArray74 = strComparableSet70.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet80.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj86 = strComparableSet85.clone();
        boolean boolean87 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean88 = strComparableSet75.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean90 = strComparableSet65.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        strComparableSet75.clear();
        boolean boolean92 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean93 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream94 = strComparableSet35.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strComparableStream94);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.lang.Object obj47 = strComparableSet6.clone();
        boolean boolean49 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet41.contains((java.lang.Object) false);
        boolean boolean58 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator59 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        boolean boolean90 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        boolean boolean91 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator40 = strComparableSet32.spliterator();
        boolean boolean41 = strComparableSet32.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertNotNull(strComparableSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = strComparableSet17.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableItor26);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet56.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet62.toArray();
        int int65 = strComparableSet62.size();
        boolean boolean66 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str69 = strComparableSet68.toString();
        boolean boolean70 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.String str71 = strComparableSet56.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet56.iterator();
        boolean boolean73 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        strComparableSet56.clear();
        java.lang.Class<?> wildcardClass75 = strComparableSet56.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1, (float) ' ');
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean59 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object obj90 = null;
        boolean boolean91 = strComparableSet86.equals(obj90);
        boolean boolean92 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator93 = strComparableSet66.spliterator();
        boolean boolean94 = strComparableSet58.contains((java.lang.Object) strComparableSpliterator93);
        int int95 = strComparableSet58.size();
        boolean boolean96 = strComparableSet58.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream97 = strComparableSet58.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strComparableStream97);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Class<?> wildcardClass20 = strComparableSet11.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.lang.Object[] objArray22 = strComparableSet16.toArray();
        boolean boolean23 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Class<?> wildcardClass24 = strComparableSet5.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.lang.Object[] objArray37 = strComparableSet35.toArray();
        int int38 = strComparableSet35.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.Object[] objArray74 = strComparableSet70.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet80.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj86 = strComparableSet85.clone();
        boolean boolean87 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean88 = strComparableSet75.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean90 = strComparableSet65.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        strComparableSet75.clear();
        boolean boolean92 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean93 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.lang.Object[] objArray94 = strComparableSet35.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean23 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet11.spliterator();
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        strComparableSet11.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet66.iterator();
        boolean boolean82 = strComparableSet26.equals((java.lang.Object) strComparableSet66);
        java.lang.Object[] objArray83 = strComparableSet66.toArray();
        java.lang.Object[] objArray84 = strComparableSet66.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet81.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean85 = strComparableSet0.contains((java.lang.Object) boolean84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet0.stream();
        java.lang.Object obj87 = strComparableSet0.clone();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean30 = strComparableSet1.remove((java.lang.Object) strComparableSet20);
        java.lang.String str31 = strComparableSet20.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[]" + "'", str31, "[]");
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj75 = null;
        boolean boolean76 = strComparableSet57.equals(obj75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        strComparableSet6.clear();
        int int34 = strComparableSet6.size();
        int int35 = strComparableSet6.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        boolean boolean74 = strComparableSet42.remove((java.lang.Object) (-1L));
        boolean boolean75 = strComparableSet42.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator64 = strComparableSet6.spliterator();
        java.lang.Object[] objArray65 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[[]]");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator12 = strComparableSet6.spliterator();
        int int13 = strComparableSet6.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet57.parallelStream();
        boolean boolean72 = strComparableSet52.contains((java.lang.Object) strComparableStream71);
        boolean boolean73 = strComparableSet52.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet26.parallelStream();
        java.lang.String str49 = strComparableSet26.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean64 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        boolean boolean69 = strComparableSet66.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet66.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object[] objArray72 = strComparableSet66.toArray();
        boolean boolean73 = strComparableSet55.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean74 = strComparableSet26.remove((java.lang.Object) boolean73);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1, (float) 3);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet14.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean20 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj21 = strComparableSet18.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet18.parallelStream();
        boolean boolean23 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean28 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj29 = strComparableSet26.clone();
        java.lang.Object[] objArray30 = strComparableSet26.toArray();
        java.lang.Object[] objArray31 = strComparableSet26.toArray();
        boolean boolean32 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj33 = strComparableSet26.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        boolean boolean40 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean41 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean42 = strComparableSet6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[[]]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[[]]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.String str52 = strComparableSet36.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[]" + "'", str52, "[]");
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        boolean boolean35 = strComparableSet1.isEmpty();
        boolean boolean37 = strComparableSet1.equals((java.lang.Object) '#');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strComparableStream38);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet7.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet7.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.lang.Object[] objArray20 = strComparableSet16.toArray();
        java.lang.Object[] objArray21 = strComparableSet16.toArray();
        int int22 = strComparableSet16.size();
        boolean boolean23 = strComparableSet12.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet16.stream();
        boolean boolean25 = strComparableSet7.equals((java.lang.Object) strComparableSet16);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = strComparableSet2.iterator();
        java.lang.Class<?> wildcardClass25 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableItor24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        boolean boolean11 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator13 = strComparableSet12.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean64 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet60.contains((java.lang.Object) strComparableSet66);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet66.spliterator();
        boolean boolean69 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.String str70 = strComparableSet20.toString();
        boolean boolean71 = strComparableSet12.contains((java.lang.Object) strComparableSet20);
        boolean boolean72 = strComparableSet1.remove((java.lang.Object) strComparableSet12);
        java.lang.Object obj73 = strComparableSet12.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        boolean boolean33 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet54.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet54.remove((java.lang.Object) strComparableSet62);
        boolean boolean67 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet70.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet79.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj85 = strComparableSet84.clone();
        boolean boolean86 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean87 = strComparableSet74.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream88 = strComparableSet74.parallelStream();
        boolean boolean89 = strComparableSet70.contains((java.lang.Object) strComparableStream88);
        boolean boolean90 = strComparableSet26.contains((java.lang.Object) strComparableSet70);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet26.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableStream88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        java.lang.Object[] objArray92 = strComparableSet59.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        int int16 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = strComparableSet1.iterator();
        boolean boolean10 = strComparableSet1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet35.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet41.toArray();
        int int44 = strComparableSet41.size();
        boolean boolean45 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = strComparableSet26.iterator();
        java.lang.Object[] objArray48 = strComparableSet26.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strComparableItor47);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[hi!]");
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean28 = strComparableSet13.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        boolean boolean53 = strComparableSet50.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet55.equals((java.lang.Object) 1);
        boolean boolean58 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean59 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet55.contains((java.lang.Object) strComparableSet61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray75 = new java.lang.reflect.GenericDeclaration[] { wildcardClass64, wildcardClass66, wildcardClass68, wildcardClass70, wildcardClass72, wildcardClass74 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray76 = strComparableSet55.toArray(genericDeclarationArray75);
        java.lang.Object[] objArray77 = strComparableSet55.toArray();
        boolean boolean78 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean80 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(genericDeclarationArray75);
        org.junit.Assert.assertNotNull(genericDeclarationArray76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet32.contains((java.lang.Object) strComparableSet38);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator40 = strComparableSet38.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = strComparableSet38.iterator();
        boolean boolean44 = strComparableSet38.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator45 = strComparableSet38.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet51.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj57 = strComparableSet56.clone();
        boolean boolean58 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean59 = strComparableSet46.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean65 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj66 = strComparableSet63.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean70 = strComparableSet38.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean71 = strComparableSet1.contains((java.lang.Object) strComparableSet68);
        int int72 = strComparableSet68.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator40);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(strComparableItor42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strComparableStream54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object obj64 = null;
        boolean boolean65 = strComparableSet60.equals(obj64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean68 = strComparableSet60.contains((java.lang.Object) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean73 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet71.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.lang.Object[] objArray79 = strComparableSet77.toArray();
        int int80 = strComparableSet77.size();
        boolean boolean81 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean82 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean83 = strComparableSet26.contains((java.lang.Object) strComparableSet60);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.lang.Object[] objArray33 = strComparableSet23.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = strComparableSet23.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(strComparableItor34);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream57 = strComparableSet26.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(strComparableStream57);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object obj64 = null;
        boolean boolean65 = strComparableSet60.equals(obj64);
        boolean boolean66 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet40.spliterator();
        int int68 = strComparableSet40.size();
        boolean boolean69 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.lang.String str70 = strComparableSet40.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean18 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj19 = strComparableSet16.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str25 = strComparableSet24.toString();
        boolean boolean27 = strComparableSet24.equals((java.lang.Object) 10L);
        boolean boolean28 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator29 = strComparableSet24.spliterator();
        boolean boolean30 = strComparableSet0.equals((java.lang.Object) strComparableSet24);
        boolean boolean32 = strComparableSet24.remove((java.lang.Object) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean43 = strComparableSet41.contains((java.lang.Object) 100L);
        boolean boolean45 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = strComparableSet41.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet41.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet41.spliterator();
        strComparableSet41.clear();
        java.lang.Object[] objArray50 = strComparableSet41.toArray();
        boolean boolean51 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strComparableItor46);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) (byte) 1);
        boolean boolean12 = strComparableSet6.contains((java.lang.Object) strComparableSet11);
        java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet15 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[]>((int) 'a', (float) 100L);
        boolean boolean16 = strComparableSet6.equals((java.lang.Object) 'a');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet76.parallelStream();
        java.lang.Object[] objArray80 = strComparableSet76.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet76.iterator();
        int int82 = strComparableSet76.size();
        boolean boolean83 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '#');
        boolean boolean87 = strComparableSet76.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj81 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet78.parallelStream();
        boolean boolean83 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean84 = strComparableSet55.remove((java.lang.Object) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor85 = strComparableSet78.iterator();
        boolean boolean86 = strComparableSet8.remove((java.lang.Object) strComparableSet78);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableItor85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.lang.Object obj4 = null;
        boolean boolean5 = strComparableSet1.equals(obj4);
        boolean boolean7 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean17 = strComparableSet15.contains((java.lang.Object) 100L);
        boolean boolean19 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet15.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet15.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet15.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet25.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object[] objArray33 = strComparableSet31.toArray();
        int int34 = strComparableSet31.size();
        boolean boolean35 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str38 = strComparableSet37.toString();
        boolean boolean39 = strComparableSet25.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean41 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        strComparableSet25.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet55.spliterator();
        boolean boolean58 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator59 = strComparableSet9.spliterator();
        boolean boolean60 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet2.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet2.spliterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        boolean boolean7 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet8.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        boolean boolean54 = strComparableSet51.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet56.equals((java.lang.Object) 1);
        boolean boolean59 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet56.contains((java.lang.Object) strComparableSet62);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator64 = strComparableSet62.spliterator();
        boolean boolean65 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.String str66 = strComparableSet16.toString();
        boolean boolean67 = strComparableSet8.contains((java.lang.Object) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object[] objArray72 = strComparableSet68.toArray();
        java.lang.Object[] objArray73 = strComparableSet68.toArray();
        int int74 = strComparableSet68.size();
        java.lang.String str75 = strComparableSet68.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean80 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet78.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.lang.Object[] objArray86 = strComparableSet84.toArray();
        int int87 = strComparableSet84.size();
        boolean boolean88 = strComparableSet78.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet90 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str91 = strComparableSet90.toString();
        boolean boolean92 = strComparableSet78.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet90);
        java.lang.String str93 = strComparableSet78.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor94 = strComparableSet78.iterator();
        boolean boolean95 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean96 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        int int97 = strComparableSet8.size();
        int int98 = strComparableSet8.size();
        boolean boolean99 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[]" + "'", str66, "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[]" + "'", str91, "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[]" + "'", str93, "[]");
        org.junit.Assert.assertNotNull(strComparableItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        java.util.LinkedHashSet<java.io.Serializable> serializableSet1 = new java.util.LinkedHashSet<java.io.Serializable>((int) ' ');
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream78 = strComparableSet77.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        boolean boolean83 = strComparableSet80.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet85.equals((java.lang.Object) 1);
        boolean boolean88 = strComparableSet80.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet77.remove((java.lang.Object) strComparableSet85);
        boolean boolean90 = strComparableSet85.isEmpty();
        boolean boolean91 = strComparableSet52.contains((java.lang.Object) strComparableSet85);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableSet52.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableStream78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableItor92);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet53.parallelStream();
        boolean boolean63 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean67 = strComparableSet53.contains((java.lang.Object) strComparableSet66);
        boolean boolean68 = strComparableSet36.contains((java.lang.Object) strComparableSet66);
        boolean boolean69 = strComparableSet36.isEmpty();
        java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>[] strComparableBaseStreamArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.stream.BaseStream<java.lang.Comparable<java.lang.String>, java.util.stream.Stream<java.lang.Comparable<java.lang.String>>>[] strComparableBaseStreamArray71 = strComparableSet36.toArray(strComparableBaseStreamArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.lang.Object[] objArray63 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet70.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet70.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet70.iterator();
        boolean boolean77 = strComparableSet70.isEmpty();
        boolean boolean78 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        strComparableSet70.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(strComparableItor75);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        int int9 = strComparableSet7.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = strComparableSet7.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strComparableItor10);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet32.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertNotNull(strComparableStream37);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet21.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strComparableStream52);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.util.LinkedHashSet<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet1 = new java.util.LinkedHashSet<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>>((int) (byte) 100);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) (byte) 1);
        boolean boolean12 = strComparableSet6.contains((java.lang.Object) strComparableSet11);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = strComparableSet11.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strComparableItor13);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean13 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj14 = strComparableSet11.clone();
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        boolean boolean16 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean18 = strComparableSet17.isEmpty();
        boolean boolean19 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet17.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[[]]");
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet8.parallelStream();
        boolean boolean12 = strComparableSet1.equals((java.lang.Object) strComparableStream11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strComparableStream13);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj13 = strComparableSet10.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet18.parallelStream();
        boolean boolean27 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean28 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet15.parallelStream();
        java.lang.Object obj30 = strComparableSet15.clone();
        java.lang.Object[] objArray31 = strComparableSet15.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean35 = strComparableSet33.contains((java.lang.Object) 100L);
        boolean boolean37 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = strComparableSet33.iterator();
        boolean boolean39 = strComparableSet15.contains((java.lang.Object) strComparableItor38);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strComparableItor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str54 = strComparableSet53.toString();
        boolean boolean55 = strComparableSet26.equals((java.lang.Object) strComparableSet53);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet53.spliterator();
        boolean boolean58 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet13.stream();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strComparableStream28);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet0.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet0.parallelStream();
        java.lang.Object[] objArray83 = strComparableSet0.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        int int74 = strComparableSet65.size();
        boolean boolean76 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean75 = strComparableSet67.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        int int34 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strComparableItor36);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(strComparableItor47);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream57 = strComparableSet6.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(strComparableStream57);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet35.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet41.toArray();
        int int44 = strComparableSet41.size();
        boolean boolean45 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Class<?> wildcardClass47 = strComparableSet26.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet3.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet5.toArray();
        int int8 = strComparableSet5.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet24.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj30 = strComparableSet29.clone();
        boolean boolean31 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean32 = strComparableSet19.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean34 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean35 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray36 = strComparableSet5.toArray();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strComparableStream27);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        boolean boolean3 = strComparableSet2.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet50.contains((java.lang.Object) strComparableSet56);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet56.spliterator();
        boolean boolean59 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.String str60 = strComparableSet10.toString();
        java.lang.Object[] objArray61 = strComparableSet10.toArray();
        boolean boolean63 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator64 = strComparableSet10.spliterator();
        boolean boolean65 = strComparableSet2.contains((java.lang.Object) strComparableSet10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[]" + "'", str60, "[]");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray52 = strComparableSet36.toArray();
        java.lang.Class<?> wildcardClass53 = objArray52.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3, 100.0f);
        strComparableSet2.clear();
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray56 = strComparableSet26.toArray();
        java.lang.Object[] objArray57 = strComparableSet26.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object[] objArray67 = strComparableSet63.toArray();
        java.lang.Object[] objArray68 = strComparableSet63.toArray();
        int int69 = strComparableSet63.size();
        boolean boolean70 = strComparableSet59.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean74 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object[] objArray75 = strComparableSet71.toArray();
        java.lang.Object[] objArray76 = strComparableSet71.toArray();
        int int77 = strComparableSet71.size();
        boolean boolean78 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean79 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet26.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.String str9 = strComparableSet0.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet20 = new java.util.LinkedHashSet<java.lang.Class<?>>();
        boolean boolean21 = strComparableSet6.remove((java.lang.Object) wildcardClassSet20);
        java.lang.String str22 = strComparableSet6.toString();
        java.lang.String str23 = strComparableSet6.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator25 = strComparableSet24.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet46.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet46.remove((java.lang.Object) strComparableSet54);
        boolean boolean59 = strComparableSet54.isEmpty();
        boolean boolean60 = strComparableSet24.remove((java.lang.Object) strComparableSet54);
        boolean boolean61 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str62 = strComparableSet6.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[]" + "'", str23, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet0.spliterator();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean13 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        boolean boolean74 = strComparableSet42.remove((java.lang.Object) (-1L));
        java.util.LinkedHashSet<java.io.Serializable> serializableSet77 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean78 = strComparableSet42.contains((java.lang.Object) (short) 1);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet42.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean59 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object obj90 = null;
        boolean boolean91 = strComparableSet86.equals(obj90);
        boolean boolean92 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator93 = strComparableSet66.spliterator();
        boolean boolean94 = strComparableSet58.contains((java.lang.Object) strComparableSpliterator93);
        int int95 = strComparableSet58.size();
        boolean boolean96 = strComparableSet58.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator97 = strComparableSet58.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator97);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        int int56 = strComparableSet51.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        boolean boolean22 = strComparableSet19.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean26 = strComparableSet24.equals((java.lang.Object) 1);
        boolean boolean27 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet24.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet24.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = strComparableSet24.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean32 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj38 = strComparableSet35.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str44 = strComparableSet43.toString();
        boolean boolean46 = strComparableSet43.equals((java.lang.Object) 10L);
        boolean boolean47 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean48 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertNotNull(strComparableItor30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[]" + "'", str44, "[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.String str61 = strComparableSet2.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet2.parallelStream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor63 = strComparableSet2.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[]" + "'", str61, "[]");
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(strComparableItor63);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet21.spliterator();
        boolean boolean86 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = strComparableSet2.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream39 = strComparableSet36.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj42 = strComparableSet41.clone();
        boolean boolean43 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean44 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        boolean boolean49 = strComparableSet46.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet51.equals((java.lang.Object) 1);
        boolean boolean54 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        boolean boolean69 = strComparableSet66.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet71.equals((java.lang.Object) 1);
        boolean boolean74 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean75 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet71.contains((java.lang.Object) strComparableSet77);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet77.spliterator();
        boolean boolean80 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.lang.String str81 = strComparableSet31.toString();
        java.lang.Object[] objArray82 = strComparableSet31.toArray();
        boolean boolean84 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean85 = strComparableSet2.contains((java.lang.Object) boolean84);
        java.lang.Class<?> wildcardClass86 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableItor24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strComparableStream39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[]" + "'", str81, "[]");
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str54 = strComparableSet53.toString();
        boolean boolean55 = strComparableSet26.equals((java.lang.Object) strComparableSet53);
        java.lang.String str56 = strComparableSet53.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream57 = strComparableSet53.parallelStream();
        boolean boolean59 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[null]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(strComparableStream57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray81 = strComparableSet52.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[]");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet2 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>>((int) ' ', (float) 100L);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet63.stream();
        int int68 = strComparableSet63.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str71 = strComparableSet70.toString();
        boolean boolean73 = strComparableSet70.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.lang.Object[] objArray78 = strComparableSet74.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean82 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean85 = strComparableSet84.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int86 = strComparableSet84.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream87 = strComparableSet84.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj90 = strComparableSet89.clone();
        boolean boolean91 = strComparableSet84.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        boolean boolean92 = strComparableSet79.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        boolean boolean93 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean94 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean95 = strComparableSet63.remove((java.lang.Object) strComparableSet70);
        boolean boolean96 = strComparableSet63.isEmpty();
        boolean boolean97 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNotNull(strComparableStream87);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) 1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet3.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet5.toArray();
        java.lang.Object[] objArray8 = strComparableSet5.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet40.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean59 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean60 = strComparableSet35.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        strComparableSet45.clear();
        boolean boolean62 = strComparableSet5.remove((java.lang.Object) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet64.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean70 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj71 = strComparableSet68.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet68.parallelStream();
        boolean boolean73 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean74 = strComparableSet45.remove((java.lang.Object) strComparableSet68);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet68.iterator();
        boolean boolean76 = strComparableSet2.contains((java.lang.Object) strComparableItor75);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet65.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet65.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(strComparableItor75);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.String str54 = strComparableSet26.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        boolean boolean74 = strComparableSet71.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableSet71.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        java.lang.Object[] objArray77 = strComparableSet71.toArray();
        boolean boolean78 = strComparableSet60.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean79 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[[]]" + "'", str54, "[[]]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet56.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet62.toArray();
        int int65 = strComparableSet62.size();
        boolean boolean66 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str69 = strComparableSet68.toString();
        boolean boolean70 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.String str71 = strComparableSet56.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet56.iterator();
        boolean boolean73 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        strComparableSet56.clear();
        int int75 = strComparableSet56.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.lang.Object obj12 = null;
        boolean boolean13 = strComparableSet6.remove(obj12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet34 = new java.util.LinkedHashSet<java.lang.Class<?>>();
        boolean boolean35 = strComparableSet20.remove((java.lang.Object) wildcardClassSet34);
        boolean boolean36 = strComparableSet6.equals((java.lang.Object) strComparableSet20);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        java.lang.Class<?> wildcardClass37 = strComparableItor36.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.String str17 = strComparableSet2.toString();
        boolean boolean18 = strComparableSet2.isEmpty();
        boolean boolean19 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[]" + "'", str17, "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        boolean boolean9 = strComparableSet0.remove((java.lang.Object) '#');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet0.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet12.parallelStream();
        boolean boolean22 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean26 = strComparableSet12.contains((java.lang.Object) strComparableSet25);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray68 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray69 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray68;
        strComparableCollectionArray69[0] = strComparableSet42;
        strComparableCollectionArray69[1] = strComparableSet61;
        strComparableCollectionArray69[2] = strComparableSet66;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray76 = strComparableSet27.toArray(strComparableCollectionArray69);
        boolean boolean77 = strComparableSet25.contains((java.lang.Object) strComparableCollectionArray69);
        boolean boolean78 = strComparableSet0.equals((java.lang.Object) boolean77);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(collectionArray68);
        org.junit.Assert.assertNotNull(strComparableCollectionArray69);
        org.junit.Assert.assertNotNull(strComparableCollectionArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj26 = strComparableSet23.clone();
        java.lang.Object[] objArray27 = strComparableSet23.toArray();
        boolean boolean28 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.lang.Object[] objArray39 = strComparableSet35.toArray();
        java.lang.Object[] objArray40 = strComparableSet35.toArray();
        int int41 = strComparableSet35.size();
        boolean boolean42 = strComparableSet31.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet31.parallelStream();
        boolean boolean44 = strComparableSet29.contains((java.lang.Object) strComparableStream43);
        boolean boolean45 = strComparableSet6.contains((java.lang.Object) strComparableStream43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[[]]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet49.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet60.stream();
        boolean boolean70 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor71 = strComparableSet49.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableItor71);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet2 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>>((int) 'a', (float) 100L);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object obj40 = null;
        boolean boolean41 = strComparableSet36.equals(obj40);
        boolean boolean42 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet16.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet50.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet66.spliterator();
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray71 = strComparableSet66.toArray(typeArray70);
        java.lang.Object obj72 = strComparableSet66.clone();
        java.lang.Object obj73 = strComparableSet66.clone();
        boolean boolean74 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.Object obj75 = strComparableSet16.clone();
        boolean boolean76 = strComparableSet1.equals(obj75);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableItor9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        java.lang.Object[] objArray57 = strComparableSet6.toArray();
        java.lang.String str58 = strComparableSet6.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertNotNull(strComparableItor59);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean28 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet26.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.lang.Object[] objArray34 = strComparableSet32.toArray();
        int int35 = strComparableSet32.size();
        boolean boolean36 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str39 = strComparableSet38.toString();
        boolean boolean40 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.String str41 = strComparableSet26.toString();
        boolean boolean42 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet26.clear();
        boolean boolean45 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[]" + "'", str39, "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[]" + "'", str41, "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        boolean boolean73 = strComparableSet42.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableItor32);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0, (float) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean22 = strComparableSet6.contains((java.lang.Object) false);
        java.lang.Object obj23 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0, (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet13.toArray();
        java.lang.Object[] objArray16 = strComparableSet13.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        strComparableSet53.clear();
        boolean boolean70 = strComparableSet13.remove((java.lang.Object) strComparableSet53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator73 = strComparableSet72.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean78 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj79 = strComparableSet76.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableSet76.parallelStream();
        boolean boolean81 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean82 = strComparableSet53.remove((java.lang.Object) strComparableSet76);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor83 = strComparableSet53.iterator();
        boolean boolean85 = strComparableSet53.remove((java.lang.Object) (-1L));
        boolean boolean86 = strComparableSet1.contains((java.lang.Object) strComparableSet53);
        boolean boolean88 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strComparableItor83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.util.LinkedHashSet<java.lang.constant.Constable> constableSet0 = new java.util.LinkedHashSet<java.lang.constant.Constable>();
        java.lang.Class<?> wildcardClass1 = constableSet0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet1.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean14 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj15 = strComparableSet12.clone();
        java.lang.Object[] objArray16 = strComparableSet12.toArray();
        boolean boolean17 = strComparableSet12.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet12.stream();
        boolean boolean19 = strComparableSet1.equals((java.lang.Object) strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[[]]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet41.contains((java.lang.Object) false);
        boolean boolean58 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator59 = strComparableSet32.spliterator();
        strComparableSet32.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator59);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray56 = strComparableSet26.toArray();
        java.lang.Object[] objArray57 = strComparableSet26.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object[] objArray67 = strComparableSet63.toArray();
        java.lang.Object[] objArray68 = strComparableSet63.toArray();
        int int69 = strComparableSet63.size();
        boolean boolean70 = strComparableSet59.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean74 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object[] objArray75 = strComparableSet71.toArray();
        java.lang.Object[] objArray76 = strComparableSet71.toArray();
        int int77 = strComparableSet71.size();
        boolean boolean78 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean79 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = strComparableSet59.iterator();
        strComparableSet59.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strComparableItor80);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean7 = strComparableSet0.remove((java.lang.Object) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        boolean boolean12 = strComparableSet9.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet14.equals((java.lang.Object) 1);
        boolean boolean17 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet19.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj25 = strComparableSet24.clone();
        boolean boolean26 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean27 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean29 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = strComparableSet32.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator46 = strComparableSet32.spliterator();
        boolean boolean47 = strComparableSet28.equals((java.lang.Object) strComparableSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableItor45);
        org.junit.Assert.assertNotNull(strComparableSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean40 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj41 = strComparableSet38.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str47 = strComparableSet46.toString();
        boolean boolean49 = strComparableSet46.equals((java.lang.Object) 10L);
        boolean boolean50 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean51 = strComparableSet35.remove((java.lang.Object) strComparableSet46);
        boolean boolean52 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.lang.Object[] objArray53 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean22 = strComparableSet1.remove((java.lang.Object) boolean21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        int int34 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean36 = strComparableSet6.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet6.parallelStream();
        java.lang.Class<?> wildcardClass38 = strComparableStream37.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream2 = strComparableSet1.stream();
        org.junit.Assert.assertNotNull(strComparableStream2);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet13.toArray();
        java.lang.Object[] objArray16 = strComparableSet13.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        strComparableSet53.clear();
        boolean boolean70 = strComparableSet13.remove((java.lang.Object) strComparableSet53);
        java.lang.Object obj71 = strComparableSet13.clone();
        java.lang.Object obj72 = strComparableSet13.clone();
        boolean boolean73 = strComparableSet8.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet13.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strComparableStream74);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean59 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj60 = strComparableSet57.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean64 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object obj65 = strComparableSet32.clone();
        java.util.LinkedHashSet<java.util.List<java.lang.Comparable<java.lang.String>>> strComparableListSet68 = new java.util.LinkedHashSet<java.util.List<java.lang.Comparable<java.lang.String>>>((int) '#', (float) 'a');
        boolean boolean69 = strComparableSet32.contains((java.lang.Object) 'a');
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = strComparableSet32.iterator();
        java.lang.Object obj71 = strComparableSet32.clone();
        java.lang.Object obj72 = null;
        boolean boolean73 = strComparableSet32.remove(obj72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableItor70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) 'a', (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        int int8 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj9 = null;
        boolean boolean10 = strComparableSet1.contains(obj9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet57.contains((java.lang.Object) strComparableSet63);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet63.spliterator();
        boolean boolean66 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor68 = strComparableSet17.iterator();
        boolean boolean69 = strComparableSet1.equals((java.lang.Object) strComparableItor68);
        java.lang.Object[] objArray70 = strComparableSet1.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet14.iterator();
        boolean boolean30 = strComparableSet1.equals((java.lang.Object) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean39 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj40 = strComparableSet37.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.lang.Object[] objArray51 = strComparableSet46.toArray();
        int int52 = strComparableSet46.size();
        boolean boolean53 = strComparableSet42.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean54 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str57 = strComparableSet56.toString();
        boolean boolean59 = strComparableSet56.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj76 = strComparableSet75.clone();
        boolean boolean77 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet65.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean79 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean80 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator83 = strComparableSet82.spliterator();
        boolean boolean84 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean85 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList87 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream89 = strComparableList87.stream();
        boolean boolean90 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        boolean boolean91 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList87);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[]" + "'", str57, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strComparableStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet14.iterator();
        boolean boolean30 = strComparableSet1.equals((java.lang.Object) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator50 = strComparableSet37.spliterator();
        java.lang.String str51 = strComparableSet37.toString();
        boolean boolean52 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        strComparableSet32.clear();
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[]" + "'", str51, "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>> strComparableListSet1 = new java.util.LinkedHashSet<java.util.AbstractList<java.lang.Comparable<java.lang.String>>>((int) (byte) 10);
        java.lang.Class<?> wildcardClass2 = strComparableListSet1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet6.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet6.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean71 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean57 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.io.Serializable[] serializableArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable[] serializableArray59 = strComparableSet2.toArray(serializableArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator25 = strComparableSet10.spliterator();
        java.lang.Object obj26 = strComparableSet10.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean31 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj32 = strComparableSet29.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str38 = strComparableSet37.toString();
        boolean boolean40 = strComparableSet37.equals((java.lang.Object) 10L);
        boolean boolean41 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet37.contains((java.lang.Object) strComparableSet48);
        java.lang.String str52 = strComparableSet37.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet37.stream();
        boolean boolean54 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor55 = strComparableSet37.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[]" + "'", str52, "[]");
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strComparableItor55);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean31 = strComparableSet26.isEmpty();
        strComparableSet26.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean20 = strComparableSet5.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>[]> comparableCollectionArraySet1 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>[]>(1);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator32 = strComparableSet6.spliterator();
        int int33 = strComparableSet6.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet6.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean5 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet4);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet7.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj13 = strComparableSet12.clone();
        boolean boolean14 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean15 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray43 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray44 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray43;
        strComparableCollectionArray44[0] = strComparableSet17;
        strComparableCollectionArray44[1] = strComparableSet36;
        strComparableCollectionArray44[2] = strComparableSet41;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray51 = strComparableSet2.toArray(strComparableCollectionArray44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean54 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean55 = strComparableSet1.contains((java.lang.Object) boolean54);
        java.lang.Object obj56 = strComparableSet1.clone();
        java.lang.String str57 = strComparableSet1.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(collectionArray43);
        org.junit.Assert.assertNotNull(strComparableCollectionArray44);
        org.junit.Assert.assertNotNull(strComparableCollectionArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[]" + "'", str57, "[]");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean86 = strComparableSet68.contains((java.lang.Object) strComparableSet84);
        boolean boolean87 = strComparableSet67.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean88 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = strComparableSet68.containsAll(strComparableCollection89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet10.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet16.toArray();
        int int19 = strComparableSet16.size();
        boolean boolean20 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        int int21 = strComparableSet16.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = strComparableSet16.iterator();
        boolean boolean23 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object obj24 = strComparableSet16.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strComparableItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) ' ', (float) 100L);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet27.contains((java.lang.Object) strComparableSet43);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet26.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strComparableStream47);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet0.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet0.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertNotNull(strComparableStream82);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj2 = strComparableSet1.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        boolean boolean10 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean12 = strComparableSet11.isEmpty();
        boolean boolean13 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        int int14 = strComparableSet11.size();
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str54 = strComparableSet53.toString();
        boolean boolean55 = strComparableSet26.equals((java.lang.Object) strComparableSet53);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet26.parallelStream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet26.spliterator();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = strComparableSet26.containsAll(strComparableCollection58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator37 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertNotNull(strComparableSpliterator37);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream12 = strComparableSet6.parallelStream();
        boolean boolean13 = strComparableSet6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strComparableStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }
}

