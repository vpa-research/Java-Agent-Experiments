package org.huawei.linkedhashset;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        boolean boolean11 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean15 = strComparableSet1.contains((java.lang.Object) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray57 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray58 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray57;
        strComparableCollectionArray58[0] = strComparableSet31;
        strComparableCollectionArray58[1] = strComparableSet50;
        strComparableCollectionArray58[2] = strComparableSet55;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray65 = strComparableSet16.toArray(strComparableCollectionArray58);
        boolean boolean66 = strComparableSet14.contains((java.lang.Object) strComparableCollectionArray58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        boolean boolean71 = strComparableSet68.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet73.equals((java.lang.Object) 1);
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean77 = strComparableSet73.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet79.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj85 = strComparableSet84.clone();
        boolean boolean86 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean87 = strComparableSet73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator90 = strComparableSet89.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet89.spliterator();
        boolean boolean92 = strComparableSet84.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.lang.reflect.Type[] typeArray93 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray94 = strComparableSet89.toArray(typeArray93);
        boolean boolean95 = strComparableSet14.contains((java.lang.Object) typeArray93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(collectionArray57);
        org.junit.Assert.assertNotNull(strComparableCollectionArray58);
        org.junit.Assert.assertNotNull(strComparableCollectionArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator90);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeArray93);
        org.junit.Assert.assertNotNull(typeArray94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.Object[] objArray65 = strComparableSet61.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean80 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.Object obj81 = strComparableSet66.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.lang.Object[] objArray86 = strComparableSet82.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean89 = strComparableSet82.remove((java.lang.Object) strComparableSet88);
        boolean boolean90 = strComparableSet66.contains((java.lang.Object) boolean89);
        boolean boolean91 = strComparableSet2.contains((java.lang.Object) boolean89);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray86), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray86), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(10);
        int int22 = strComparableSet21.size();
        java.lang.String str23 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[]" + "'", str23, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.lang.Object[] objArray7 = strComparableSet2.toArray();
        boolean boolean9 = strComparableSet2.remove((java.lang.Object) false);
        boolean boolean10 = strComparableSet2.isEmpty();
        boolean boolean12 = strComparableSet2.equals((java.lang.Object) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>((int) (short) 1, (float) '#');
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[null]");
        int int59 = strComparableSet56.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet41.contains((java.lang.Object) strComparableSet47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray61 = new java.lang.reflect.GenericDeclaration[] { wildcardClass50, wildcardClass52, wildcardClass54, wildcardClass56, wildcardClass58, wildcardClass60 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray62 = strComparableSet41.toArray(genericDeclarationArray61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        boolean boolean69 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean70 = strComparableSet41.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean71 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        int int72 = strComparableSet2.size();
        java.lang.Object[] objArray73 = strComparableSet2.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(genericDeclarationArray61);
        org.junit.Assert.assertNotNull(genericDeclarationArray62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean69 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.lang.Object[] objArray75 = strComparableSet71.toArray();
        boolean boolean76 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.lang.Class<?> wildcardClass77 = strComparableSet8.getClass();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.lang.Object obj17 = strComparableSet2.clone();
        java.lang.Object obj18 = strComparableSet2.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean46 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet42.contains((java.lang.Object) strComparableSet48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray62 = new java.lang.reflect.GenericDeclaration[] { wildcardClass51, wildcardClass53, wildcardClass55, wildcardClass57, wildcardClass59, wildcardClass61 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray63 = strComparableSet42.toArray(genericDeclarationArray62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean74 = strComparableSet42.contains((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet65.iterator();
        boolean boolean76 = strComparableSet2.remove((java.lang.Object) strComparableItor75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(genericDeclarationArray62);
        org.junit.Assert.assertNotNull(genericDeclarationArray63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet0.parallelStream();
        java.lang.String str7 = strComparableSet0.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) '4');
        boolean boolean11 = strComparableSet0.contains((java.lang.Object) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream12 = strComparableSet10.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor13 = strComparableSet10.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strComparableStream12);
        org.junit.Assert.assertNotNull(strComparableItor13);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0, (float) 'a');
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet7.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet7.parallelStream();
        boolean boolean11 = strComparableSet7.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean86 = strComparableSet68.contains((java.lang.Object) strComparableSet84);
        boolean boolean87 = strComparableSet67.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean88 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator89 = strComparableSet6.spliterator();
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet6.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator89);
        org.junit.Assert.assertNotNull(strComparableStream91);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet55.spliterator();
        boolean boolean58 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator59 = strComparableSet9.spliterator();
        boolean boolean60 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet2.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet63.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet68.equals((java.lang.Object) 1);
        boolean boolean71 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int85 = strComparableSet83.size();
        boolean boolean86 = strComparableSet83.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean90 = strComparableSet88.equals((java.lang.Object) 1);
        boolean boolean91 = strComparableSet83.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean92 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean94 = strComparableSet88.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean95 = strComparableSet88.isEmpty();
        boolean boolean96 = strComparableSet2.equals((java.lang.Object) strComparableSet88);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.lang.Object[] objArray19 = strComparableSet14.toArray();
        boolean boolean20 = strComparableSet13.equals((java.lang.Object) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj26 = strComparableSet23.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str32 = strComparableSet31.toString();
        boolean boolean34 = strComparableSet31.equals((java.lang.Object) 10L);
        boolean boolean35 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet31.contains((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean47 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet31.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strComparableStream48);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        boolean boolean11 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator13 = strComparableSet12.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean64 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet60.contains((java.lang.Object) strComparableSet66);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet66.spliterator();
        boolean boolean69 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.String str70 = strComparableSet20.toString();
        boolean boolean71 = strComparableSet12.contains((java.lang.Object) strComparableSet20);
        boolean boolean72 = strComparableSet1.remove((java.lang.Object) strComparableSet12);
        strComparableSet12.clear();
        java.lang.String str74 = strComparableSet12.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[]" + "'", str74, "[]");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        boolean boolean33 = strComparableSet28.isEmpty();
        boolean boolean34 = strComparableSet28.isEmpty();
        boolean boolean35 = strComparableSet28.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet43.contains((java.lang.Object) strComparableSet49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray63 = new java.lang.reflect.GenericDeclaration[] { wildcardClass52, wildcardClass54, wildcardClass56, wildcardClass58, wildcardClass60, wildcardClass62 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray64 = strComparableSet43.toArray(genericDeclarationArray63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        boolean boolean71 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean72 = strComparableSet43.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean74 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        strComparableSet66.clear();
        java.lang.Object obj76 = null;
        boolean boolean77 = strComparableSet66.remove(obj76);
        java.lang.Class<?> wildcardClass78 = strComparableSet66.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(genericDeclarationArray63);
        org.junit.Assert.assertNotNull(genericDeclarationArray64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj74 = null;
        boolean boolean75 = strComparableSet65.contains(obj74);
        java.lang.Class<?> wildcardClass76 = strComparableSet65.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray78 = strComparableSet62.toArray();
        boolean boolean79 = strComparableSet10.equals((java.lang.Object) strComparableSet62);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableSet62.parallelStream();
        int int81 = strComparableSet62.size();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strComparableStream80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList1 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableList1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream3 = strComparableList1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet50.contains((java.lang.Object) strComparableSet56);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet56.spliterator();
        boolean boolean59 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.String str60 = strComparableSet10.toString();
        boolean boolean62 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList64 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream66 = strComparableList64.stream();
        boolean boolean67 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList64);
        boolean boolean68 = strComparableList1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strComparableStream3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[]" + "'", str60, "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strComparableStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet6.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean55 = strComparableSet6.remove((java.lang.Object) strComparableSet50);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = strComparableSet50.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableItor56);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        java.lang.Object[] objArray8 = strComparableSet1.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!]");
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableSet59.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertNotNull(strComparableItor92);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean15 = strComparableSet2.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean20 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj21 = strComparableSet18.clone();
        java.lang.Object[] objArray22 = strComparableSet18.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.Object obj53 = null;
        boolean boolean54 = strComparableSet49.equals(obj53);
        boolean boolean55 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        strComparableSet29.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet29.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet29.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray63 = strComparableSet61.toArray();
        int int64 = strComparableSet61.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet18.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean72 = strComparableSet2.remove((java.lang.Object) strComparableSet18);
        java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>> strComparableSetSet75 = new java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>>((int) '4', (float) '4');
        boolean boolean76 = strComparableSet2.equals((java.lang.Object) '4');
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[[]]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet8.stream();
        int int10 = strComparableSet8.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet8.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strComparableItor11);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet20 = new java.util.LinkedHashSet<java.lang.Class<?>>();
        boolean boolean21 = strComparableSet6.remove((java.lang.Object) wildcardClassSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean40 = strComparableSet22.contains((java.lang.Object) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean73 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean78 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet76.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        java.lang.Object[] objArray84 = strComparableSet82.toArray();
        int int85 = strComparableSet82.size();
        boolean boolean86 = strComparableSet76.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean87 = strComparableSet67.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet38.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean90 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean91 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.lang.Object obj47 = strComparableSet6.clone();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet6.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        boolean boolean57 = strComparableSet52.isEmpty();
        java.lang.Class<?> wildcardClass58 = strComparableSet52.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean18 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.constant.Constable[] constableArray25 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray31 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray37 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[] constableArray43 = new java.lang.constant.Constable[] { 1L, "[]", 0.0d, 100L, (-1) };
        java.lang.constant.Constable[][] constableArray44 = new java.lang.constant.Constable[][] { constableArray25, constableArray31, constableArray37, constableArray43 };
        java.lang.constant.Constable[][] constableArray45 = strComparableSet0.toArray(constableArray44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object obj56 = null;
        boolean boolean57 = strComparableSet52.equals(obj56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean78 = strComparableSet52.equals((java.lang.Object) strComparableSet69);
        strComparableSet52.clear();
        boolean boolean80 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean84 = strComparableSet81.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean85 = strComparableSet0.contains((java.lang.Object) boolean84);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet0.stream();
        java.lang.Object obj87 = strComparableSet0.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean90 = strComparableSet89.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int91 = strComparableSet89.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet89.parallelStream();
        java.lang.Object[] objArray93 = strComparableSet89.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor94 = strComparableSet89.iterator();
        boolean boolean95 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream96 = strComparableSet0.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(constableArray25);
        org.junit.Assert.assertNotNull(constableArray31);
        org.junit.Assert.assertNotNull(constableArray37);
        org.junit.Assert.assertNotNull(constableArray43);
        org.junit.Assert.assertNotNull(constableArray44);
        org.junit.Assert.assertNotNull(constableArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(strComparableStream92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strComparableStream96);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str75 = strComparableSet74.toString();
        boolean boolean76 = strComparableSet47.equals((java.lang.Object) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet74.spliterator();
        boolean boolean78 = strComparableSet11.equals((java.lang.Object) strComparableSet74);
        java.lang.Object obj79 = strComparableSet11.clone();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = strComparableSet11.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertNotNull(strComparableItor80);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.lang.Class<?> wildcardClass7 = strComparableSet0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet2.toString();
        int int16 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean27 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.lang.Object[] objArray32 = strComparableSet28.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean35 = strComparableSet28.remove((java.lang.Object) strComparableSet34);
        boolean boolean36 = strComparableSet23.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean37 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet39.stream();
        boolean boolean44 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        strComparableSet28.clear();
        strComparableSet28.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[]]" + "'", str15, "[[]]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator25 = strComparableSet10.spliterator();
        java.lang.Object obj26 = strComparableSet10.clone();
        java.lang.Object[] objArray27 = strComparableSet10.toArray();
        java.lang.Class<?> wildcardClass28 = strComparableSet10.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor51 = strComparableSet21.iterator();
        java.lang.Object obj52 = null;
        boolean boolean53 = strComparableSet21.equals(obj52);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strComparableItor51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        java.lang.Object[] objArray57 = strComparableSet26.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet58.toArray();
        java.lang.Object[] objArray63 = strComparableSet58.toArray();
        int int64 = strComparableSet58.size();
        java.lang.String str65 = strComparableSet58.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean70 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet68.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.lang.Object[] objArray76 = strComparableSet74.toArray();
        int int77 = strComparableSet74.size();
        boolean boolean78 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str81 = strComparableSet80.toString();
        boolean boolean82 = strComparableSet68.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        java.lang.String str83 = strComparableSet68.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor84 = strComparableSet68.iterator();
        boolean boolean85 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean89 = strComparableSet86.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        java.lang.Object[] objArray90 = strComparableSet86.toArray();
        boolean boolean91 = strComparableSet68.contains((java.lang.Object) strComparableSet86);
        boolean boolean92 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[]" + "'", str65, "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[]" + "'", str81, "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[]" + "'", str83, "[]");
        org.junit.Assert.assertNotNull(strComparableItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator13 = strComparableSet6.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0);
        boolean boolean16 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertNotNull(strComparableSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean37 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean38 = strComparableSet6.remove((java.lang.Object) strComparableSet13);
        java.lang.Object[] objArray39 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 0, (float) 2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        boolean boolean13 = strComparableSet9.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator26 = strComparableSet25.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator27 = strComparableSet25.spliterator();
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean29 = strComparableSet25.isEmpty();
        boolean boolean30 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean32 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator26);
        org.junit.Assert.assertNotNull(strComparableSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]> comparableSetArraySet0 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]>();
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet30.contains((java.lang.Object) strComparableSet36);
        boolean boolean38 = strComparableSet0.equals((java.lang.Object) boolean37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet0);
        java.lang.String str40 = strComparableSet0.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet0.stream();
        boolean boolean43 = strComparableSet0.add((java.lang.Comparable<java.lang.String>) "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[]" + "'", str40, "[]");
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean31 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet32 = new java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>>();
        boolean boolean33 = strComparableSet2.contains((java.lang.Object) strComparableSetSet32);
        java.lang.Object[] objArray34 = strComparableSet2.toArray();
        java.lang.constant.ConstantDesc[] constantDescArray38 = new java.lang.constant.ConstantDesc[] { 1, 1.0d, 2 };
        java.lang.constant.ConstantDesc[] constantDescArray42 = new java.lang.constant.ConstantDesc[] { 1, 1.0d, 2 };
        java.lang.constant.ConstantDesc[] constantDescArray46 = new java.lang.constant.ConstantDesc[] { 1, 1.0d, 2 };
        java.lang.constant.ConstantDesc[] constantDescArray50 = new java.lang.constant.ConstantDesc[] { 1, 1.0d, 2 };
        java.lang.constant.ConstantDesc[][] constantDescArray51 = new java.lang.constant.ConstantDesc[][] { constantDescArray38, constantDescArray42, constantDescArray46, constantDescArray50 };
        java.lang.constant.ConstantDesc[][] constantDescArray52 = strComparableSet2.toArray(constantDescArray51);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(constantDescArray38);
        org.junit.Assert.assertNotNull(constantDescArray42);
        org.junit.Assert.assertNotNull(constantDescArray46);
        org.junit.Assert.assertNotNull(constantDescArray50);
        org.junit.Assert.assertNotNull(constantDescArray51);
        org.junit.Assert.assertNotNull(constantDescArray52);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.Object[] objArray51 = strComparableSet2.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray51), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray51), "[]");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.lang.Object obj34 = strComparableSet20.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet55.spliterator();
        boolean boolean58 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator59 = strComparableSet9.spliterator();
        boolean boolean60 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet67.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet67.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor73 = strComparableSet67.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.lang.Object[] objArray79 = strComparableSet75.toArray();
        java.lang.Object[] objArray80 = strComparableSet75.toArray();
        boolean boolean81 = strComparableSet74.equals((java.lang.Object) strComparableSet75);
        boolean boolean82 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(strComparableItor73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator28 = strComparableSet27.spliterator();
        boolean boolean29 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = strComparableSet27.iterator();
        boolean boolean32 = strComparableSet27.equals((java.lang.Object) (short) 0);
        boolean boolean33 = strComparableSet27.isEmpty();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strComparableItor30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet41.contains((java.lang.Object) false);
        boolean boolean58 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        strComparableSet32.clear();
        int int60 = strComparableSet32.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.lang.Object[] objArray57 = strComparableSet52.toArray();
        int int58 = strComparableSet52.size();
        java.lang.String str59 = strComparableSet52.toString();
        boolean boolean60 = strComparableSet52.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet52.stream();
        boolean boolean62 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[]" + "'", str59, "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean17 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) ' ', (float) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet21.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        java.util.LinkedHashSet<java.io.Serializable> serializableSet1 = new java.util.LinkedHashSet<java.io.Serializable>(3);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str14 = strComparableSet13.toString();
        boolean boolean16 = strComparableSet13.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean37 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean38 = strComparableSet6.remove((java.lang.Object) strComparableSet13);
        boolean boolean40 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.stream();
        boolean boolean70 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        int int71 = strComparableSet49.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator73 = strComparableSet72.spliterator();
        java.lang.Object obj74 = strComparableSet72.clone();
        boolean boolean75 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.lang.Object[] objArray22 = strComparableSet16.toArray();
        boolean boolean23 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object obj54 = null;
        boolean boolean55 = strComparableSet50.equals(obj54);
        boolean boolean56 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        strComparableSet30.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor58 = strComparableSet30.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet30.stream();
        boolean boolean60 = strComparableSet16.contains((java.lang.Object) strComparableSet30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableItor58);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator12 = strComparableSet6.spliterator();
        java.lang.Object obj13 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet1.toArray();
        java.lang.String str8 = strComparableSet1.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = strComparableSet1.iterator();
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!]" + "'", str8, "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor9);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet22.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj44 = strComparableSet43.clone();
        boolean boolean45 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean46 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean57 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet58.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean77 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean78 = strComparableSet53.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean80 = strComparableSet53.equals((java.lang.Object) (short) 10);
        boolean boolean82 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray83 = strComparableSet53.toArray();
        boolean boolean84 = strComparableSet22.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.lang.Object[] objArray12 = strComparableSet6.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean17 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet15.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.Object[] objArray23 = strComparableSet21.toArray();
        int int24 = strComparableSet21.size();
        boolean boolean25 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        int int26 = strComparableSet21.size();
        boolean boolean27 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet29.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj35 = strComparableSet34.clone();
        boolean boolean36 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet29.parallelStream();
        boolean boolean39 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean43 = strComparableSet29.contains((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj55 = strComparableSet54.clone();
        boolean boolean56 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean57 = strComparableSet44.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray85 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray86 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray85;
        strComparableCollectionArray86[0] = strComparableSet59;
        strComparableCollectionArray86[1] = strComparableSet78;
        strComparableCollectionArray86[2] = strComparableSet83;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray93 = strComparableSet44.toArray(strComparableCollectionArray86);
        boolean boolean94 = strComparableSet42.contains((java.lang.Object) strComparableCollectionArray86);
        java.lang.Iterable<java.lang.Comparable<java.lang.String>>[] strComparableIterableArray95 = strComparableSet21.toArray((java.lang.Iterable<java.lang.Comparable<java.lang.String>>[]) strComparableCollectionArray86);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(collectionArray85);
        org.junit.Assert.assertNotNull(strComparableCollectionArray86);
        org.junit.Assert.assertNotNull(strComparableCollectionArray93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strComparableIterableArray95);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        strComparableSet2.clear();
        boolean boolean64 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet2.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        java.util.LinkedHashSet<java.lang.Cloneable> cloneableSet0 = new java.util.LinkedHashSet<java.lang.Cloneable>();
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean28 = strComparableSet13.isEmpty();
        java.lang.Object[] objArray29 = strComparableSet13.toArray();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[[]]");
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.lang.Object[] objArray11 = strComparableSet9.toArray();
        int int12 = strComparableSet9.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean17 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.lang.Object[] objArray22 = strComparableSet20.toArray();
        java.lang.Object[] objArray23 = strComparableSet20.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.lang.Object[] objArray59 = strComparableSet55.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean74 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean75 = strComparableSet50.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        strComparableSet60.clear();
        boolean boolean77 = strComparableSet20.remove((java.lang.Object) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet79.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean85 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj86 = strComparableSet83.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream87 = strComparableSet83.parallelStream();
        boolean boolean88 = strComparableSet79.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean89 = strComparableSet60.remove((java.lang.Object) strComparableSet83);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor90 = strComparableSet83.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet91 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean92 = strComparableSet9.contains((java.lang.Object) strComparableSet91);
        boolean boolean93 = strComparableSet1.remove((java.lang.Object) strComparableSet91);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableItor90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.Comparable<java.lang.String> strComparable26 = null;
        boolean boolean27 = strComparableSet10.add(strComparable26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean32 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj33 = strComparableSet30.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet30.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object obj45 = null;
        boolean boolean46 = strComparableSet41.equals(obj45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean49 = strComparableSet41.contains((java.lang.Object) 100);
        boolean boolean50 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        strComparableSet30.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet54.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet60.toArray();
        int int63 = strComparableSet60.size();
        boolean boolean64 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str67 = strComparableSet66.toString();
        boolean boolean68 = strComparableSet54.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.String str69 = strComparableSet54.toString();
        boolean boolean70 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        strComparableSet54.clear();
        boolean boolean72 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object obj73 = strComparableSet54.clone();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream11 = strComparableSet8.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj14 = strComparableSet13.clone();
        boolean boolean15 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet27.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean35 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean46 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet42.contains((java.lang.Object) strComparableSet48);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator50 = strComparableSet48.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream51 = strComparableSet48.stream();
        boolean boolean52 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray53 = strComparableSet13.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor54 = strComparableSet13.iterator();
        boolean boolean55 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(strComparableStream11);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator50);
        org.junit.Assert.assertNotNull(strComparableStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strComparableItor54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        int int56 = strComparableSet6.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet59.clear();
        java.lang.Class<?> wildcardClass63 = strComparableSet59.getClass();
        boolean boolean64 = strComparableSet6.equals((java.lang.Object) strComparableSet59);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet6.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet1.toArray();
        java.lang.String str8 = strComparableSet1.toString();
        java.lang.Object obj9 = strComparableSet1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[hi!]" + "'", str8, "[hi!]");
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[hi!]");
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj13 = strComparableSet10.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet18.parallelStream();
        boolean boolean27 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean28 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator29 = strComparableSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator29);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>[]> comparableIterableArraySet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>[]>((int) (short) 0, 10.0f);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str75 = strComparableSet74.toString();
        boolean boolean76 = strComparableSet47.equals((java.lang.Object) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet74.spliterator();
        boolean boolean78 = strComparableSet11.equals((java.lang.Object) strComparableSet74);
        java.lang.String str79 = strComparableSet11.toString();
        strComparableSet11.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[]" + "'", str79, "[]");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet27.contains((java.lang.Object) strComparableSet43);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object obj47 = strComparableSet27.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator50 = strComparableSet49.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj56 = strComparableSet53.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream57 = strComparableSet53.parallelStream();
        boolean boolean58 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean63 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj64 = strComparableSet61.clone();
        java.lang.Object[] objArray65 = strComparableSet61.toArray();
        java.lang.Object[] objArray66 = strComparableSet61.toArray();
        boolean boolean67 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean68 = strComparableSet61.isEmpty();
        boolean boolean69 = strComparableSet27.contains((java.lang.Object) strComparableSet61);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator70 = strComparableSet27.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[[]]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[[]]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator70);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj13 = strComparableSet10.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet18.parallelStream();
        boolean boolean27 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean28 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet15.parallelStream();
        java.lang.Object[] objArray30 = strComparableSet15.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray56 = strComparableSet26.toArray();
        java.lang.Object[] objArray57 = strComparableSet26.toArray();
        boolean boolean59 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet6.spliterator();
        strComparableSet6.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean29 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj30 = strComparableSet27.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str36 = strComparableSet35.toString();
        boolean boolean38 = strComparableSet35.equals((java.lang.Object) 10L);
        boolean boolean39 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator40 = strComparableSet35.spliterator();
        boolean boolean41 = strComparableSet11.equals((java.lang.Object) strComparableSet35);
        boolean boolean42 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[]" + "'", str36, "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean56 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator32 = strComparableSet6.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        boolean boolean37 = strComparableSet34.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        boolean boolean42 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableSet54.size();
        boolean boolean57 = strComparableSet54.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet59.equals((java.lang.Object) 1);
        boolean boolean62 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean63 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet59.contains((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = strComparableSet59.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean70 = strComparableSet59.remove((java.lang.Object) strComparableSet69);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator71 = strComparableSet59.spliterator();
        boolean boolean72 = strComparableSet6.equals((java.lang.Object) strComparableSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableItor67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        strComparableSet13.clear();
        strComparableSet13.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.lang.Object[] objArray37 = strComparableSet35.toArray();
        int int38 = strComparableSet35.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.Object[] objArray74 = strComparableSet70.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet80.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj86 = strComparableSet85.clone();
        boolean boolean87 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean88 = strComparableSet75.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean89 = strComparableSet70.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean90 = strComparableSet65.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        strComparableSet75.clear();
        boolean boolean92 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean93 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        strComparableSet35.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet76.parallelStream();
        java.lang.Object[] objArray80 = strComparableSet76.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet76.iterator();
        int int82 = strComparableSet76.size();
        boolean boolean83 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = strComparableSet76.containsAll(strComparableCollection84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean15 = strComparableSet2.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean20 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj21 = strComparableSet18.clone();
        java.lang.Object[] objArray22 = strComparableSet18.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.Object obj53 = null;
        boolean boolean54 = strComparableSet49.equals(obj53);
        boolean boolean55 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        strComparableSet29.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet29.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet29.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray63 = strComparableSet61.toArray();
        int int64 = strComparableSet61.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet18.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean72 = strComparableSet2.remove((java.lang.Object) strComparableSet18);
        boolean boolean74 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[[]]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet6.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet59.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj65 = strComparableSet64.clone();
        boolean boolean66 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean67 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        boolean boolean72 = strComparableSet69.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet74.equals((java.lang.Object) 1);
        boolean boolean77 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.lang.Object obj78 = null;
        boolean boolean79 = strComparableSet74.equals(obj78);
        boolean boolean80 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator81 = strComparableSet54.spliterator();
        int int82 = strComparableSet54.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean84 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableSet86.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int88 = strComparableSet86.size();
        boolean boolean89 = strComparableSet86.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet90 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean91 = strComparableSet86.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet90);
        java.lang.Object[] objArray92 = strComparableSet86.toArray();
        int int93 = strComparableSet86.size();
        boolean boolean94 = strComparableSet54.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[hi!]");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet30.contains((java.lang.Object) strComparableSet36);
        boolean boolean38 = strComparableSet0.equals((java.lang.Object) boolean37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet0);
        java.lang.String str40 = strComparableSet0.toString();
        java.lang.Object obj41 = strComparableSet0.clone();
        boolean boolean42 = strComparableSet0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[]" + "'", str40, "[]");
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet0 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet58.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.stream();
        boolean boolean74 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean75 = strComparableSet58.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean76 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean81 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj82 = strComparableSet79.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet79.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableSet87.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int89 = strComparableSet87.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream90 = strComparableSet87.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet92 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj93 = strComparableSet92.clone();
        boolean boolean94 = strComparableSet87.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet92);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream95 = strComparableSet87.parallelStream();
        boolean boolean96 = strComparableSet84.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        strComparableSet87.clear();
        java.lang.Object[] objArray98 = strComparableSet87.toArray();
        boolean boolean99 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(strComparableStream90);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strComparableStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor8 = strComparableSet7.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strComparableItor8);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet37.contains((java.lang.Object) strComparableSet43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray57 = new java.lang.reflect.GenericDeclaration[] { wildcardClass46, wildcardClass48, wildcardClass50, wildcardClass52, wildcardClass54, wildcardClass56 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray58 = strComparableSet37.toArray(genericDeclarationArray57);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray59 = strComparableSet8.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray57);
        java.lang.Class<?> wildcardClass60 = annotatedElementArray59.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(genericDeclarationArray57);
        org.junit.Assert.assertNotNull(genericDeclarationArray58);
        org.junit.Assert.assertNotNull(annotatedElementArray59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        strComparableSet1.clear();
        strComparableSet1.clear();
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.String str61 = strComparableSet2.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet2.parallelStream();
        java.lang.Object[] objArray63 = strComparableSet2.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[]" + "'", str61, "[]");
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>>(0);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.lang.Object[] objArray12 = strComparableSet6.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        int int18 = strComparableSet15.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet50.contains((java.lang.Object) strComparableSet56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray70 = new java.lang.reflect.GenericDeclaration[] { wildcardClass59, wildcardClass61, wildcardClass63, wildcardClass65, wildcardClass67, wildcardClass69 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray71 = strComparableSet50.toArray(genericDeclarationArray70);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray72 = strComparableSet21.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray70);
        boolean boolean73 = strComparableSet6.contains((java.lang.Object) annotatedElementArray72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(genericDeclarationArray70);
        org.junit.Assert.assertNotNull(genericDeclarationArray71);
        org.junit.Assert.assertNotNull(annotatedElementArray72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet10.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet16.toArray();
        int int19 = strComparableSet16.size();
        boolean boolean20 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        int int21 = strComparableSet16.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = strComparableSet16.iterator();
        boolean boolean23 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        strComparableSet0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strComparableItor22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        java.lang.Object obj73 = strComparableSet42.clone();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = strComparableSet42.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertNotNull(strComparableItor74);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableList60.stream();
        boolean boolean63 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean71 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj72 = strComparableSet69.clone();
        java.lang.Object[] objArray73 = strComparableSet69.toArray();
        boolean boolean74 = strComparableSet69.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean76 = strComparableSet75.isEmpty();
        boolean boolean77 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj79 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[[]]");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[[]]");
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        boolean boolean74 = strComparableSet42.remove((java.lang.Object) (-1L));
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = strComparableSet42.removeAll(strComparableCollection75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet41.contains((java.lang.Object) false);
        boolean boolean58 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        strComparableSet32.clear();
        java.lang.Object[] objArray60 = strComparableSet32.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet14.iterator();
        boolean boolean30 = strComparableSet1.equals((java.lang.Object) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.String str57 = strComparableSet41.toString();
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[]" + "'", str57, "[]");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet56.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet62.toArray();
        int int65 = strComparableSet62.size();
        boolean boolean66 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str69 = strComparableSet68.toString();
        boolean boolean70 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.String str71 = strComparableSet56.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet56.iterator();
        boolean boolean73 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        strComparableSet56.clear();
        java.lang.String str75 = strComparableSet56.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[]" + "'", str69, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[]" + "'", str71, "[]");
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet41.contains((java.lang.Object) strComparableSet47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray61 = new java.lang.reflect.GenericDeclaration[] { wildcardClass50, wildcardClass52, wildcardClass54, wildcardClass56, wildcardClass58, wildcardClass60 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray62 = strComparableSet41.toArray(genericDeclarationArray61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        boolean boolean69 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean70 = strComparableSet41.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean71 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean73 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(genericDeclarationArray61);
        org.junit.Assert.assertNotNull(genericDeclarationArray62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet21.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean87 = strComparableSet86.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int88 = strComparableSet86.size();
        boolean boolean89 = strComparableSet21.remove((java.lang.Object) strComparableSet86);
        boolean boolean91 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet21.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strComparableStream92);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(strComparableCollection0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.size()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.lang.Object[] objArray39 = strComparableSet35.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = strComparableSet35.iterator();
        int int41 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet35.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet35.parallelStream();
        boolean boolean44 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet26.parallelStream();
        java.lang.String str46 = strComparableSet26.toString();
        int int47 = strComparableSet26.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[]" + "'", str46, "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean10 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj11 = strComparableSet8.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str17 = strComparableSet16.toString();
        boolean boolean19 = strComparableSet16.equals((java.lang.Object) 10L);
        boolean boolean20 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.String str21 = strComparableSet8.toString();
        int int22 = strComparableSet8.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet29.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray38 = strComparableSet34.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean41 = strComparableSet34.remove((java.lang.Object) strComparableSet40);
        boolean boolean42 = strComparableSet29.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean43 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.stream();
        boolean boolean50 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean51 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean52 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[]" + "'", str17, "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[[]]" + "'", str21, "[[]]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[null]");
        java.lang.Object[] objArray59 = strComparableSet56.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet66.parallelStream();
        boolean boolean71 = strComparableSet56.equals((java.lang.Object) strComparableSet66);
        java.lang.Object obj72 = strComparableSet66.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[[null]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[[null]]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet76.parallelStream();
        java.lang.Object[] objArray80 = strComparableSet76.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet76.iterator();
        int int82 = strComparableSet76.size();
        boolean boolean83 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.lang.Object[] objArray84 = strComparableSet67.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[hi!]");
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0, (float) 10L);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet22.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet22.remove((java.lang.Object) strComparableSet30);
        boolean boolean35 = strComparableSet30.isEmpty();
        boolean boolean36 = strComparableSet0.remove((java.lang.Object) strComparableSet30);
        java.lang.String str37 = strComparableSet0.toString();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[]" + "'", str37, "[]");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        boolean boolean60 = strComparableSet0.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean65 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj66 = strComparableSet63.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str72 = strComparableSet71.toString();
        boolean boolean74 = strComparableSet71.equals((java.lang.Object) 10L);
        boolean boolean75 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean76 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet71.stream();
        boolean boolean79 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray58 = strComparableSet42.toArray();
        boolean boolean60 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray62 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 0, (float) '4');
        boolean boolean66 = strComparableSet42.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet2.stream();
        java.lang.String str61 = strComparableSet2.toString();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet2.spliterator();
        boolean boolean63 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableStream60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[]" + "'", str61, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean57 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.lang.String str58 = strComparableSet2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[[], [[]]]" + "'", str58, "[[], [[]]]");
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        strComparableSet10.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean74 = strComparableSet67.contains((java.lang.Object) strComparableSet73);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet73.spliterator();
        boolean boolean76 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.String str77 = strComparableSet27.toString();
        boolean boolean79 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean81 = strComparableSet10.contains((java.lang.Object) strComparableSet80);
        java.lang.Object obj82 = strComparableSet80.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[]" + "'", str77, "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "[[]]");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '4', (float) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray78 = strComparableSet62.toArray();
        boolean boolean79 = strComparableSet10.equals((java.lang.Object) strComparableSet62);
        java.lang.String str80 = strComparableSet62.toString();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator81 = strComparableSet62.spliterator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[]" + "'", str80, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator81);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.lang.String str15 = strComparableSet2.toString();
        int int16 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean27 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.lang.Object[] objArray32 = strComparableSet28.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean35 = strComparableSet28.remove((java.lang.Object) strComparableSet34);
        boolean boolean36 = strComparableSet23.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean37 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet39.stream();
        boolean boolean44 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean45 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        strComparableSet39.clear();
        boolean boolean47 = strComparableSet39.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[]]" + "'", str15, "[[]]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet7.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet7.parallelStream();
        java.lang.Object[] objArray11 = strComparableSet7.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray58 = strComparableSet42.toArray();
        boolean boolean60 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.Class<?> wildcardClass67 = strComparableSet63.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 0, (float) 2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        boolean boolean13 = strComparableSet9.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator26 = strComparableSet25.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator27 = strComparableSet25.spliterator();
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean29 = strComparableSet25.isEmpty();
        boolean boolean30 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.lang.Object[] objArray66 = strComparableSet62.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream75 = strComparableSet72.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj78 = strComparableSet77.clone();
        boolean boolean79 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean80 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean82 = strComparableSet57.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.constant.Constable[] constableArray84 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray85 = strComparableSet57.toArray(constableArray84);
        boolean boolean87 = strComparableSet57.contains((java.lang.Object) '#');
        strComparableSet57.clear();
        java.lang.String str89 = strComparableSet57.toString();
        java.lang.Object obj90 = strComparableSet57.clone();
        boolean boolean91 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator26);
        org.junit.Assert.assertNotNull(strComparableSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(strComparableStream75);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(constableArray84);
        org.junit.Assert.assertNotNull(constableArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[]" + "'", str89, "[]");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "[]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet26.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj69 = null;
        boolean boolean70 = strComparableSet65.equals(obj69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableSet82.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet82.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj88 = strComparableSet87.clone();
        boolean boolean89 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean90 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean91 = strComparableSet65.equals((java.lang.Object) strComparableSet82);
        strComparableSet65.clear();
        boolean boolean93 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator94 = strComparableSet65.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strComparableStream85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator94);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet9.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor14 = strComparableSet9.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor15 = strComparableSet9.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.lang.Object[] objArray22 = strComparableSet17.toArray();
        boolean boolean23 = strComparableSet16.equals((java.lang.Object) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean28 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj29 = strComparableSet26.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str35 = strComparableSet34.toString();
        boolean boolean37 = strComparableSet34.equals((java.lang.Object) 10L);
        boolean boolean38 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet34.contains((java.lang.Object) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean50 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean51 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(strComparableItor14);
        org.junit.Assert.assertNotNull(strComparableItor15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.String str14 = strComparableSet6.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean19 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet17.clear();
        java.lang.Class<?> wildcardClass21 = strComparableSet17.getClass();
        boolean boolean22 = strComparableSet6.remove((java.lang.Object) wildcardClass21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        boolean boolean54 = strComparableSet51.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet56.equals((java.lang.Object) 1);
        boolean boolean59 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet56.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator73 = strComparableSet72.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator74 = strComparableSet72.spliterator();
        boolean boolean75 = strComparableSet67.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray77 = strComparableSet72.toArray(typeArray76);
        java.lang.reflect.Type[] typeArray78 = strComparableSet45.toArray(typeArray77);
        java.lang.reflect.Type[] typeArray79 = strComparableSet6.toArray(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator73);
        org.junit.Assert.assertNotNull(strComparableSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertNotNull(typeArray79);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object[] objArray24 = strComparableSet22.toArray();
        java.lang.Object[] objArray25 = strComparableSet22.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray78 = strComparableSet62.toArray();
        boolean boolean80 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean81 = strComparableSet22.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean82 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet6.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strComparableStream83);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration> genericDeclarationSet2 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration>(3, (float) 10L);
        java.lang.Class<?> wildcardClass3 = genericDeclarationSet2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.lang.Object[] objArray66 = strComparableSet64.toArray();
        int int67 = strComparableSet64.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean72 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        strComparableSet64.clear();
        int int74 = strComparableSet64.size();
        java.lang.Object[] objArray75 = strComparableSet64.toArray();
        boolean boolean76 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet64.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean11 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet9.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        int int18 = strComparableSet15.size();
        boolean boolean19 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean38 = strComparableSet20.contains((java.lang.Object) strComparableSet36);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.lang.Object[] objArray55 = strComparableSet51.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet61.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj67 = strComparableSet66.clone();
        boolean boolean68 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean69 = strComparableSet56.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean70 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean71 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet72 = new java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>>();
        boolean boolean73 = strComparableSet42.contains((java.lang.Object) strComparableSetSet72);
        java.lang.Object[] objArray74 = strComparableSet42.toArray();
        boolean boolean75 = strComparableSet36.remove((java.lang.Object) objArray74);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet36.iterator();
        boolean boolean77 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str19 = strComparableSet18.toString();
        boolean boolean21 = strComparableSet18.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.lang.Object[] objArray26 = strComparableSet22.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean42 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet27.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet27.parallelStream();
        boolean boolean45 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        int int34 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean36 = strComparableSet6.isEmpty();
        int int37 = strComparableSet6.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet1.parallelStream();
        java.lang.Object obj9 = strComparableSet1.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet17.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = strComparableSet17.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = strComparableSet17.iterator();
        boolean boolean24 = strComparableSet17.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean35 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.Object[] objArray40 = strComparableSet36.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean43 = strComparableSet36.remove((java.lang.Object) strComparableSet42);
        boolean boolean44 = strComparableSet31.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean45 = strComparableSet17.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean46 = strComparableSet1.remove((java.lang.Object) strComparableSet36);
        java.lang.Class<?> wildcardClass47 = strComparableSet36.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(strComparableItor22);
        org.junit.Assert.assertNotNull(strComparableItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator8 = strComparableSet1.spliterator();
        strComparableSet1.clear();
        java.lang.Object[] objArray10 = strComparableSet1.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean13 = strComparableSet1.equals((java.lang.Object) 100);
        boolean boolean14 = strComparableSet1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(strComparableSpliterator8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        int int7 = strComparableSet0.size();
        boolean boolean8 = strComparableSet0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration> genericDeclarationSet0 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean56 = strComparableSet49.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.lang.String[] strArray21 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray22 = strComparableSet2.toArray(strArray21);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor23 = strComparableSet2.iterator();
        java.lang.Class<?> wildcardClass24 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strComparableItor23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]> comparableSetArraySet2 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]>((int) (byte) 0, (float) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        boolean boolean43 = strComparableSet5.equals((java.lang.Object) boolean42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str45 = strComparableSet5.toString();
        java.lang.Object obj46 = strComparableSet5.clone();
        boolean boolean47 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean55 = strComparableSet48.remove((java.lang.Object) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean77 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean78 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[]" + "'", str45, "[]");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        boolean boolean4 = strComparableSet0.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet21.spliterator();
        java.lang.Object[] objArray85 = strComparableSet21.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableSet88.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean90 = strComparableSet88.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj91 = strComparableSet88.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet93 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean94 = strComparableSet88.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet93);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator95 = strComparableSet93.spliterator();
        boolean boolean96 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet93);
        java.lang.Object obj97 = strComparableSet93.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "[]");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator28 = strComparableSet27.spliterator();
        boolean boolean29 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object obj40 = null;
        boolean boolean41 = strComparableSet36.equals(obj40);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean44 = strComparableSet36.contains((java.lang.Object) 100);
        boolean boolean45 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator46 = strComparableSet36.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet36.stream();
        java.lang.Object obj48 = strComparableSet36.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet50.parallelStream();
        boolean boolean60 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean62 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableSet36.contains((java.lang.Object) "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator46);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet41.contains((java.lang.Object) strComparableSet47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray61 = new java.lang.reflect.GenericDeclaration[] { wildcardClass50, wildcardClass52, wildcardClass54, wildcardClass56, wildcardClass58, wildcardClass60 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray62 = strComparableSet41.toArray(genericDeclarationArray61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        boolean boolean69 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean70 = strComparableSet41.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean71 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet64.stream();
        java.lang.String str73 = strComparableSet64.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(genericDeclarationArray61);
        org.junit.Assert.assertNotNull(genericDeclarationArray62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[hi!, []]" + "'", str73, "[hi!, []]");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 3);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0, (float) '#');
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        int int60 = strComparableSet6.size();
        strComparableSet6.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        java.lang.Object obj92 = strComparableSet59.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "[]");
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.lang.Object[] objArray22 = strComparableSet16.toArray();
        boolean boolean23 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean25 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableSet1.iterator();
        java.lang.Class<?> wildcardClass4 = strComparableSet1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        int int89 = strComparableSet80.size();
        boolean boolean90 = strComparableSet0.contains((java.lang.Object) strComparableSet80);
        boolean boolean92 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj93 = strComparableSet80.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertEquals(obj93.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj93), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj93), "[[]]");
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet0 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.lang.Class<?> wildcardClass6 = strComparableSet2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        java.util.LinkedHashSet<java.io.Serializable> serializableSet2 = new java.util.LinkedHashSet<java.io.Serializable>((int) '#', (float) 1L);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet1.stream();
        java.lang.Class<?> wildcardClass37 = strComparableStream36.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.lang.String str8 = strComparableSet2.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet2.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[[]]" + "'", str8, "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        boolean boolean9 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[[[]]]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        boolean boolean39 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        strComparableSet13.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet13.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet13.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object[] objArray47 = strComparableSet45.toArray();
        int int48 = strComparableSet45.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean57 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet59.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj65 = strComparableSet64.clone();
        boolean boolean66 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator82 = strComparableSet69.spliterator();
        boolean boolean83 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.lang.Object[] objArray84 = strComparableSet59.toArray();
        boolean boolean85 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>[]> comparableCollectionArraySet0 = new java.util.LinkedHashSet<java.util.Collection<java.lang.Comparable<java.lang.String>>[]>();
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.lang.Object[] objArray63 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet70.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet70.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet70.iterator();
        boolean boolean77 = strComparableSet70.isEmpty();
        boolean boolean78 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean79 = strComparableSet70.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(strComparableItor75);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean21 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.lang.String str22 = strComparableSet9.toString();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet9.spliterator();
        boolean boolean24 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        boolean boolean22 = strComparableSet19.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean26 = strComparableSet24.equals((java.lang.Object) 1);
        boolean boolean27 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet24.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet24.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = strComparableSet24.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean32 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet24.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertNotNull(strComparableItor30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.lang.Class<?> wildcardClass40 = strComparableSet32.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '4', (float) ' ');
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet17 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean18 = strComparableSet0.equals((java.lang.Object) (short) 1);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean42 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet30.spliterator();
        boolean boolean44 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor45 = strComparableSet30.iterator();
        boolean boolean46 = strComparableSet0.equals((java.lang.Object) strComparableItor45);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet26.parallelStream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor49 = strComparableSet26.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(strComparableItor49);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet2 = new java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>>(0, (float) 10);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator16 = strComparableSet2.spliterator();
        strComparableSet2.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator16);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator13 = strComparableSet6.spliterator();
        strComparableSet6.clear();
        java.lang.Object obj15 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertNotNull(strComparableSpliterator13);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj2 = strComparableSet1.clone();
        int int3 = strComparableSet1.size();
        java.lang.Object obj4 = strComparableSet1.clone();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator5 = strComparableSet1.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator5);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        boolean boolean57 = strComparableSet19.equals((java.lang.Object) boolean56);
        boolean boolean58 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray63 = strComparableSet59.toArray();
        java.lang.Object[] objArray64 = strComparableSet59.toArray();
        int int65 = strComparableSet59.size();
        java.lang.String str66 = strComparableSet59.toString();
        boolean boolean67 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean69 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[]" + "'", str66, "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str15 = strComparableSet14.toString();
        boolean boolean16 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet23.stream();
        int int28 = strComparableSet23.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str31 = strComparableSet30.toString();
        boolean boolean33 = strComparableSet30.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray38 = strComparableSet34.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean54 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean55 = strComparableSet23.remove((java.lang.Object) strComparableSet30);
        java.lang.Object[] objArray56 = strComparableSet30.toArray();
        boolean boolean57 = strComparableSet2.remove((java.lang.Object) objArray56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = strComparableSet59.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream75 = strComparableSet72.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj78 = strComparableSet77.clone();
        boolean boolean79 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean80 = strComparableSet67.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet72.iterator();
        boolean boolean88 = strComparableSet59.equals((java.lang.Object) strComparableSet72);
        java.lang.Object[] objArray89 = strComparableSet72.toArray();
        boolean boolean90 = strComparableSet2.contains((java.lang.Object) strComparableSet72);
        boolean boolean92 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strComparableStream27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[]" + "'", str31, "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableItor60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(strComparableStream75);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator37 = strComparableSet24.spliterator();
        boolean boolean38 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor39 = strComparableSet24.iterator();
        boolean boolean40 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.lang.Object obj41 = null;
        boolean boolean42 = strComparableSet12.contains(obj41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray58 = strComparableSet42.toArray();
        boolean boolean60 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray62 = strComparableSet42.toArray();
        java.lang.Object[] objArray63 = strComparableSet42.toArray();
        java.lang.Object[] objArray64 = strComparableSet42.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[hi!]");
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean23 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet11.spliterator();
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet11.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean31 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet29.clear();
        boolean boolean33 = strComparableSet11.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        int int34 = strComparableSet29.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet10.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableStream36);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet7.toArray();
        java.lang.Object[] objArray10 = strComparableSet7.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        strComparableSet47.clear();
        boolean boolean64 = strComparableSet7.remove((java.lang.Object) strComparableSet47);
        java.lang.Object obj65 = strComparableSet7.clone();
        java.lang.Object obj66 = strComparableSet7.clone();
        strComparableSet7.clear();
        java.lang.Object[] objArray68 = strComparableSet7.toArray();
        boolean boolean69 = strComparableSet0.remove((java.lang.Object) objArray68);
        java.lang.Object obj70 = null;
        boolean boolean71 = strComparableSet0.remove(obj70);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc[][]> constantDescArraySet1 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc[][]>(3);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        boolean boolean9 = strComparableSet0.add((java.lang.Comparable<java.lang.String>) "[[[]]]");
        strComparableSet0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        int int13 = strComparableSet8.size();
        java.lang.Object[] objArray14 = strComparableSet8.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean19 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj20 = strComparableSet17.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str26 = strComparableSet25.toString();
        boolean boolean28 = strComparableSet25.equals((java.lang.Object) 10L);
        boolean boolean29 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream30 = strComparableSet25.parallelStream();
        boolean boolean31 = strComparableSet8.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strComparableStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.lang.Object[] objArray8 = strComparableSet1.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[hi!, []]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[hi!, []]");
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet1.stream();
        boolean boolean37 = strComparableSet1.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator38 = strComparableSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator38);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        java.lang.Object[] objArray57 = strComparableSet6.toArray();
        java.lang.String str58 = strComparableSet6.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet6.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet6.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertNotNull(strComparableItor59);
        org.junit.Assert.assertNotNull(strComparableStream60);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.lang.Object[] objArray39 = strComparableSet35.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = strComparableSet35.iterator();
        int int41 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet35.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet35.parallelStream();
        boolean boolean44 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet26.parallelStream();
        java.lang.String str46 = strComparableSet26.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        boolean boolean71 = strComparableSet68.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet73.equals((java.lang.Object) 1);
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object obj77 = null;
        boolean boolean78 = strComparableSet73.equals(obj77);
        boolean boolean79 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet53.spliterator();
        int int81 = strComparableSet53.size();
        java.lang.String str82 = strComparableSet53.toString();
        boolean boolean83 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[]" + "'", str46, "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[]" + "'", str82, "[]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray52 = strComparableSet36.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet36.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(strComparableStream53);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet10.spliterator();
        int int16 = strComparableSet10.size();
        boolean boolean17 = strComparableSet10.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator6 = strComparableSet5.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj44 = strComparableSet43.clone();
        boolean boolean45 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean46 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean57 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet53.contains((java.lang.Object) strComparableSet59);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator61 = strComparableSet59.spliterator();
        boolean boolean62 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.String str63 = strComparableSet13.toString();
        boolean boolean64 = strComparableSet5.contains((java.lang.Object) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object[] objArray69 = strComparableSet65.toArray();
        java.lang.Object[] objArray70 = strComparableSet65.toArray();
        int int71 = strComparableSet65.size();
        java.lang.String str72 = strComparableSet65.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableSet75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean77 = strComparableSet75.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet75.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean82 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.lang.Object[] objArray83 = strComparableSet81.toArray();
        int int84 = strComparableSet81.size();
        boolean boolean85 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str88 = strComparableSet87.toString();
        boolean boolean89 = strComparableSet75.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        java.lang.String str90 = strComparableSet75.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor91 = strComparableSet75.iterator();
        boolean boolean92 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean93 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean94 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(strComparableSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[]" + "'", str63, "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[]" + "'", str88, "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[]" + "'", str90, "[]");
        org.junit.Assert.assertNotNull(strComparableItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet13.parallelStream();
        boolean boolean18 = strComparableSet8.equals((java.lang.Object) strComparableStream17);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator19 = strComparableSet8.spliterator();
        boolean boolean20 = strComparableSet8.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray52 = strComparableSet36.toArray();
        int int53 = strComparableSet36.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.lang.String str25 = strComparableSet10.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet52.contains((java.lang.Object) strComparableSet58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray72 = new java.lang.reflect.GenericDeclaration[] { wildcardClass61, wildcardClass63, wildcardClass65, wildcardClass67, wildcardClass69, wildcardClass71 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray73 = strComparableSet52.toArray(genericDeclarationArray72);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet52.parallelStream();
        java.lang.String str75 = strComparableSet52.toString();
        boolean boolean76 = strComparableSet10.contains((java.lang.Object) strComparableSet52);
        java.lang.String str77 = strComparableSet10.toString();
        int int78 = strComparableSet10.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(genericDeclarationArray72);
        org.junit.Assert.assertNotNull(genericDeclarationArray73);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[]" + "'", str77, "[]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        strComparableSet0.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        boolean boolean8 = strComparableSet1.isEmpty();
        int int9 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet0 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[]>();
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.lang.String str7 = strComparableSet0.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet10.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet16.toArray();
        int int19 = strComparableSet16.size();
        boolean boolean20 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str23 = strComparableSet22.toString();
        boolean boolean24 = strComparableSet10.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.String str25 = strComparableSet10.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = strComparableSet10.iterator();
        boolean boolean27 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.lang.Object[] objArray32 = strComparableSet28.toArray();
        boolean boolean33 = strComparableSet10.contains((java.lang.Object) strComparableSet28);
        java.lang.Object obj34 = strComparableSet10.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[]" + "'", str23, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertNotNull(strComparableItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet0.parallelStream();
        java.lang.String str7 = strComparableSet0.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) '4');
        boolean boolean11 = strComparableSet0.contains((java.lang.Object) strComparableSet10);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet0.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet15.toArray();
        java.lang.Object[] objArray18 = strComparableSet15.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray54 = strComparableSet50.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet55.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet60.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj66 = strComparableSet65.clone();
        boolean boolean67 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean68 = strComparableSet55.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean69 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean70 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        strComparableSet55.clear();
        boolean boolean72 = strComparableSet15.remove((java.lang.Object) strComparableSet55);
        java.lang.Object obj73 = strComparableSet15.clone();
        java.lang.Object obj74 = strComparableSet15.clone();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = strComparableSet0.remove((java.lang.Object) wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray27 = strComparableSet22.toArray(typeArray26);
        java.lang.Object obj28 = strComparableSet22.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet22.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet50 = new java.util.LinkedHashSet<java.lang.Class<?>>();
        boolean boolean51 = strComparableSet36.remove((java.lang.Object) wildcardClassSet50);
        java.lang.String str52 = strComparableSet36.toString();
        java.lang.String str53 = strComparableSet36.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator55 = strComparableSet54.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet76.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        boolean boolean82 = strComparableSet79.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean86 = strComparableSet84.equals((java.lang.Object) 1);
        boolean boolean87 = strComparableSet79.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean88 = strComparableSet76.remove((java.lang.Object) strComparableSet84);
        boolean boolean89 = strComparableSet84.isEmpty();
        boolean boolean90 = strComparableSet54.remove((java.lang.Object) strComparableSet84);
        boolean boolean91 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean92 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.lang.Object[] objArray93 = strComparableSet84.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[]" + "'", str52, "[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[]" + "'", str53, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.lang.Object[] objArray73 = strComparableSet65.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet65.stream();
        java.lang.Object obj75 = strComparableSet65.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[[]]");
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>>((int) (byte) 0);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet29.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj35 = strComparableSet34.clone();
        boolean boolean36 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean37 = strComparableSet24.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray41 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray42 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray41;
        strComparableCollectionArray42[0] = strComparableSet15;
        strComparableCollectionArray42[1] = strComparableSet34;
        strComparableCollectionArray42[2] = strComparableSet39;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray49 = strComparableSet0.toArray(strComparableCollectionArray42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean52 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        strComparableSet51.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(collectionArray41);
        org.junit.Assert.assertNotNull(strComparableCollectionArray42);
        org.junit.Assert.assertNotNull(strComparableCollectionArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet4.equals((java.lang.Object) 1);
        java.lang.Object obj7 = null;
        boolean boolean8 = strComparableSet4.equals(obj7);
        boolean boolean9 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor> typeDescriptorSet0 = new java.util.LinkedHashSet<java.lang.invoke.TypeDescriptor>();
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet29.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj35 = strComparableSet34.clone();
        boolean boolean36 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean37 = strComparableSet24.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray41 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray42 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray41;
        strComparableCollectionArray42[0] = strComparableSet15;
        strComparableCollectionArray42[1] = strComparableSet34;
        strComparableCollectionArray42[2] = strComparableSet39;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray49 = strComparableSet0.toArray(strComparableCollectionArray42);
        boolean boolean50 = strComparableSet0.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean74 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet62.spliterator();
        boolean boolean76 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet62.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet80.clear();
        boolean boolean84 = strComparableSet62.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean85 = strComparableSet0.contains((java.lang.Object) strComparableSet62);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet0.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(collectionArray41);
        org.junit.Assert.assertNotNull(strComparableCollectionArray42);
        org.junit.Assert.assertNotNull(strComparableCollectionArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet1.toArray();
        int int8 = strComparableSet1.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        boolean boolean54 = strComparableSet51.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean58 = strComparableSet56.equals((java.lang.Object) 1);
        boolean boolean59 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.Object[] objArray65 = strComparableSet61.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean80 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean81 = strComparableSet56.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str84 = strComparableSet83.toString();
        boolean boolean85 = strComparableSet56.equals((java.lang.Object) strComparableSet83);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator86 = strComparableSet83.spliterator();
        boolean boolean87 = strComparableSet20.equals((java.lang.Object) strComparableSet83);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream89 = strComparableSet83.parallelStream();
        boolean boolean90 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[hi!]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[]" + "'", str84, "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strComparableStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet6.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        boolean boolean81 = strComparableSet78.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean90 = strComparableSet83.contains((java.lang.Object) strComparableSet89);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet89.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet89.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet94 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator95 = strComparableSet94.spliterator();
        boolean boolean96 = strComparableSet89.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet94);
        boolean boolean97 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor98 = strComparableSet89.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
        org.junit.Assert.assertNotNull(strComparableStream92);
        org.junit.Assert.assertNotNull(strComparableSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(strComparableItor98);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Class<?> wildcardClass7 = strComparableSet1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.lang.String str58 = strComparableSet26.toString();
        int int59 = strComparableSet26.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor60 = strComparableSet26.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(strComparableItor60);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '#');
        boolean boolean3 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean59 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object obj90 = null;
        boolean boolean91 = strComparableSet86.equals(obj90);
        boolean boolean92 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator93 = strComparableSet66.spliterator();
        boolean boolean94 = strComparableSet58.contains((java.lang.Object) strComparableSpliterator93);
        int int95 = strComparableSet58.size();
        java.lang.Object obj96 = strComparableSet58.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "[]");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet52.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet59.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.stream();
        boolean boolean75 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean76 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean77 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.lang.Object[] objArray39 = strComparableSet35.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor40 = strComparableSet35.iterator();
        int int41 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream42 = strComparableSet35.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet35.parallelStream();
        boolean boolean44 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet26.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet26.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(strComparableStream42);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(strComparableStream46);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]> comparableSetArraySet1 = new java.util.LinkedHashSet<java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>[]>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet2.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean31 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet58.contains((java.lang.Object) strComparableSet64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray78 = new java.lang.reflect.GenericDeclaration[] { wildcardClass67, wildcardClass69, wildcardClass71, wildcardClass73, wildcardClass75, wildcardClass77 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray79 = strComparableSet58.toArray(genericDeclarationArray78);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet81.parallelStream();
        boolean boolean86 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean87 = strComparableSet58.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean88 = strComparableSet19.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean89 = strComparableSet2.contains((java.lang.Object) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream90 = strComparableSet2.parallelStream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor91 = strComparableSet2.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(genericDeclarationArray78);
        org.junit.Assert.assertNotNull(genericDeclarationArray79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableStream90);
        org.junit.Assert.assertNotNull(strComparableItor91);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object[] objArray13 = strComparableSet9.toArray();
        java.lang.Object[] objArray14 = strComparableSet9.toArray();
        int int15 = strComparableSet9.size();
        boolean boolean16 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.lang.Object[] objArray22 = strComparableSet17.toArray();
        int int23 = strComparableSet17.size();
        boolean boolean24 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean28 = strComparableSet26.contains((java.lang.Object) 100L);
        boolean boolean30 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = strComparableSet26.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj76 = strComparableSet75.clone();
        boolean boolean77 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        boolean boolean83 = strComparableSet80.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet85.equals((java.lang.Object) 1);
        boolean boolean88 = strComparableSet80.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.lang.Object obj89 = null;
        boolean boolean90 = strComparableSet85.equals(obj89);
        boolean boolean91 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator92 = strComparableSet65.spliterator();
        int int93 = strComparableSet65.size();
        boolean boolean94 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean95 = strComparableSet17.equals((java.lang.Object) boolean94);
        boolean boolean96 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream97 = strComparableSet17.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strComparableItor31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(strComparableStream97);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet6.stream();
        boolean boolean32 = strComparableSet6.isEmpty();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strComparableItor33);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.lang.Object[] objArray19 = strComparableSet14.toArray();
        int int20 = strComparableSet14.size();
        boolean boolean21 = strComparableSet10.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet10.parallelStream();
        boolean boolean23 = strComparableSet8.contains((java.lang.Object) strComparableStream22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet8.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableStream24);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) 1);
        java.lang.Object obj3 = strComparableSet2.clone();
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "[]");
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) -1, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) 'a', (float) 3);
        java.lang.Object[] objArray3 = strComparableSet2.toArray();
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        strComparableSet56.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean67 = strComparableSet6.isEmpty();
        boolean boolean69 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[[], [[]]]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        java.util.LinkedHashSet<java.lang.CharSequence> charSequenceSet0 = new java.util.LinkedHashSet<java.lang.CharSequence>();
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        java.util.LinkedHashSet<java.lang.constant.Constable[][]> constableArraySet0 = new java.util.LinkedHashSet<java.lang.constant.Constable[][]>();
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet22.parallelStream();
        java.lang.Object obj27 = strComparableSet22.clone();
        java.lang.Class<?> wildcardClass28 = strComparableSet22.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet6.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet46.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj52 = strComparableSet51.clone();
        boolean boolean53 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        boolean boolean79 = strComparableSet76.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet81.equals((java.lang.Object) 1);
        boolean boolean84 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean85 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet81.contains((java.lang.Object) strComparableSet87);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator89 = strComparableSet87.spliterator();
        boolean boolean90 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet91 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableSet41.iterator();
        boolean boolean93 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        int int94 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream95 = strComparableSet41.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strComparableStream49);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(strComparableStream95);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        boolean boolean56 = strComparableSet26.contains((java.lang.Object) '#');
        strComparableSet26.clear();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet26.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object obj69 = null;
        boolean boolean70 = strComparableSet65.equals(obj69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int84 = strComparableSet82.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet82.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj88 = strComparableSet87.clone();
        boolean boolean89 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean90 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean91 = strComparableSet65.equals((java.lang.Object) strComparableSet82);
        strComparableSet65.clear();
        boolean boolean93 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Comparable<java.lang.String> strComparable94 = null;
        boolean boolean95 = strComparableSet65.add(strComparable94);
        java.lang.Cloneable[] cloneableArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Cloneable[] cloneableArray97 = strComparableSet65.toArray(cloneableArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strComparableStream85);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableSet1.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet3.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        boolean boolean17 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator18 = strComparableSet5.spliterator();
        java.lang.Object obj19 = strComparableSet5.clone();
        java.lang.String[] strArray24 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray25 = strComparableSet5.toArray(strArray24);
        java.lang.Comparable<java.lang.String>[] strComparableArray26 = strComparableSet1.toArray((java.lang.Comparable<java.lang.String>[]) strArray24);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strComparableArray26);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet76.parallelStream();
        java.lang.Object[] objArray80 = strComparableSet76.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet76.iterator();
        int int82 = strComparableSet76.size();
        boolean boolean83 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.lang.Object obj84 = strComparableSet76.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[hi!]");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        java.util.LinkedHashSet<java.lang.Cloneable> cloneableSet1 = new java.util.LinkedHashSet<java.lang.Cloneable>(1);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean11 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet6.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet6.spliterator();
        java.lang.Object obj69 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet6.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet6.spliterator();
        java.lang.Object obj59 = null;
        boolean boolean60 = strComparableSet6.remove(obj59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet58.contains((java.lang.Object) strComparableSet64);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator66 = strComparableSet64.spliterator();
        boolean boolean67 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.lang.String str68 = strComparableSet18.toString();
        boolean boolean70 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList72 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableList72.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableList72.stream();
        boolean boolean75 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList72);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj78 = strComparableSet77.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean83 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj84 = strComparableSet81.clone();
        java.lang.Object[] objArray85 = strComparableSet81.toArray();
        boolean boolean86 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean88 = strComparableSet87.isEmpty();
        boolean boolean89 = strComparableSet77.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean90 = strComparableSet18.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean91 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[]" + "'", str68, "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[[]]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        boolean boolean58 = strComparableSet52.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.lang.Object[] objArray22 = strComparableSet16.toArray();
        boolean boolean23 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet44.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet44.remove((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet44.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean62 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet60.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.Object[] objArray68 = strComparableSet66.toArray();
        int int69 = strComparableSet66.size();
        boolean boolean70 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str73 = strComparableSet72.toString();
        boolean boolean74 = strComparableSet60.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet44.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet60.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet60.parallelStream();
        boolean boolean78 = strComparableSet16.equals((java.lang.Object) strComparableStream77);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[]" + "'", str73, "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.lang.Object[] objArray12 = strComparableSet6.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean17 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet15.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.Object[] objArray23 = strComparableSet21.toArray();
        int int24 = strComparableSet21.size();
        boolean boolean25 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        int int26 = strComparableSet21.size();
        boolean boolean27 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.constant.Constable[][] constableArray28 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][] constableArray29 = new java.lang.constant.Constable[][] {};
        java.lang.constant.Constable[][][] constableArray30 = new java.lang.constant.Constable[][][] { constableArray28, constableArray29 };
        java.lang.constant.Constable[][][] constableArray31 = strComparableSet21.toArray(constableArray30);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(constableArray28);
        org.junit.Assert.assertNotNull(constableArray29);
        org.junit.Assert.assertNotNull(constableArray30);
        org.junit.Assert.assertNotNull(constableArray31);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet6.parallelStream();
        java.lang.Class<?> wildcardClass68 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet6.stream();
        boolean boolean33 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSet6.clear();
        java.lang.Object[] objArray35 = strComparableSet6.toArray();
        java.lang.Object[] objArray36 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        boolean boolean61 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = strComparableSet57.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strComparableItor62);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet67.iterator();
        boolean boolean77 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "[[]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableItor75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean28 = strComparableSet13.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        boolean boolean53 = strComparableSet50.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet55.equals((java.lang.Object) 1);
        boolean boolean58 = strComparableSet50.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean59 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet55.contains((java.lang.Object) strComparableSet61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray75 = new java.lang.reflect.GenericDeclaration[] { wildcardClass64, wildcardClass66, wildcardClass68, wildcardClass70, wildcardClass72, wildcardClass74 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray76 = strComparableSet55.toArray(genericDeclarationArray75);
        java.lang.Object[] objArray77 = strComparableSet55.toArray();
        boolean boolean78 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet55.stream();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(genericDeclarationArray75);
        org.junit.Assert.assertNotNull(genericDeclarationArray76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strComparableStream79);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        strComparableSet10.clear();
        java.lang.Object[] objArray21 = strComparableSet10.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.lang.Object[] objArray31 = strComparableSet27.toArray();
        java.lang.Object[] objArray32 = strComparableSet27.toArray();
        int int33 = strComparableSet27.size();
        boolean boolean34 = strComparableSet23.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet46.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj52 = strComparableSet51.clone();
        boolean boolean53 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        boolean boolean79 = strComparableSet76.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet81.equals((java.lang.Object) 1);
        boolean boolean84 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean85 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet81.contains((java.lang.Object) strComparableSet87);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator89 = strComparableSet87.spliterator();
        boolean boolean90 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        java.lang.String str91 = strComparableSet41.toString();
        boolean boolean93 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet94 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean95 = strComparableSet27.contains((java.lang.Object) strComparableSet94);
        java.lang.String[][] strArray96 = new java.lang.String[][] {};
        java.lang.String[][] strArray97 = strComparableSet27.toArray(strArray96);
        java.lang.CharSequence[][] charSequenceArray98 = strComparableSet10.toArray((java.lang.CharSequence[][]) strArray97);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray32), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strComparableStream49);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[]" + "'", str91, "[]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertNotNull(charSequenceArray98);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator8 = strComparableSet1.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator10 = strComparableSet9.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet57.contains((java.lang.Object) strComparableSet63);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator65 = strComparableSet63.spliterator();
        boolean boolean66 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.String str67 = strComparableSet17.toString();
        boolean boolean68 = strComparableSet9.contains((java.lang.Object) strComparableSet17);
        boolean boolean69 = strComparableSet1.remove((java.lang.Object) strComparableSet17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(strComparableSpliterator8);
        org.junit.Assert.assertNotNull(strComparableSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet6.spliterator();
        java.lang.Object[] objArray35 = strComparableSet6.toArray();
        boolean boolean37 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet59.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strComparableStream60);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        int int56 = strComparableSet6.size();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet6.parallelStream();
        java.lang.Object[] objArray60 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[[]]");
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.AbstractSet<java.lang.Comparable<java.lang.String>>>(2);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean34 = strComparableSet26.remove((java.lang.Object) (-1.0f));
        java.lang.Object[] objArray35 = strComparableSet26.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[hi!]");
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        boolean boolean67 = strComparableSet64.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet69.equals((java.lang.Object) 1);
        boolean boolean72 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator74 = strComparableSet61.spliterator();
        java.lang.Object obj75 = strComparableSet61.clone();
        java.lang.String[] strArray80 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray81 = strComparableSet61.toArray(strArray80);
        java.lang.CharSequence[] charSequenceArray82 = strComparableSet26.toArray((java.lang.CharSequence[]) strArray81);
        java.lang.Class<?> wildcardClass83 = strComparableSet26.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(charSequenceArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        java.lang.String str58 = strComparableSet52.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[[hi!, []]]" + "'", str58, "[[hi!, []]]");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        java.util.LinkedHashSet<java.lang.reflect.Type[]> typeArraySet0 = new java.util.LinkedHashSet<java.lang.reflect.Type[]>();
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0);
        boolean boolean11 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) 1);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object obj20 = null;
        boolean boolean21 = strComparableSet16.equals(obj20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean24 = strComparableSet16.contains((java.lang.Object) 100);
        boolean boolean25 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean57 = strComparableSet52.isEmpty();
        boolean boolean58 = strComparableSet16.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean62 = strComparableSet60.contains((java.lang.Object) 100L);
        boolean boolean63 = strComparableSet52.contains((java.lang.Object) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object obj74 = null;
        boolean boolean75 = strComparableSet70.equals(obj74);
        java.lang.Object[] objArray76 = strComparableSet70.toArray();
        boolean boolean77 = strComparableSet60.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor78 = strComparableSet70.iterator();
        boolean boolean79 = strComparableSet2.equals((java.lang.Object) strComparableSet70);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(strComparableItor78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object obj52 = strComparableSet20.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str75 = strComparableSet74.toString();
        boolean boolean76 = strComparableSet47.equals((java.lang.Object) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet74.spliterator();
        boolean boolean78 = strComparableSet11.equals((java.lang.Object) strComparableSet74);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        strComparableSet79.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream81 = strComparableSet79.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strComparableStream81);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 1, (float) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean5 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet4);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet7.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj13 = strComparableSet12.clone();
        boolean boolean14 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean15 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray43 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray44 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray43;
        strComparableCollectionArray44[0] = strComparableSet17;
        strComparableCollectionArray44[1] = strComparableSet36;
        strComparableCollectionArray44[2] = strComparableSet41;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray51 = strComparableSet2.toArray(strComparableCollectionArray44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean54 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean55 = strComparableSet1.contains((java.lang.Object) boolean54);
        java.lang.Object obj56 = strComparableSet1.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet58.iterator();
        java.util.Iterator[] iteratorArray61 = new java.util.Iterator[1];
        @SuppressWarnings("unchecked")
        java.util.Iterator<java.lang.Comparable<java.lang.String>>[] strComparableItorArray62 = (java.util.Iterator<java.lang.Comparable<java.lang.String>>[]) iteratorArray61;
        strComparableItorArray62[0] = strComparableItor59;
        java.util.Iterator<java.lang.Comparable<java.lang.String>>[] strComparableItorArray65 = strComparableSet1.toArray(strComparableItorArray62);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(collectionArray43);
        org.junit.Assert.assertNotNull(strComparableCollectionArray44);
        org.junit.Assert.assertNotNull(strComparableCollectionArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertNotNull(strComparableItor59);
        org.junit.Assert.assertNotNull(iteratorArray61);
        org.junit.Assert.assertNotNull(strComparableItorArray62);
        org.junit.Assert.assertNotNull(strComparableItorArray65);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.lang.Object[] objArray39 = strComparableSet37.toArray();
        int int40 = strComparableSet37.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean65 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean66 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean67 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        int int68 = strComparableSet51.size();
        java.lang.Object obj69 = strComparableSet51.clone();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = strComparableSet51.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
        org.junit.Assert.assertNotNull(strComparableItor70);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj2 = strComparableSet1.clone();
        int int3 = strComparableSet1.size();
        java.lang.Object obj4 = strComparableSet1.clone();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator5 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet12.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.lang.constant.Constable[] constableArray70 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray71 = strComparableSet43.toArray(constableArray70);
        boolean boolean72 = strComparableSet12.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean78 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj79 = strComparableSet76.clone();
        java.lang.Object[] objArray80 = strComparableSet76.toArray();
        java.lang.Object[] objArray81 = strComparableSet76.toArray();
        boolean boolean82 = strComparableSet12.equals((java.lang.Object) strComparableSet76);
        boolean boolean83 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean85 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(constableArray70);
        org.junit.Assert.assertNotNull(constableArray71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[[]]");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[[]]");
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray81), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet6.spliterator();
        boolean boolean8 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean40 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.lang.Object[] objArray45 = strComparableSet41.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet51.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj57 = strComparableSet56.clone();
        boolean boolean58 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean59 = strComparableSet46.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean61 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.lang.constant.Constable[] constableArray63 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray64 = strComparableSet36.toArray(constableArray63);
        boolean boolean66 = strComparableSet36.contains((java.lang.Object) '#');
        strComparableSet36.clear();
        java.lang.String str68 = strComparableSet36.toString();
        boolean boolean69 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.String str70 = strComparableSet0.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strComparableStream54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(constableArray63);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[]" + "'", str68, "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean28 = strComparableSet23.isEmpty();
        boolean boolean29 = strComparableSet23.isEmpty();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        int int13 = strComparableSet8.size();
        int int14 = strComparableSet8.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean28 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet26.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.lang.Object[] objArray34 = strComparableSet32.toArray();
        int int35 = strComparableSet32.size();
        boolean boolean36 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str39 = strComparableSet38.toString();
        boolean boolean40 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.String str41 = strComparableSet26.toString();
        boolean boolean42 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet26.clear();
        java.lang.Object obj44 = strComparableSet26.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[]" + "'", str39, "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[]" + "'", str41, "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj2 = strComparableSet1.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        boolean boolean10 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean12 = strComparableSet11.isEmpty();
        boolean boolean13 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean17 = strComparableSet15.contains((java.lang.Object) 100L);
        boolean boolean19 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet15.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet15.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean26 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj27 = strComparableSet24.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet32.parallelStream();
        boolean boolean41 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean42 = strComparableSet15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean43 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertEquals(obj2.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj2), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj2), "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet57.parallelStream();
        boolean boolean72 = strComparableSet52.contains((java.lang.Object) strComparableStream71);
        java.lang.Object[] objArray73 = strComparableSet52.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean17 = strComparableSet15.contains((java.lang.Object) 100L);
        boolean boolean19 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet15.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet15.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet15.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet25.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object[] objArray33 = strComparableSet31.toArray();
        int int34 = strComparableSet31.size();
        boolean boolean35 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str38 = strComparableSet37.toString();
        boolean boolean39 = strComparableSet25.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean41 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object obj52 = null;
        boolean boolean53 = strComparableSet48.equals(obj52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean74 = strComparableSet48.equals((java.lang.Object) strComparableSet65);
        boolean boolean75 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet1.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet79.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj85 = strComparableSet84.clone();
        boolean boolean86 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.lang.Object obj87 = null;
        boolean boolean88 = strComparableSet79.contains(obj87);
        boolean boolean89 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        boolean boolean57 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        java.lang.Object[] objArray61 = strComparableSet60.toArray();
        java.lang.Object[] objArray62 = strComparableSet60.toArray();
        boolean boolean63 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet23.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strComparableStream33);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        java.lang.String str5 = strComparableSet1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "[]" + "'", str5, "[]");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray58 = strComparableSet42.toArray();
        boolean boolean60 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray62 = strComparableSet42.toArray();
        java.lang.Object[] objArray63 = strComparableSet42.toArray();
        strComparableSet42.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[hi!]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[hi!]");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean14 = strComparableSet12.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.String str47 = strComparableSet12.toString();
        boolean boolean48 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet5.stream();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strComparableStream49);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj39 = strComparableSet36.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str45 = strComparableSet44.toString();
        boolean boolean47 = strComparableSet44.equals((java.lang.Object) 10L);
        boolean boolean48 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean49 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator50 = strComparableSet44.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[]" + "'", str45, "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator50);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        strComparableSet13.clear();
        java.lang.Object obj15 = strComparableSet13.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableSet26.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean81 = strComparableSet79.equals((java.lang.Object) 1);
        boolean boolean82 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet79.parallelStream();
        boolean boolean84 = strComparableSet26.remove((java.lang.Object) strComparableSet79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean72 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj73 = strComparableSet70.clone();
        java.lang.Object[] objArray74 = strComparableSet70.toArray();
        java.lang.Object[] objArray75 = strComparableSet70.toArray();
        boolean boolean76 = strComparableSet6.equals((java.lang.Object) strComparableSet70);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean83 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj84 = strComparableSet81.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str90 = strComparableSet89.toString();
        boolean boolean92 = strComparableSet89.equals((java.lang.Object) 10L);
        boolean boolean93 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        boolean boolean94 = strComparableSet78.remove((java.lang.Object) strComparableSet89);
        java.lang.Object obj95 = strComparableSet78.clone();
        boolean boolean96 = strComparableSet70.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[[]]");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[[]]");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[]" + "'", str90, "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean13 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj14 = strComparableSet11.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet11.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object obj26 = null;
        boolean boolean27 = strComparableSet22.equals(obj26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean30 = strComparableSet22.contains((java.lang.Object) 100);
        boolean boolean31 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        strComparableSet11.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = strComparableSet11.iterator();
        boolean boolean34 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor38 = strComparableSet36.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean43 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj44 = strComparableSet41.clone();
        java.lang.Object[] objArray45 = strComparableSet41.toArray();
        boolean boolean46 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean48 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.lang.Object[] objArray53 = strComparableSet49.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet55.spliterator();
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator58 = strComparableSet49.spliterator();
        boolean boolean59 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean60 = strComparableSet36.contains((java.lang.Object) boolean59);
        boolean boolean61 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strComparableItor33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strComparableItor38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[[]]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.lang.Object[] objArray39 = strComparableSet37.toArray();
        int int40 = strComparableSet37.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean65 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean66 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean67 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean69 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strComparableStream70);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean17 = strComparableSet15.contains((java.lang.Object) 100L);
        boolean boolean19 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet15.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet15.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet15.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet25.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object[] objArray33 = strComparableSet31.toArray();
        int int34 = strComparableSet31.size();
        boolean boolean35 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str38 = strComparableSet37.toString();
        boolean boolean39 = strComparableSet25.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean41 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object obj52 = null;
        boolean boolean53 = strComparableSet48.equals(obj52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean74 = strComparableSet48.equals((java.lang.Object) strComparableSet65);
        boolean boolean75 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet1.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableItor76);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.lang.String str7 = strComparableSet0.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet10.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet16.toArray();
        int int19 = strComparableSet16.size();
        boolean boolean20 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str23 = strComparableSet22.toString();
        boolean boolean24 = strComparableSet10.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.String str25 = strComparableSet10.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor26 = strComparableSet10.iterator();
        boolean boolean27 = strComparableSet0.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean28 = strComparableSet0.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object[] objArray33 = strComparableSet29.toArray();
        java.lang.Object[] objArray34 = strComparableSet29.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet29.parallelStream();
        boolean boolean36 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[]" + "'", str23, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertNotNull(strComparableItor26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream51 = strComparableSet21.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strComparableStream51);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.constant.Constable[]> constableArraySet2 = new java.util.LinkedHashSet<java.lang.constant.Constable[]>(0, 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean18 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj19 = strComparableSet16.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str25 = strComparableSet24.toString();
        boolean boolean27 = strComparableSet24.equals((java.lang.Object) 10L);
        boolean boolean28 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator29 = strComparableSet24.spliterator();
        boolean boolean30 = strComparableSet0.equals((java.lang.Object) strComparableSet24);
        java.lang.Object obj31 = strComparableSet24.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.lang.Object obj14 = strComparableSet1.clone();
        int int15 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[hi!]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100);
        boolean boolean63 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean76 = strComparableSet65.contains((java.lang.Object) 100);
        boolean boolean77 = strComparableSet65.isEmpty();
        java.lang.Object obj78 = strComparableSet65.clone();
        java.lang.Object obj79 = strComparableSet65.clone();
        boolean boolean80 = strComparableSet62.equals((java.lang.Object) strComparableSet65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertEquals(obj78.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj78), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj78), "[hi!]");
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        java.util.LinkedHashSet<java.util.Iterator<java.lang.Comparable<java.lang.String>>[]> comparableItorArraySet0 = new java.util.LinkedHashSet<java.util.Iterator<java.lang.Comparable<java.lang.String>>[]>();
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3, (float) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        java.util.LinkedHashSet<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>> strComparableCollectionSet0 = new java.util.LinkedHashSet<java.util.AbstractCollection<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Class<?> wildcardClass60 = strComparableSet59.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator6 = strComparableSet5.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean11 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj12 = strComparableSet9.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet9.parallelStream();
        boolean boolean14 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        boolean boolean15 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet6.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        boolean boolean81 = strComparableSet78.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean88 = strComparableSet6.equals((java.lang.Object) strComparableSet83);
        java.lang.Object[] objArray89 = strComparableSet83.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean14 = strComparableSet6.contains((java.lang.Object) 100);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.Object[] objArray19 = strComparableSet17.toArray();
        java.lang.Object[] objArray20 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        strComparableSet57.clear();
        boolean boolean74 = strComparableSet17.remove((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet76.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj83 = strComparableSet80.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet80.parallelStream();
        boolean boolean85 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean86 = strComparableSet57.remove((java.lang.Object) strComparableSet80);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor87 = strComparableSet80.iterator();
        java.lang.Object[] objArray88 = strComparableSet80.toArray();
        boolean boolean89 = strComparableSet6.contains((java.lang.Object) strComparableSet80);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream90 = strComparableSet80.parallelStream();
        java.lang.Object obj91 = strComparableSet80.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(objArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray20), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray20), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(strComparableItor87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableStream90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[[]]");
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.util.Spliterator<java.lang.Comparable<java.lang.String>>> strComparableSpliteratorSet2 = new java.util.LinkedHashSet<java.util.Spliterator<java.lang.Comparable<java.lang.String>>>(3, (float) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet1 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>(1);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet49.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet60.stream();
        boolean boolean70 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet49.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableStream71);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        boolean boolean11 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator13 = strComparableSet12.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        boolean boolean18 = strComparableSet15.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet20.equals((java.lang.Object) 1);
        boolean boolean23 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet25.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj31 = strComparableSet30.clone();
        boolean boolean32 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean33 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean64 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet60.contains((java.lang.Object) strComparableSet66);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator68 = strComparableSet66.spliterator();
        boolean boolean69 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.String str70 = strComparableSet20.toString();
        boolean boolean71 = strComparableSet12.contains((java.lang.Object) strComparableSet20);
        boolean boolean72 = strComparableSet1.remove((java.lang.Object) strComparableSet12);
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[]" + "'", str70, "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet21.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean27 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj28 = strComparableSet25.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet25.parallelStream();
        boolean boolean30 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean31 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet35.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet41.toArray();
        int int44 = strComparableSet41.size();
        boolean boolean45 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor47 = strComparableSet41.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet41.parallelStream();
        java.lang.String str49 = strComparableSet41.toString();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList56 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean58 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean59 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean60 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean61 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean62 = strComparableList56.add((java.lang.Comparable<java.lang.String>) "[null]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        boolean boolean64 = strComparableSet41.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList56);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = strComparableSet41.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strComparableItor47);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableItor65);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet6.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean62 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet60.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.lang.Object[] objArray68 = strComparableSet66.toArray();
        int int69 = strComparableSet66.size();
        boolean boolean70 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean71 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '4', (float) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.lang.Object obj13 = null;
        boolean boolean14 = strComparableSet9.equals(obj13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean35 = strComparableSet9.equals((java.lang.Object) strComparableSet26);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet26.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet26.parallelStream();
        boolean boolean38 = strComparableSet2.remove((java.lang.Object) strComparableStream37);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) '4');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream3 = strComparableSet2.stream();
        int int4 = strComparableSet2.size();
        org.junit.Assert.assertNotNull(strComparableStream3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet13.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertNotNull(strComparableStream14);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet47.contains((java.lang.Object) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.lang.Object[] objArray60 = strComparableSet56.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = strComparableSet56.iterator();
        int int62 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet56.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet56.parallelStream();
        boolean boolean65 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor67 = strComparableSet6.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strComparableItor67);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet52.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator57 = strComparableSet52.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean62 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj63 = strComparableSet60.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet68.parallelStream();
        boolean boolean77 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        strComparableSet68.clear();
        java.lang.Object[] objArray79 = strComparableSet68.toArray();
        boolean boolean80 = strComparableSet52.contains((java.lang.Object) strComparableSet68);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.lang.Object obj16 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet25.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = strComparableSet25.iterator();
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        boolean boolean35 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray36 = new java.lang.reflect.AnnotatedElement[][] {};
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray37 = strComparableSet34.toArray(annotatedElementArray36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(strComparableItor30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotatedElementArray36);
        org.junit.Assert.assertNotNull(annotatedElementArray37);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator12 = strComparableSet6.spliterator();
        strComparableSet6.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet19.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj25 = strComparableSet24.clone();
        boolean boolean26 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean27 = strComparableSet14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream28 = strComparableSet14.parallelStream();
        boolean boolean30 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        boolean boolean31 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strComparableStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[[[]]]");
        boolean boolean63 = strComparableSet21.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.lang.Object[] objArray66 = strComparableSet64.toArray();
        int int67 = strComparableSet64.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean72 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        strComparableSet64.clear();
        int int74 = strComparableSet64.size();
        java.lang.Object[] objArray75 = strComparableSet64.toArray();
        boolean boolean76 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(10);
        int int79 = strComparableSet78.size();
        java.lang.String str80 = strComparableSet78.toString();
        boolean boolean81 = strComparableSet2.remove((java.lang.Object) str80);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[]" + "'", str80, "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet6.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet46.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj52 = strComparableSet51.clone();
        boolean boolean53 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        boolean boolean79 = strComparableSet76.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet81.equals((java.lang.Object) 1);
        boolean boolean84 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean85 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet81.contains((java.lang.Object) strComparableSet87);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator89 = strComparableSet87.spliterator();
        boolean boolean90 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet91 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor92 = strComparableSet41.iterator();
        boolean boolean93 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        strComparableSet41.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strComparableStream49);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object obj64 = null;
        boolean boolean65 = strComparableSet60.equals(obj64);
        boolean boolean66 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet40.spliterator();
        int int68 = strComparableSet40.size();
        boolean boolean69 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        int int70 = strComparableSet1.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator71 = strComparableSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableSpliterator71);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.lang.String str48 = strComparableSet26.toString();
        boolean boolean50 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "");
        java.lang.String str51 = strComparableSet26.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[]" + "'", str51, "[]");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean23 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet11.spliterator();
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean59 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj60 = strComparableSet57.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str66 = strComparableSet65.toString();
        boolean boolean68 = strComparableSet65.equals((java.lang.Object) 10L);
        boolean boolean69 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj77 = strComparableSet76.clone();
        boolean boolean78 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean79 = strComparableSet65.contains((java.lang.Object) strComparableSet76);
        java.lang.String str80 = strComparableSet65.toString();
        boolean boolean81 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[]" + "'", str66, "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[]" + "'", str80, "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet30.contains((java.lang.Object) strComparableSet36);
        boolean boolean38 = strComparableSet0.equals((java.lang.Object) boolean37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet0);
        java.lang.String str40 = strComparableSet0.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet0.stream();
        java.lang.String str42 = strComparableSet0.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[]" + "'", str40, "[]");
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[]" + "'", str42, "[]");
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.String str61 = strComparableSet2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[]" + "'", str61, "[]");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        strComparableSet10.clear();
        java.lang.Object[] objArray21 = strComparableSet10.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean61 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet63.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet68.equals((java.lang.Object) 1);
        boolean boolean71 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean72 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet68.contains((java.lang.Object) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator76 = strComparableSet74.spliterator();
        boolean boolean77 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        boolean boolean82 = strComparableSet79.isEmpty();
        boolean boolean83 = strComparableSet74.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        boolean boolean84 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet79);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.lang.String str25 = strComparableSet10.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet10.stream();
        strComparableSet10.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor28 = strComparableSet10.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(strComparableItor28);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        boolean boolean74 = strComparableSet42.remove((java.lang.Object) (-1L));
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream75 = strComparableSet42.parallelStream();
        int int76 = strComparableSet42.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strComparableStream75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.constant.ConstantDesc[]> constantDescArraySet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc[]>((int) (byte) -1, (float) 2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj13 = strComparableSet10.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet18.parallelStream();
        boolean boolean27 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean28 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean30 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet21.parallelStream();
        java.lang.Class<?> wildcardClass27 = strComparableStream26.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean31 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet58.contains((java.lang.Object) strComparableSet64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray78 = new java.lang.reflect.GenericDeclaration[] { wildcardClass67, wildcardClass69, wildcardClass71, wildcardClass73, wildcardClass75, wildcardClass77 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray79 = strComparableSet58.toArray(genericDeclarationArray78);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet81.parallelStream();
        boolean boolean86 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean87 = strComparableSet58.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean88 = strComparableSet19.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean89 = strComparableSet2.contains((java.lang.Object) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream90 = strComparableSet2.parallelStream();
        boolean boolean91 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(genericDeclarationArray78);
        org.junit.Assert.assertNotNull(genericDeclarationArray79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strComparableStream90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        java.util.LinkedHashSet<java.lang.Object> objSet2 = new java.util.LinkedHashSet<java.lang.Object>((int) (byte) 100, (float) (short) 1);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet35.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet41.toArray();
        int int44 = strComparableSet41.size();
        boolean boolean45 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        boolean boolean71 = strComparableSet68.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet73.equals((java.lang.Object) 1);
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean77 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean80 = strComparableSet73.contains((java.lang.Object) strComparableSet79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray93 = new java.lang.reflect.GenericDeclaration[] { wildcardClass82, wildcardClass84, wildcardClass86, wildcardClass88, wildcardClass90, wildcardClass92 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray94 = strComparableSet73.toArray(genericDeclarationArray93);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray95 = strComparableSet41.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray94);
        java.lang.Object obj96 = null;
        boolean boolean97 = strComparableSet41.remove(obj96);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(genericDeclarationArray93);
        org.junit.Assert.assertNotNull(genericDeclarationArray94);
        org.junit.Assert.assertNotNull(annotatedElementArray95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet0.parallelStream();
        java.lang.String str7 = strComparableSet0.toString();
        boolean boolean9 = strComparableSet0.add((java.lang.Comparable<java.lang.String>) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet6.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean76 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        boolean boolean81 = strComparableSet78.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet89 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean90 = strComparableSet83.contains((java.lang.Object) strComparableSet89);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet89.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream92 = strComparableSet89.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet94 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator95 = strComparableSet94.spliterator();
        boolean boolean96 = strComparableSet89.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet94);
        boolean boolean97 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet89);
        strComparableSet6.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
        org.junit.Assert.assertNotNull(strComparableStream92);
        org.junit.Assert.assertNotNull(strComparableSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        boolean boolean57 = strComparableSet19.equals((java.lang.Object) boolean56);
        boolean boolean58 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.lang.Object[] objArray63 = strComparableSet59.toArray();
        java.lang.Object[] objArray64 = strComparableSet59.toArray();
        int int65 = strComparableSet59.size();
        java.lang.String str66 = strComparableSet59.toString();
        boolean boolean67 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean68 = strComparableSet59.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[]" + "'", str66, "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean17 = strComparableSet15.contains((java.lang.Object) 100L);
        boolean boolean19 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet15.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet15.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet15.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet25.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object[] objArray33 = strComparableSet31.toArray();
        int int34 = strComparableSet31.size();
        boolean boolean35 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str38 = strComparableSet37.toString();
        boolean boolean39 = strComparableSet25.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean41 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object obj52 = null;
        boolean boolean53 = strComparableSet48.equals(obj52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean74 = strComparableSet48.equals((java.lang.Object) strComparableSet65);
        boolean boolean75 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        int int76 = strComparableSet65.size();
        int int77 = strComparableSet65.size();
        strComparableSet65.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100);
        boolean boolean57 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) ' ', (float) (byte) 1);
        boolean boolean3 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet14.parallelStream();
        boolean boolean24 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean28 = strComparableSet14.contains((java.lang.Object) strComparableSet27);
        boolean boolean29 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        boolean boolean31 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.lang.Object obj62 = null;
        boolean boolean63 = strComparableSet58.equals(obj62);
        boolean boolean64 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        strComparableSet38.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream66 = strComparableSet38.stream();
        int int67 = strComparableSet38.size();
        boolean boolean68 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean70 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableStream66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        java.lang.Class<?> wildcardClass3 = strComparableSet2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.lang.Object[] objArray39 = strComparableSet37.toArray();
        int int40 = strComparableSet37.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object[] objArray50 = strComparableSet46.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean65 = strComparableSet46.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean66 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean67 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        java.lang.Class<?> wildcardClass68 = strComparableSet1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((-1), (float) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet11.toArray();
        java.lang.Object[] objArray16 = strComparableSet11.toArray();
        int int17 = strComparableSet11.size();
        boolean boolean18 = strComparableSet7.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean19 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str22 = strComparableSet21.toString();
        boolean boolean24 = strComparableSet21.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet30.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean45 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator48 = strComparableSet47.spliterator();
        boolean boolean49 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream51 = strComparableSet2.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[]" + "'", str22, "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strComparableStream51);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement> annotatedElementSet1 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement>((int) (short) 100);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet2 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>((int) 'a', (float) 1L);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean28 = strComparableSet13.isEmpty();
        int int29 = strComparableSet13.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor30 = strComparableSet13.iterator();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(strComparableItor30);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[][]> annotatedElementArraySet2 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement[][]>((int) ' ', (float) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean34 = strComparableSet33.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator35 = strComparableSet33.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator35);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet65.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet65.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertNotNull(strComparableStream74);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.lang.Object[] objArray65 = strComparableSet60.toArray();
        int int66 = strComparableSet60.size();
        java.lang.String str67 = strComparableSet60.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet70.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.lang.Object[] objArray78 = strComparableSet76.toArray();
        int int79 = strComparableSet76.size();
        boolean boolean80 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str83 = strComparableSet82.toString();
        boolean boolean84 = strComparableSet70.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        java.lang.String str85 = strComparableSet70.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor86 = strComparableSet70.iterator();
        boolean boolean87 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean88 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object obj89 = strComparableSet0.clone();
        java.lang.Object obj90 = strComparableSet0.clone();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[]" + "'", str83, "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[]" + "'", str85, "[]");
        org.junit.Assert.assertNotNull(strComparableItor86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "[]");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean13 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj14 = strComparableSet11.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet11.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object obj26 = null;
        boolean boolean27 = strComparableSet22.equals(obj26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean30 = strComparableSet22.contains((java.lang.Object) 100);
        boolean boolean31 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        strComparableSet11.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor33 = strComparableSet11.iterator();
        boolean boolean34 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        strComparableSet11.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strComparableItor33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object[] objArray13 = strComparableSet9.toArray();
        java.lang.Object[] objArray14 = strComparableSet9.toArray();
        int int15 = strComparableSet9.size();
        boolean boolean16 = strComparableSet5.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet17.toArray();
        java.lang.Object[] objArray22 = strComparableSet17.toArray();
        int int23 = strComparableSet17.size();
        boolean boolean24 = strComparableSet5.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean28 = strComparableSet26.contains((java.lang.Object) 100L);
        boolean boolean30 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor31 = strComparableSet26.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableSet60.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int62 = strComparableSet60.size();
        boolean boolean63 = strComparableSet60.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean67 = strComparableSet65.equals((java.lang.Object) 1);
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj76 = strComparableSet75.clone();
        boolean boolean77 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        boolean boolean83 = strComparableSet80.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet85.equals((java.lang.Object) 1);
        boolean boolean88 = strComparableSet80.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.lang.Object obj89 = null;
        boolean boolean90 = strComparableSet85.equals(obj89);
        boolean boolean91 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator92 = strComparableSet65.spliterator();
        int int93 = strComparableSet65.size();
        boolean boolean94 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean95 = strComparableSet17.equals((java.lang.Object) boolean94);
        boolean boolean96 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.lang.String str97 = strComparableSet0.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strComparableItor31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[]" + "'", str97, "[]");
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet6.parallelStream();
        java.lang.String str35 = strComparableSet6.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj33 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean6 = strComparableSet4.contains((java.lang.Object) 100L);
        boolean boolean8 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = strComparableSet4.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream51 = strComparableSet48.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj54 = strComparableSet53.clone();
        boolean boolean55 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean56 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.lang.Object obj67 = null;
        boolean boolean68 = strComparableSet63.equals(obj67);
        boolean boolean69 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator70 = strComparableSet43.spliterator();
        int int71 = strComparableSet43.size();
        boolean boolean72 = strComparableSet4.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        int int73 = strComparableSet4.size();
        boolean boolean74 = strComparableSet2.remove((java.lang.Object) strComparableSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableItor9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(strComparableStream51);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        boolean boolean61 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet63.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.lang.Object[] objArray71 = strComparableSet67.toArray();
        java.lang.Object[] objArray72 = strComparableSet67.toArray();
        int int73 = strComparableSet67.size();
        boolean boolean74 = strComparableSet63.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream75 = strComparableSet63.parallelStream();
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet57.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strComparableStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableStream77);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        java.util.LinkedHashSet<java.lang.Object> objSet1 = new java.util.LinkedHashSet<java.lang.Object>(0);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet1 = new java.util.LinkedHashSet<java.lang.reflect.GenericDeclaration[]>((int) (short) 1);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator38 = strComparableSet37.spliterator();
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 100, (float) (byte) 1);
        boolean boolean43 = strComparableSet37.contains((java.lang.Object) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        boolean boolean48 = strComparableSet45.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean52 = strComparableSet50.equals((java.lang.Object) 1);
        boolean boolean53 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object obj54 = null;
        boolean boolean55 = strComparableSet50.equals(obj54);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean58 = strComparableSet50.contains((java.lang.Object) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean63 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet61.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object[] objArray69 = strComparableSet67.toArray();
        int int70 = strComparableSet67.size();
        boolean boolean71 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean72 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean79 = strComparableSet78.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int80 = strComparableSet78.size();
        boolean boolean81 = strComparableSet78.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet83.equals((java.lang.Object) 1);
        boolean boolean86 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet83);
        boolean boolean87 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator88 = strComparableSet75.spliterator();
        java.lang.Object obj89 = strComparableSet75.clone();
        java.lang.String[] strArray94 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray95 = strComparableSet75.toArray(strArray94);
        java.lang.constant.Constable[] constableArray96 = strComparableSet50.toArray((java.lang.constant.Constable[]) strArray94);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream97 = strComparableSet50.stream();
        boolean boolean98 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean99 = strComparableSet6.remove((java.lang.Object) boolean98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(constableArray96);
        org.junit.Assert.assertNotNull(strComparableStream97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray27 = strComparableSet22.toArray(typeArray26);
        java.lang.Object obj28 = strComparableSet22.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet22.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator30 = strComparableSet22.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(strComparableSpliterator30);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray10 = strComparableSet1.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean14 = strComparableSet12.contains((java.lang.Object) 100L);
        boolean boolean15 = strComparableSet12.isEmpty();
        java.lang.Object[] objArray16 = strComparableSet12.toArray();
        boolean boolean17 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean18 = strComparableSet12.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet3.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet5.toArray();
        int int8 = strComparableSet5.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet24.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj30 = strComparableSet29.clone();
        boolean boolean31 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean32 = strComparableSet19.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean34 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean35 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet5.stream();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strComparableStream27);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strComparableStream36);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 0);
        int int2 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean11 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj12 = strComparableSet9.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.lang.Object obj34 = strComparableSet20.clone();
        java.lang.String[] strArray39 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray40 = strComparableSet20.toArray(strArray39);
        java.lang.constant.ConstantDesc[] constantDescArray41 = strComparableSet14.toArray((java.lang.constant.ConstantDesc[]) strArray39);
        java.lang.String str42 = strComparableSet14.toString();
        java.lang.String str43 = strComparableSet14.toString();
        java.lang.Object obj44 = strComparableSet14.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(constantDescArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[]" + "'", str42, "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[]" + "'", str43, "[]");
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        boolean boolean5 = strComparableSet0.isEmpty();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator6 = strComparableSet0.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator6);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3, (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        boolean boolean15 = strComparableSet2.isEmpty();
        java.lang.Object[] objArray16 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream51 = strComparableSet48.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj54 = strComparableSet53.clone();
        boolean boolean55 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean56 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        boolean boolean61 = strComparableSet58.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet63.contains((java.lang.Object) strComparableSet69);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator71 = strComparableSet69.spliterator();
        boolean boolean72 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet69.isEmpty();
        boolean boolean74 = strComparableSet69.isEmpty();
        boolean boolean75 = strComparableSet2.equals((java.lang.Object) strComparableSet69);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(strComparableStream51);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray52 = strComparableSet36.toArray();
        boolean boolean54 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.lang.Object obj81 = strComparableSet66.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet66.stream();
        boolean boolean83 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[]");
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strComparableStream7);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet49.iterator();
        strComparableSet49.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableItor59);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        boolean boolean12 = strComparableSet9.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet14.equals((java.lang.Object) 1);
        boolean boolean17 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet19.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj25 = strComparableSet24.clone();
        boolean boolean26 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean27 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int31 = strComparableSet29.size();
        boolean boolean32 = strComparableSet29.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean36 = strComparableSet34.equals((java.lang.Object) 1);
        boolean boolean37 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean38 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet39.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj55 = strComparableSet54.clone();
        boolean boolean56 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean57 = strComparableSet44.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean59 = strComparableSet34.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean61 = strComparableSet34.equals((java.lang.Object) (short) 10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean66 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet64.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.lang.Object[] objArray72 = strComparableSet70.toArray();
        int int73 = strComparableSet70.size();
        boolean boolean74 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str77 = strComparableSet76.toString();
        boolean boolean78 = strComparableSet64.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.lang.String str79 = strComparableSet64.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = strComparableSet64.iterator();
        boolean boolean81 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        strComparableSet64.clear();
        java.lang.String str83 = strComparableSet64.toString();
        boolean boolean84 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream85 = strComparableSet64.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[]" + "'", str77, "[]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[]" + "'", str79, "[]");
        org.junit.Assert.assertNotNull(strComparableItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[]" + "'", str83, "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strComparableStream85);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor4 = strComparableSet2.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean20 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray58 = strComparableSet42.toArray();
        boolean boolean60 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean61 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean66 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj67 = strComparableSet64.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet64.stream();
        boolean boolean72 = strComparableSet42.equals((java.lang.Object) strComparableSet64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.lang.Object obj30 = null;
        boolean boolean31 = strComparableSet26.equals(obj30);
        boolean boolean32 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        strComparableSet6.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet6.stream();
        int int35 = strComparableSet6.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.Object[] objArray40 = strComparableSet38.toArray();
        java.lang.Object[] objArray41 = strComparableSet38.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean61 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet63.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet68.equals((java.lang.Object) 1);
        boolean boolean71 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean72 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        java.lang.Object[] objArray77 = strComparableSet73.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean81 = strComparableSet78.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int85 = strComparableSet83.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet83.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj89 = strComparableSet88.clone();
        boolean boolean90 = strComparableSet83.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean91 = strComparableSet78.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean92 = strComparableSet73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean93 = strComparableSet68.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        strComparableSet78.clear();
        boolean boolean95 = strComparableSet38.remove((java.lang.Object) strComparableSet78);
        java.lang.Object obj96 = strComparableSet38.clone();
        java.lang.Object obj97 = strComparableSet38.clone();
        boolean boolean98 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "[]");
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "[]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean8 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj9 = strComparableSet6.clone();
        java.lang.Object[] objArray10 = strComparableSet6.toArray();
        boolean boolean11 = strComparableSet6.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean13 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.lang.Object[] objArray18 = strComparableSet14.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator21 = strComparableSet20.spliterator();
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet14.spliterator();
        boolean boolean24 = strComparableSet12.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        boolean boolean25 = strComparableSet1.contains((java.lang.Object) boolean24);
        java.lang.String str26 = strComparableSet1.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj44 = strComparableSet43.clone();
        boolean boolean45 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean46 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean57 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet33.stream();
        boolean boolean60 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean61 = strComparableSet1.equals((java.lang.Object) strComparableSet33);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor62 = strComparableSet33.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[[]]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableItor62);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray52 = strComparableSet36.toArray();
        boolean boolean54 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Class<?> wildcardClass55 = strComparableSet36.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator60 = strComparableSet8.spliterator();
        java.lang.String str61 = strComparableSet8.toString();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet8.parallelStream();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[]" + "'", str61, "[]");
        org.junit.Assert.assertNotNull(strComparableStream62);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream3 = strComparableSet2.parallelStream();
        org.junit.Assert.assertNotNull(strComparableStream3);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream2 = strComparableSet1.stream();
        org.junit.Assert.assertNotNull(strComparableStream2);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.Object obj27 = strComparableSet22.clone();
        strComparableSet22.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean29 = strComparableSet27.contains((java.lang.Object) 100L);
        boolean boolean31 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor32 = strComparableSet27.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        boolean boolean37 = strComparableSet34.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean41 = strComparableSet39.equals((java.lang.Object) 1);
        boolean boolean42 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet55.equals((java.lang.Object) 1);
        boolean boolean58 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean59 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean75 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj76 = strComparableSet73.clone();
        java.lang.Object[] objArray77 = strComparableSet73.toArray();
        java.lang.Object[] objArray78 = strComparableSet73.toArray();
        boolean boolean79 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object obj80 = strComparableSet73.clone();
        java.lang.Object obj81 = strComparableSet73.clone();
        boolean boolean82 = strComparableSet44.remove(obj81);
        boolean boolean84 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.lang.String[] strArray85 = new java.lang.String[] {};
        java.lang.String[] strArray86 = strComparableSet44.toArray(strArray85);
        java.lang.constant.ConstantDesc[] constantDescArray87 = strComparableSet11.toArray((java.lang.constant.ConstantDesc[]) strArray86);
        java.lang.Object obj88 = strComparableSet11.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strComparableItor32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[[]]");
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[[]]");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[[]]");
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(constantDescArray87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "[]");
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int8 = strComparableSet6.size();
        boolean boolean9 = strComparableSet6.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet11.equals((java.lang.Object) 1);
        boolean boolean14 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean35 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.Object[] objArray40 = strComparableSet36.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean47 = strComparableSet46.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int48 = strComparableSet46.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet46.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj52 = strComparableSet51.clone();
        boolean boolean53 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean54 = strComparableSet41.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet51);
        boolean boolean55 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean56 = strComparableSet31.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str59 = strComparableSet58.toString();
        boolean boolean60 = strComparableSet31.equals((java.lang.Object) strComparableSet58);
        boolean boolean61 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet58.parallelStream();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(strComparableStream49);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[]" + "'", str59, "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strComparableStream62);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator23 = strComparableSet22.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet22.spliterator();
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet22.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet22.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator23);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(strComparableStream27);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object obj9 = strComparableSet7.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "[]");
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.stream();
        boolean boolean56 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.Object[] objArray57 = strComparableSet17.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet69.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj75 = strComparableSet74.clone();
        boolean boolean76 = strComparableSet69.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean77 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        boolean boolean82 = strComparableSet79.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean86 = strComparableSet84.equals((java.lang.Object) 1);
        boolean boolean87 = strComparableSet79.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.lang.Object obj88 = null;
        boolean boolean89 = strComparableSet84.equals(obj88);
        boolean boolean90 = strComparableSet64.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet64.spliterator();
        boolean boolean92 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean93 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean23 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator24 = strComparableSet11.spliterator();
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet11.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj62 = strComparableSet61.clone();
        boolean boolean63 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        boolean boolean64 = strComparableSet51.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray68 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray69 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray68;
        strComparableCollectionArray69[0] = strComparableSet42;
        strComparableCollectionArray69[1] = strComparableSet61;
        strComparableCollectionArray69[2] = strComparableSet66;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray76 = strComparableSet27.toArray(strComparableCollectionArray69);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean79 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = strComparableSet27.iterator();
        boolean boolean81 = strComparableSet11.contains((java.lang.Object) strComparableSet27);
        boolean boolean83 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet27.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(collectionArray68);
        org.junit.Assert.assertNotNull(strComparableCollectionArray69);
        org.junit.Assert.assertNotNull(strComparableCollectionArray76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strComparableItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray55 = strComparableSet32.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = strComparableSet32.iterator();
        strComparableSet32.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(strComparableItor56);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.lang.Object obj21 = strComparableSet11.clone();
        java.lang.Class<?> wildcardClass22 = strComparableSet11.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.String str56 = strComparableSet49.toString();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet49.iterator();
        boolean boolean59 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet49.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet49.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, []]" + "'", str56, "[hi!, []]");
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableStream61);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet42.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableSet75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean77 = strComparableSet75.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet75.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean82 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.lang.Object[] objArray83 = strComparableSet81.toArray();
        int int84 = strComparableSet81.size();
        boolean boolean85 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str88 = strComparableSet87.toString();
        boolean boolean89 = strComparableSet75.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        boolean boolean90 = strComparableSet42.contains((java.lang.Object) strComparableSet75);
        strComparableSet42.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[]" + "'", str88, "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean59 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj60 = strComparableSet57.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean64 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object obj65 = strComparableSet32.clone();
        java.lang.Object[] objArray66 = strComparableSet32.toArray();
        strComparableSet32.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[[], [[]]]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj59 = strComparableSet56.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet56.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean75 = strComparableSet67.contains((java.lang.Object) 100);
        boolean boolean76 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        strComparableSet56.clear();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean82 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet80.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean87 = strComparableSet84.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.lang.Object[] objArray88 = strComparableSet86.toArray();
        int int89 = strComparableSet86.size();
        boolean boolean90 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet92 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str93 = strComparableSet92.toString();
        boolean boolean94 = strComparableSet80.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet92);
        java.lang.String str95 = strComparableSet80.toString();
        boolean boolean96 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean97 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        int int98 = strComparableSet80.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[]" + "'", str93, "[]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[]" + "'", str95, "[]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet15.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.lang.Object[] objArray55 = strComparableSet51.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet56.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet61.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj67 = strComparableSet66.clone();
        boolean boolean68 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean69 = strComparableSet56.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean70 = strComparableSet51.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean71 = strComparableSet46.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.constant.Constable[] constableArray73 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray74 = strComparableSet46.toArray(constableArray73);
        boolean boolean75 = strComparableSet15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean76 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean78 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet1.stream();

        java.lang.Object[] objArray80 = strComparableSet1.toArray();
        java.lang.Class<?> wildcardClass81 = objArray80.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(constableArray73);
        org.junit.Assert.assertNotNull(constableArray74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[, hi!]");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[null]");
        java.lang.Object[] objArray59 = strComparableSet56.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int63 = strComparableSet61.size();
        boolean boolean64 = strComparableSet61.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet66.equals((java.lang.Object) 1);
        boolean boolean69 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet66.parallelStream();
        boolean boolean71 = strComparableSet56.equals((java.lang.Object) strComparableSet66);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator72 = strComparableSet66.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[[null]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[[null]]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator72);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet0.parallelStream();
        boolean boolean16 = strComparableSet0.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        int int17 = strComparableSet0.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean12 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj13 = strComparableSet10.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet18.parallelStream();
        boolean boolean27 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean28 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet15.parallelStream();
        java.lang.Object obj30 = strComparableSet15.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean35 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet33.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet39.toArray();
        int int42 = strComparableSet39.size();
        boolean boolean43 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str46 = strComparableSet45.toString();
        boolean boolean47 = strComparableSet33.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream58 = strComparableSet54.stream();
        int int59 = strComparableSet54.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str62 = strComparableSet61.toString();
        boolean boolean64 = strComparableSet61.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean68 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object[] objArray69 = strComparableSet65.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean73 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableSet75.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int77 = strComparableSet75.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream78 = strComparableSet75.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj81 = strComparableSet80.clone();
        boolean boolean82 = strComparableSet75.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean83 = strComparableSet70.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        boolean boolean84 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean85 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean86 = strComparableSet54.remove((java.lang.Object) strComparableSet61);
        java.lang.Object[] objArray87 = strComparableSet61.toArray();
        boolean boolean88 = strComparableSet33.remove((java.lang.Object) objArray87);
        boolean boolean89 = strComparableSet15.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[]" + "'", str46, "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strComparableStream58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(strComparableStream78);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray52 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray53 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray52;
        strComparableCollectionArray53[0] = strComparableSet26;
        strComparableCollectionArray53[1] = strComparableSet45;
        strComparableCollectionArray53[2] = strComparableSet50;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray60 = strComparableSet11.toArray(strComparableCollectionArray53);
        boolean boolean61 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        int int62 = strComparableSet11.size();
        java.lang.Object[] objArray63 = strComparableSet11.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(collectionArray52);
        org.junit.Assert.assertNotNull(strComparableCollectionArray53);
        org.junit.Assert.assertNotNull(strComparableCollectionArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        strComparableSet1.clear();
        int int12 = strComparableSet1.size();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.lang.Object[] objArray10 = strComparableSet5.toArray();
        int int11 = strComparableSet5.size();
        boolean boolean12 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet14.parallelStream();
        java.lang.Object[] objArray23 = strComparableSet14.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean27 = strComparableSet25.contains((java.lang.Object) 100L);
        boolean boolean28 = strComparableSet25.isEmpty();
        java.lang.Object[] objArray29 = strComparableSet25.toArray();
        boolean boolean30 = strComparableSet14.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean31 = strComparableSet1.equals((java.lang.Object) strComparableSet25);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        int int7 = strComparableSet1.size();
        boolean boolean8 = strComparableSet1.isEmpty();
        boolean boolean9 = strComparableSet1.isEmpty();
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet10.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 10, (float) '4');
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.lang.Object[] objArray23 = strComparableSet21.toArray();
        int int24 = strComparableSet21.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.lang.Object[] objArray34 = strComparableSet30.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean50 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean51 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean52 = strComparableSet10.remove((java.lang.Object) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int56 = strComparableSet54.size();
        boolean boolean57 = strComparableSet54.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet58.toArray();
        java.lang.Object[] objArray63 = strComparableSet58.toArray();
        int int64 = strComparableSet58.size();
        boolean boolean65 = strComparableSet54.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.lang.Object[] objArray70 = strComparableSet66.toArray();
        java.lang.Object[] objArray71 = strComparableSet66.toArray();
        int int72 = strComparableSet66.size();
        boolean boolean73 = strComparableSet54.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor74 = strComparableSet66.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet66.spliterator();
        boolean boolean76 = strComparableSet18.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableItor74);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray55 = strComparableSet32.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean60 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj61 = strComparableSet58.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0);
        boolean boolean67 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean68 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet14.iterator();
        boolean boolean30 = strComparableSet1.equals((java.lang.Object) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        strComparableSet32.clear();
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.lang.Object obj4 = strComparableSet1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "[hi!]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "[hi!]");
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet2.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean19 = strComparableSet17.contains((java.lang.Object) 100L);
        boolean boolean21 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor22 = strComparableSet17.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        boolean boolean50 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        int int51 = strComparableSet17.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean62 = strComparableSet58.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet58.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator75 = strComparableSet74.spliterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator76 = strComparableSet74.spliterator();
        boolean boolean77 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.lang.reflect.Type[] typeArray79 = strComparableSet74.toArray(typeArray78);
        boolean boolean80 = strComparableSet17.contains((java.lang.Object) typeArray78);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strComparableItor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator75);
        org.junit.Assert.assertNotNull(strComparableSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) 'a', (float) (short) 100);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet3.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet5.toArray();
        int int8 = strComparableSet5.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet40.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean59 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean60 = strComparableSet35.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        strComparableSet45.clear();
        boolean boolean62 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.lang.Object obj63 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet5.parallelStream();
        boolean boolean65 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray67 = strComparableSet5.toArray();
        boolean boolean68 = strComparableSet2.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "[]");
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean51 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet54.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet60.toArray();
        int int63 = strComparableSet60.size();
        boolean boolean64 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean65 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean66 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean68 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray69 = strComparableSet16.toArray();
        boolean boolean71 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet16.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strComparableItor72);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        boolean boolean33 = strComparableSet30.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet35.equals((java.lang.Object) 1);
        boolean boolean38 = strComparableSet30.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean39 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet35.contains((java.lang.Object) strComparableSet41);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator43 = strComparableSet41.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.stream();
        boolean boolean45 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray46 = strComparableSet6.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet6.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream62 = strComparableSet59.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj65 = strComparableSet64.clone();
        boolean boolean66 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean67 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        boolean boolean72 = strComparableSet69.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet74.equals((java.lang.Object) 1);
        boolean boolean77 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.lang.Object obj78 = null;
        boolean boolean79 = strComparableSet74.equals(obj78);
        boolean boolean80 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator81 = strComparableSet54.spliterator();
        int int82 = strComparableSet54.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean84 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet87 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableSet87.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean89 = strComparableSet87.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj90 = strComparableSet87.clone();
        java.lang.Object[] objArray91 = strComparableSet87.toArray();
        boolean boolean92 = strComparableSet87.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream93 = strComparableSet87.stream();
        boolean boolean94 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet87);
        java.lang.Object[] objArray95 = strComparableSet87.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator43);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(strComparableStream62);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "[[]]");
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strComparableStream93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[[]]");
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        boolean boolean54 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean55 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.lang.String str56 = strComparableSet49.toString();
        java.lang.String str57 = strComparableSet49.toString();
        int int58 = strComparableSet49.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!, []]" + "'", str56, "[hi!, []]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!, []]" + "'", str57, "[hi!, []]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet13.toArray();
        java.lang.Object[] objArray16 = strComparableSet13.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        strComparableSet53.clear();
        boolean boolean70 = strComparableSet13.remove((java.lang.Object) strComparableSet53);
        java.lang.Object obj71 = strComparableSet13.clone();
        java.lang.Object obj72 = strComparableSet13.clone();
        boolean boolean73 = strComparableSet8.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean77 = strComparableSet74.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableSet79.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int81 = strComparableSet79.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream82 = strComparableSet79.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj85 = strComparableSet84.clone();
        boolean boolean86 = strComparableSet79.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean87 = strComparableSet74.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean88 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(strComparableStream82);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        java.util.LinkedHashSet<java.util.HashSet<java.lang.Comparable<java.lang.String>>> strComparableSetSet0 = new java.util.LinkedHashSet<java.util.HashSet<java.lang.Comparable<java.lang.String>>>();
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet21.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableStream84);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        boolean boolean26 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean30 = strComparableSet28.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet42.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj48 = strComparableSet47.clone();
        boolean boolean49 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean50 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        boolean boolean55 = strComparableSet52.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet57.equals((java.lang.Object) 1);
        boolean boolean60 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean62 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean63 = strComparableSet10.contains((java.lang.Object) strComparableSet28);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int11 = strComparableSet5.size();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = strComparableSet5.containsAll(strComparableCollection12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet22.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet22.remove((java.lang.Object) strComparableSet30);
        boolean boolean35 = strComparableSet30.isEmpty();
        boolean boolean36 = strComparableSet0.remove((java.lang.Object) strComparableSet30);
        java.lang.Class<?> wildcardClass37 = strComparableSet30.getClass();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        boolean boolean93 = strComparableSet59.equals((java.lang.Object) true);
        boolean boolean95 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "[null]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream32 = strComparableSet6.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet6.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableStream32);
        org.junit.Assert.assertNotNull(strComparableStream33);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(10);
        int int2 = strComparableSet1.size();
        java.lang.String str3 = strComparableSet1.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator5 = strComparableSet4.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet52.contains((java.lang.Object) strComparableSet58);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator60 = strComparableSet58.spliterator();
        boolean boolean61 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.lang.String str62 = strComparableSet12.toString();
        boolean boolean63 = strComparableSet4.contains((java.lang.Object) strComparableSet12);
        java.lang.Object[] objArray64 = strComparableSet12.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor65 = strComparableSet12.iterator();
        boolean boolean66 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        int int5 = strComparableSet2.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        boolean boolean10 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        strComparableSet2.clear();
        int int12 = strComparableSet2.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet19.stream();
        int int24 = strComparableSet19.size();
        boolean boolean25 = strComparableSet2.contains((java.lang.Object) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet19.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableStream26);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        boolean boolean60 = strComparableSet0.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean65 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj66 = strComparableSet63.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str72 = strComparableSet71.toString();
        boolean boolean74 = strComparableSet71.equals((java.lang.Object) 10L);
        boolean boolean75 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean76 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        java.lang.String str77 = strComparableSet0.toString();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[]" + "'", str77, "[]");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean6 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj7 = strComparableSet4.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str13 = strComparableSet12.toString();
        boolean boolean15 = strComparableSet12.equals((java.lang.Object) 10L);
        boolean boolean16 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean17 = strComparableSet1.remove((java.lang.Object) strComparableSet12);
        java.lang.Object obj18 = strComparableSet1.clone();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor19 = strComparableSet1.iterator();
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertNotNull(strComparableItor19);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        boolean boolean15 = strComparableSet12.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean19 = strComparableSet17.equals((java.lang.Object) 1);
        boolean boolean20 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet22.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj28 = strComparableSet27.clone();
        boolean boolean29 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        boolean boolean30 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        boolean boolean35 = strComparableSet32.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet37.equals((java.lang.Object) 1);
        boolean boolean40 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean41 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.lang.Object[] objArray46 = strComparableSet42.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean61 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean62 = strComparableSet37.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.constant.Constable[] constableArray64 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray65 = strComparableSet37.toArray(constableArray64);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object[] objArray68 = strComparableSet6.toArray();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(constableArray64);
        org.junit.Assert.assertNotNull(constableArray65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int14 = strComparableSet12.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet12.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj18 = strComparableSet17.clone();
        boolean boolean19 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        boolean boolean20 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet47.contains((java.lang.Object) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet56.parallelStream();
        java.lang.Object[] objArray60 = strComparableSet56.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = strComparableSet56.iterator();
        int int62 = strComparableSet56.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream63 = strComparableSet56.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream64 = strComparableSet56.parallelStream();
        boolean boolean65 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean66 = strComparableSet6.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet6.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean70 = strComparableSet69.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int71 = strComparableSet69.size();
        boolean boolean72 = strComparableSet69.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet74.equals((java.lang.Object) 1);
        boolean boolean77 = strComparableSet69.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        boolean boolean78 = strComparableSet74.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableSet80.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int82 = strComparableSet80.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream83 = strComparableSet80.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet85 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj86 = strComparableSet85.clone();
        boolean boolean87 = strComparableSet80.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        boolean boolean88 = strComparableSet74.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet85);
        strComparableSet74.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream90 = strComparableSet74.stream();
        java.lang.Object obj91 = strComparableSet74.clone();
        boolean boolean92 = strComparableSet6.equals(obj91);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(strComparableStream63);
        org.junit.Assert.assertNotNull(strComparableStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(strComparableStream83);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "[]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableStream90);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean6 = strComparableSet1.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Collection<java.lang.Comparable<java.lang.String>> strComparableCollection8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = strComparableSet1.containsAll(strComparableCollection8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.Collection.iterator()\" because \"c\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strComparableStream7);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        boolean boolean23 = strComparableSet20.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet20.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean31 = strComparableSet30.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int32 = strComparableSet30.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream33 = strComparableSet30.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj36 = strComparableSet35.clone();
        boolean boolean37 = strComparableSet30.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet35);
        boolean boolean38 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean49 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean51 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableSet54.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet54.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean61 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object[] objArray62 = strComparableSet60.toArray();
        int int63 = strComparableSet60.size();
        boolean boolean64 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean65 = strComparableSet45.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        boolean boolean66 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream71 = strComparableSet68.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj74 = strComparableSet73.clone();
        boolean boolean75 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet76.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        boolean boolean84 = strComparableSet81.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean88 = strComparableSet86.equals((java.lang.Object) 1);
        boolean boolean89 = strComparableSet81.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        boolean boolean90 = strComparableSet78.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator91 = strComparableSet78.spliterator();
        boolean boolean92 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean93 = strComparableSet16.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet94 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor95 = strComparableSet94.iterator();
        java.lang.Class<?> wildcardClass96 = strComparableItor95.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(strComparableStream33);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNotNull(strComparableStream71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strComparableItor95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.String str15 = strComparableSet2.toString();
        java.lang.Object obj16 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.lang.Object[] objArray21 = strComparableSet19.toArray();
        java.lang.Object[] objArray22 = strComparableSet19.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean57 = strComparableSet54.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.lang.Object[] objArray58 = strComparableSet54.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet59.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableSet64.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int66 = strComparableSet64.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream67 = strComparableSet64.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj70 = strComparableSet69.clone();
        boolean boolean71 = strComparableSet64.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean72 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        boolean boolean73 = strComparableSet54.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        boolean boolean74 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        strComparableSet59.clear();
        boolean boolean76 = strComparableSet19.remove((java.lang.Object) strComparableSet59);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet78.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean84 = strComparableSet82.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj85 = strComparableSet82.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet82.parallelStream();
        boolean boolean87 = strComparableSet78.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean88 = strComparableSet59.remove((java.lang.Object) strComparableSet82);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor89 = strComparableSet59.iterator();
        boolean boolean90 = strComparableSet2.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream91 = strComparableSet59.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator92 = strComparableSet59.spliterator();
        java.lang.Class<?> wildcardClass93 = strComparableSpliterator92.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strComparableStream67);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(strComparableItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strComparableStream91);
        org.junit.Assert.assertNotNull(strComparableSpliterator92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet1.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet11.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream43 = strComparableSet40.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj46 = strComparableSet45.clone();
        boolean boolean47 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        boolean boolean48 = strComparableSet35.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Collection[] collectionArray52 = new java.util.Collection[3];
        @SuppressWarnings("unchecked")
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray53 = (java.util.Collection<java.lang.Comparable<java.lang.String>>[]) collectionArray52;
        strComparableCollectionArray53[0] = strComparableSet26;
        strComparableCollectionArray53[1] = strComparableSet45;
        strComparableCollectionArray53[2] = strComparableSet50;
        java.util.Collection<java.lang.Comparable<java.lang.String>>[] strComparableCollectionArray60 = strComparableSet11.toArray(strComparableCollectionArray53);
        boolean boolean61 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        int int62 = strComparableSet11.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(strComparableStream43);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(collectionArray52);
        org.junit.Assert.assertNotNull(strComparableCollectionArray53);
        org.junit.Assert.assertNotNull(strComparableCollectionArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        boolean boolean19 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj20 = strComparableSet13.clone();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean25 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet23.clear();
        boolean boolean27 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        strComparableSet13.clear();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int27 = strComparableSet25.size();
        boolean boolean28 = strComparableSet25.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet30.equals((java.lang.Object) 1);
        boolean boolean33 = strComparableSet25.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean34 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet30);
        boolean boolean35 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet62.contains((java.lang.Object) strComparableSet68);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator70 = strComparableSet68.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean73 = strComparableSet72.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int74 = strComparableSet72.size();
        boolean boolean75 = strComparableSet72.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean81 = strComparableSet77.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int85 = strComparableSet83.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet83.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj89 = strComparableSet88.clone();
        boolean boolean90 = strComparableSet83.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean91 = strComparableSet77.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean93 = strComparableSet77.contains((java.lang.Object) false);
        boolean boolean94 = strComparableSet68.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        boolean boolean95 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator96 = strComparableSet1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator96);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>> strComparableSetSet1 = new java.util.LinkedHashSet<java.util.Set<java.lang.Comparable<java.lang.String>>>((int) '4');
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean32 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet35.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object[] objArray43 = strComparableSet41.toArray();
        int int44 = strComparableSet41.size();
        boolean boolean45 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean46 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableSet48.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int50 = strComparableSet48.size();
        boolean boolean51 = strComparableSet48.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet53.equals((java.lang.Object) 1);
        boolean boolean56 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableSet68.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int70 = strComparableSet68.size();
        boolean boolean71 = strComparableSet68.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet73.equals((java.lang.Object) 1);
        boolean boolean76 = strComparableSet68.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        boolean boolean77 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean80 = strComparableSet73.contains((java.lang.Object) strComparableSet79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray93 = new java.lang.reflect.GenericDeclaration[] { wildcardClass82, wildcardClass84, wildcardClass86, wildcardClass88, wildcardClass90, wildcardClass92 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray94 = strComparableSet73.toArray(genericDeclarationArray93);
        java.lang.reflect.AnnotatedElement[] annotatedElementArray95 = strComparableSet41.toArray((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray94);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator96 = strComparableSet41.spliterator();
        boolean boolean97 = strComparableSet41.isEmpty();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream98 = strComparableSet41.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(genericDeclarationArray93);
        org.junit.Assert.assertNotNull(genericDeclarationArray94);
        org.junit.Assert.assertNotNull(annotatedElementArray95);
        org.junit.Assert.assertNotNull(strComparableSpliterator96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(strComparableStream98);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator2 = strComparableSet1.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean7 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj8 = strComparableSet5.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet5.parallelStream();
        boolean boolean10 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet13.toArray();
        java.lang.Object[] objArray16 = strComparableSet13.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        strComparableSet53.clear();
        boolean boolean70 = strComparableSet13.remove((java.lang.Object) strComparableSet53);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator73 = strComparableSet72.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean78 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj79 = strComparableSet76.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableSet76.parallelStream();
        boolean boolean81 = strComparableSet72.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        boolean boolean82 = strComparableSet53.remove((java.lang.Object) strComparableSet76);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor83 = strComparableSet53.iterator();
        boolean boolean85 = strComparableSet53.remove((java.lang.Object) (-1L));
        boolean boolean86 = strComparableSet1.contains((java.lang.Object) strComparableSet53);
        int int87 = strComparableSet53.size();
        org.junit.Assert.assertNotNull(strComparableSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strComparableItor83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream13 = strComparableSet10.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj16 = strComparableSet15.clone();
        boolean boolean17 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet10.parallelStream();
        boolean boolean19 = strComparableSet7.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        strComparableSet10.clear();
        java.lang.Object[] objArray21 = strComparableSet10.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet10.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strComparableStream13);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(strComparableStream22);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor7 = strComparableSet0.iterator();
        boolean boolean9 = strComparableSet0.remove((java.lang.Object) '#');
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet0.parallelStream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator11 = strComparableSet0.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream12 = strComparableSet0.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        boolean boolean17 = strComparableSet14.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet19.equals((java.lang.Object) 1);
        boolean boolean22 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream27 = strComparableSet24.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj30 = strComparableSet29.clone();
        boolean boolean31 = strComparableSet24.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean32 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        java.util.LinkedHashSet<java.lang.Class<?>> wildcardClassSet33 = new java.util.LinkedHashSet<java.lang.Class<?>>();
        boolean boolean34 = strComparableSet19.remove((java.lang.Object) wildcardClassSet33);
        java.lang.String str35 = strComparableSet19.toString();
        java.lang.String str36 = strComparableSet19.toString();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator38 = strComparableSet37.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableSet50.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int52 = strComparableSet50.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet50.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj56 = strComparableSet55.clone();
        boolean boolean57 = strComparableSet50.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        boolean boolean58 = strComparableSet45.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream60 = strComparableSet59.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet59.remove((java.lang.Object) strComparableSet67);
        boolean boolean72 = strComparableSet67.isEmpty();
        boolean boolean73 = strComparableSet37.remove((java.lang.Object) strComparableSet67);
        boolean boolean74 = strComparableSet19.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean75 = strComparableSet0.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableItor7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableSpliterator11);
        org.junit.Assert.assertNotNull(strComparableStream12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(strComparableStream27);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[]" + "'", str36, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableStream60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 0, (float) (short) 1);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(1, (float) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: 0.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean7 = strComparableSet0.remove((java.lang.Object) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        boolean boolean12 = strComparableSet9.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet14.equals((java.lang.Object) 1);
        boolean boolean17 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean20 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int21 = strComparableSet19.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet19.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj25 = strComparableSet24.clone();
        boolean boolean26 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet24);
        boolean boolean27 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean29 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.lang.Comparable<java.lang.String> strComparable30 = null;
        boolean boolean31 = strComparableSet6.add(strComparable30);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.lang.Object[] objArray36 = strComparableSet32.toArray();
        boolean boolean37 = strComparableSet32.isEmpty();
        java.lang.Object[] objArray38 = strComparableSet32.toArray();
        java.lang.Object[] objArray39 = strComparableSet6.toArray(objArray38);
        java.lang.Class<?> wildcardClass40 = strComparableSet6.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[null]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[null]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        boolean boolean65 = strComparableSet62.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet67.equals((java.lang.Object) 1);
        boolean boolean70 = strComparableSet62.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.lang.Object obj71 = null;
        boolean boolean72 = strComparableSet67.equals(obj71);
        java.lang.Object[] objArray73 = strComparableSet67.toArray();
        boolean boolean74 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream79 = strComparableSet76.parallelStream();
        java.lang.Object[] objArray80 = strComparableSet76.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet76.iterator();
        int int82 = strComparableSet76.size();
        boolean boolean83 = strComparableSet67.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet67.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(strComparableStream79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        strComparableSet6.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        boolean boolean42 = strComparableSet39.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet44.equals((java.lang.Object) 1);
        boolean boolean47 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        boolean boolean48 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator49 = strComparableSet36.spliterator();
        java.lang.Object obj50 = strComparableSet36.clone();
        java.lang.String[] strArray55 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray56 = strComparableSet36.toArray(strArray55);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet36.iterator();
        boolean boolean58 = strComparableSet6.remove((java.lang.Object) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator62 = strComparableSet61.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean67 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj68 = strComparableSet65.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet65.parallelStream();
        boolean boolean70 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean71 = strComparableSet42.remove((java.lang.Object) strComparableSet65);
        java.lang.Object[] objArray72 = strComparableSet65.toArray();
        int int73 = strComparableSet65.size();
        boolean boolean74 = strComparableSet65.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[[]]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.lang.Object obj8 = strComparableSet1.clone();
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "[hi!, []]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "[hi!, []]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "[hi!, []]");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet6.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream29 = strComparableSet26.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj32 = strComparableSet31.clone();
        boolean boolean33 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean34 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.io.Serializable> serializableSet38 = new java.util.LinkedHashSet<java.io.Serializable>((int) (short) 1, (float) 100L);
        boolean boolean39 = strComparableSet21.equals((java.lang.Object) (short) 1);
        boolean boolean40 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj58 = strComparableSet57.clone();
        boolean boolean59 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean60 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet63.equals((java.lang.Object) 1);
        boolean boolean66 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet68.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean74 = strComparableSet73.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int75 = strComparableSet73.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream76 = strComparableSet73.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj79 = strComparableSet78.clone();
        boolean boolean80 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean81 = strComparableSet68.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet84 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean85 = strComparableSet82.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet84);
        boolean boolean86 = strComparableSet68.contains((java.lang.Object) strComparableSet84);
        boolean boolean87 = strComparableSet67.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean88 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator89 = strComparableSet6.spliterator();
        strComparableSet6.clear();
        boolean boolean91 = strComparableSet6.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(strComparableStream29);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(strComparableStream76);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '4', (float) '#');
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet9.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean37 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray38 = strComparableSet34.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet39.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream47 = strComparableSet44.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj50 = strComparableSet49.clone();
        boolean boolean51 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean52 = strComparableSet39.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet34.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean54 = strComparableSet29.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray55 = strComparableSet39.toArray();
        strComparableSet39.clear();
        boolean boolean57 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(strComparableStream47);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.lang.Object[] objArray5 = strComparableSet1.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet32.contains((java.lang.Object) strComparableSet38);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator40 = strComparableSet38.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream41 = strComparableSet38.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor42 = strComparableSet38.iterator();
        boolean boolean44 = strComparableSet38.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator45 = strComparableSet38.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet46.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet51 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean52 = strComparableSet51.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int53 = strComparableSet51.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet51.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj57 = strComparableSet56.clone();
        boolean boolean58 = strComparableSet51.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean59 = strComparableSet46.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        boolean boolean60 = strComparableSet38.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet56);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean65 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj66 = strComparableSet63.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean69 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean70 = strComparableSet38.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean71 = strComparableSet1.contains((java.lang.Object) strComparableSet68);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet1.stream();
        int int73 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator40);
        org.junit.Assert.assertNotNull(strComparableStream41);
        org.junit.Assert.assertNotNull(strComparableItor42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(strComparableStream54);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        java.util.LinkedHashSet<java.util.List<java.lang.Comparable<java.lang.String>>> strComparableListSet2 = new java.util.LinkedHashSet<java.util.List<java.lang.Comparable<java.lang.String>>>((int) 'a', (float) ' ');
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet36.stream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream53 = strComparableSet36.parallelStream();
        java.lang.Object[] objArray54 = strComparableSet36.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableSet76.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int78 = strComparableSet76.size();
        boolean boolean79 = strComparableSet76.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean83 = strComparableSet81.equals((java.lang.Object) 1);
        boolean boolean84 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean85 = strComparableSet61.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet61.stream();
        boolean boolean88 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "");
        strComparableSet61.clear();
        boolean boolean91 = strComparableSet61.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean92 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(strComparableStream53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.lang.String str48 = strComparableSet26.toString();
        boolean boolean50 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableSet52.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int54 = strComparableSet52.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream55 = strComparableSet52.parallelStream();
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor57 = strComparableSet52.iterator();
        int int58 = strComparableSet52.size();
        boolean boolean59 = strComparableSet52.isEmpty();
        boolean boolean60 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(strComparableStream55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertNotNull(strComparableItor57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        strComparableSet2.clear();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = strComparableSet2.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean29 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet27.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet33.toArray();
        int int36 = strComparableSet33.size();
        boolean boolean37 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str40 = strComparableSet39.toString();
        boolean boolean41 = strComparableSet27.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.String str42 = strComparableSet27.toString();
        boolean boolean43 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strComparableItor24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[]" + "'", str40, "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[]" + "'", str42, "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) 'a', (float) 3);
        java.lang.Object[] objArray3 = strComparableSet2.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet2.stream();
        strComparableSet2.clear();
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray3), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray3), "[]");
        org.junit.Assert.assertNotNull(strComparableStream4);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean53 = strComparableSet26.equals((java.lang.Object) (short) 10);
        boolean boolean55 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Object[] objArray56 = strComparableSet26.toArray();
        java.lang.Object[] objArray57 = strComparableSet26.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet63.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        java.lang.Object[] objArray67 = strComparableSet63.toArray();
        java.lang.Object[] objArray68 = strComparableSet63.toArray();
        int int69 = strComparableSet63.size();
        boolean boolean70 = strComparableSet59.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean74 = strComparableSet71.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet73);
        java.lang.Object[] objArray75 = strComparableSet71.toArray();
        java.lang.Object[] objArray76 = strComparableSet71.toArray();
        int int77 = strComparableSet71.size();
        boolean boolean78 = strComparableSet59.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean79 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor80 = strComparableSet59.iterator();
        boolean boolean82 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "[[hi!, []]]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[hi!]");
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strComparableItor80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.lang.String str26 = strComparableSet22.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean30 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean31 = strComparableSet29.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj32 = strComparableSet29.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream45 = strComparableSet37.parallelStream();
        boolean boolean46 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        strComparableSet37.clear();
        boolean boolean48 = strComparableSet22.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strComparableStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.Object> objSet2 = new java.util.LinkedHashSet<java.lang.Object>((int) (byte) 0, (float) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal load factor: -1.0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100);
        boolean boolean63 = strComparableSet49.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray64 = new java.lang.reflect.AnnotatedElement[][] {};
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray65 = new java.lang.reflect.AnnotatedElement[][] {};
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray66 = new java.lang.reflect.AnnotatedElement[][] {};
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray67 = new java.lang.reflect.AnnotatedElement[][] {};
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray68 = new java.lang.reflect.AnnotatedElement[][] {};
        java.lang.reflect.AnnotatedElement[][][] annotatedElementArray69 = new java.lang.reflect.AnnotatedElement[][][] { annotatedElementArray64, annotatedElementArray65, annotatedElementArray66, annotatedElementArray67, annotatedElementArray68 };
        java.lang.reflect.AnnotatedElement[][][] annotatedElementArray70 = strComparableSet49.toArray(annotatedElementArray69);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(annotatedElementArray64);
        org.junit.Assert.assertNotNull(annotatedElementArray65);
        org.junit.Assert.assertNotNull(annotatedElementArray66);
        org.junit.Assert.assertNotNull(annotatedElementArray67);
        org.junit.Assert.assertNotNull(annotatedElementArray68);
        org.junit.Assert.assertNotNull(annotatedElementArray69);
        org.junit.Assert.assertNotNull(annotatedElementArray70);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        int int31 = strComparableSet6.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator32 = strComparableSet6.spliterator();
        int int33 = strComparableSet6.size();
        java.lang.Object[] objArray34 = strComparableSet6.toArray();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet6.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(strComparableStream35);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet2.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean9 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.lang.Object[] objArray10 = strComparableSet8.toArray();
        int int11 = strComparableSet8.size();
        boolean boolean12 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean31 = strComparableSet13.contains((java.lang.Object) strComparableSet29);
        boolean boolean32 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.lang.CharSequence[][][] charSequenceArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence[][][] charSequenceArray34 = strComparableSet8.toArray(charSequenceArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        int int11 = strComparableSet6.size();
        java.lang.String str12 = strComparableSet6.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[]" + "'", str12, "[]");
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100, (float) (short) 100);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator4 = strComparableSet3.spliterator();
        org.junit.Assert.assertNotNull(strComparableSpliterator4);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.Object obj10 = null;
        boolean boolean11 = strComparableSet6.equals(obj10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        boolean boolean16 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean20 = strComparableSet18.equals((java.lang.Object) 1);
        boolean boolean21 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet23.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj29 = strComparableSet28.clone();
        boolean boolean30 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean31 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean32 = strComparableSet6.equals((java.lang.Object) strComparableSet23);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet6.spliterator();
        java.lang.Object obj34 = strComparableSet6.clone();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator35 = strComparableSet6.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator35);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.constant.Constable[] constableArray53 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray54 = strComparableSet26.toArray(constableArray53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int58 = strComparableSet56.size();
        boolean boolean59 = strComparableSet56.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet61.equals((java.lang.Object) 1);
        boolean boolean64 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableSet66.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int68 = strComparableSet66.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet66.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj72 = strComparableSet71.clone();
        boolean boolean73 = strComparableSet66.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        boolean boolean74 = strComparableSet61.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean79 = strComparableSet77.equals((java.lang.Object) 1);
        boolean boolean80 = strComparableSet66.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet77);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor81 = strComparableSet66.iterator();
        boolean boolean82 = strComparableSet26.equals((java.lang.Object) strComparableSet66);
        strComparableSet26.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(constableArray53);
        org.junit.Assert.assertNotNull(constableArray54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strComparableItor81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean12 = strComparableSet1.contains((java.lang.Object) 100);
        boolean boolean13 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean17 = strComparableSet15.contains((java.lang.Object) 100L);
        boolean boolean19 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor20 = strComparableSet15.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet15.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet15.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean26 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean27 = strComparableSet25.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet25.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean32 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.lang.Object[] objArray33 = strComparableSet31.toArray();
        int int34 = strComparableSet31.size();
        boolean boolean35 = strComparableSet25.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str38 = strComparableSet37.toString();
        boolean boolean39 = strComparableSet25.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean41 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.lang.Object obj52 = null;
        boolean boolean53 = strComparableSet48.equals(obj52);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream68 = strComparableSet65.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj71 = strComparableSet70.clone();
        boolean boolean72 = strComparableSet65.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean73 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        boolean boolean74 = strComparableSet48.equals((java.lang.Object) strComparableSet65);
        boolean boolean75 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet65);
        int int76 = strComparableSet65.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet79 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 0, (float) (byte) 10);
        boolean boolean80 = strComparableSet79.isEmpty();
        boolean boolean81 = strComparableSet65.remove((java.lang.Object) strComparableSet79);
        java.lang.String str82 = strComparableSet79.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strComparableItor20);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(strComparableStream68);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[]" + "'", str82, "[]");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.lang.Object obj12 = strComparableSet6.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "[]");
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor34 = strComparableSet26.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean37 = strComparableSet26.remove((java.lang.Object) strComparableSet36);
        int int38 = strComparableSet36.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableItor34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator8 = strComparableSet1.spliterator();
        strComparableSet1.clear();
        java.lang.Object[] objArray10 = strComparableSet1.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean13 = strComparableSet1.equals((java.lang.Object) 100);
        java.lang.Object[] objArray14 = strComparableSet1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(strComparableSpliterator8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '4', (float) (short) 10);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor3 = strComparableSet2.iterator();
        java.lang.Class<?> wildcardClass4 = strComparableItor3.getClass();
        org.junit.Assert.assertNotNull(strComparableItor3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean54 = strComparableSet49.isEmpty();
        boolean boolean55 = strComparableSet13.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean59 = strComparableSet57.contains((java.lang.Object) 100L);
        boolean boolean60 = strComparableSet49.contains((java.lang.Object) strComparableSet57);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor61 = strComparableSet57.iterator();
        java.lang.Object obj62 = strComparableSet57.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strComparableItor61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "[]");
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object[] objArray35 = strComparableSet31.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean39 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream44 = strComparableSet41.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj47 = strComparableSet46.clone();
        boolean boolean48 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean49 = strComparableSet36.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean51 = strComparableSet26.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object[] objArray52 = strComparableSet36.toArray();
        strComparableSet36.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet36.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(strComparableStream44);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertNotNull(strComparableStream54);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray78 = strComparableSet62.toArray();
        boolean boolean79 = strComparableSet10.equals((java.lang.Object) strComparableSet62);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator80 = strComparableSet62.spliterator();
        java.lang.Class<?> wildcardClass81 = strComparableSet62.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (short) 1, (float) (short) 10);
        strComparableSet2.clear();
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean41 = strComparableSet40.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int42 = strComparableSet40.size();
        boolean boolean43 = strComparableSet40.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean47 = strComparableSet45.equals((java.lang.Object) 1);
        boolean boolean48 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream49 = strComparableSet45.stream();
        int int50 = strComparableSet45.size();
        boolean boolean52 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream54 = strComparableSet45.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strComparableStream49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableStream54);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.String str14 = strComparableSet6.toString();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator15 = strComparableSet6.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        boolean boolean20 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet22.equals((java.lang.Object) 1);
        boolean boolean25 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean28 = strComparableSet17.contains((java.lang.Object) 100);
        boolean boolean29 = strComparableSet17.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean33 = strComparableSet31.contains((java.lang.Object) 100L);
        boolean boolean35 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet31.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet31.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator38 = strComparableSet31.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean43 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet41.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.lang.Object[] objArray49 = strComparableSet47.toArray();
        int int50 = strComparableSet47.size();
        boolean boolean51 = strComparableSet41.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str54 = strComparableSet53.toString();
        boolean boolean55 = strComparableSet41.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean56 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean57 = strComparableSet17.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.lang.Object obj68 = null;
        boolean boolean69 = strComparableSet64.equals(obj68);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        boolean boolean74 = strComparableSet71.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet76 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean78 = strComparableSet76.equals((java.lang.Object) 1);
        boolean boolean79 = strComparableSet71.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet76);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet81 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int83 = strComparableSet81.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream84 = strComparableSet81.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet86 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj87 = strComparableSet86.clone();
        boolean boolean88 = strComparableSet81.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet86);
        boolean boolean89 = strComparableSet76.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        boolean boolean90 = strComparableSet64.equals((java.lang.Object) strComparableSet81);
        boolean boolean91 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        int int92 = strComparableSet81.size();
        boolean boolean94 = strComparableSet81.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean95 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet81);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[]" + "'", str14, "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(strComparableSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(strComparableStream84);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100, (float) (byte) 1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean6 = strComparableSet3.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object[] objArray7 = strComparableSet5.toArray();
        java.lang.Object[] objArray8 = strComparableSet5.toArray();
        boolean boolean9 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.lang.Object obj10 = strComparableSet2.clone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "[]");
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean42 = strComparableSet41.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int43 = strComparableSet41.size();
        boolean boolean44 = strComparableSet41.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet46 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean48 = strComparableSet46.equals((java.lang.Object) 1);
        boolean boolean49 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        boolean boolean50 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet46);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean53 = strComparableSet46.contains((java.lang.Object) strComparableSet52);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator54 = strComparableSet52.spliterator();
        boolean boolean55 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.lang.String str56 = strComparableSet6.toString();
        boolean boolean58 = strComparableSet6.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.lang.String str60 = strComparableSet59.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[[]]" + "'", str60, "[[]]");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 10);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        int int23 = strComparableSet13.size();
        java.lang.Object obj24 = strComparableSet13.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100, (float) (byte) 1);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean6 = strComparableSet4.contains((java.lang.Object) 100L);
        boolean boolean8 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor9 = strComparableSet4.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        boolean boolean14 = strComparableSet11.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet16.equals((java.lang.Object) 1);
        boolean boolean19 = strComparableSet11.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream24 = strComparableSet21.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj27 = strComparableSet26.clone();
        boolean boolean28 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean29 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet30 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean37 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet4);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean40 = strComparableSet39.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int41 = strComparableSet39.size();
        boolean boolean42 = strComparableSet39.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean46 = strComparableSet44.equals((java.lang.Object) 1);
        boolean boolean47 = strComparableSet39.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet49.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj55 = strComparableSet54.clone();
        boolean boolean56 = strComparableSet49.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean57 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableSet59.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int61 = strComparableSet59.size();
        boolean boolean62 = strComparableSet59.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean66 = strComparableSet64.equals((java.lang.Object) 1);
        boolean boolean67 = strComparableSet59.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        boolean boolean68 = strComparableSet44.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean71 = strComparableSet64.contains((java.lang.Object) strComparableSet70);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor72 = strComparableSet64.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(3);
        boolean boolean75 = strComparableSet64.remove((java.lang.Object) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator76 = strComparableSet74.spliterator();
        boolean boolean77 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableItor9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strComparableStream24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strComparableItor72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        java.util.LinkedHashSet<java.lang.constant.ConstantDesc> constantDescSet1 = new java.util.LinkedHashSet<java.lang.constant.ConstantDesc>((int) (short) 10);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        // The following exception was thrown during execution in test generation
        try {
            java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement> annotatedElementSet1 = new java.util.LinkedHashSet<java.lang.reflect.AnnotatedElement>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Illegal initial capacity: -1");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor2 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int6 = strComparableSet4.size();
        boolean boolean7 = strComparableSet4.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean11 = strComparableSet9.equals((java.lang.Object) 1);
        boolean boolean12 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean22 = strComparableSet9.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean27 = strComparableSet25.equals((java.lang.Object) 1);
        boolean boolean28 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor29 = strComparableSet14.iterator();
        boolean boolean30 = strComparableSet1.equals((java.lang.Object) strComparableSet14);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj33 = strComparableSet32.clone();
        boolean boolean34 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        boolean boolean39 = strComparableSet36.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet41.equals((java.lang.Object) 1);
        boolean boolean44 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean45 = strComparableSet41.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet41.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        java.lang.Object obj57 = null;
        boolean boolean58 = strComparableSet41.remove(obj57);
        org.junit.Assert.assertNotNull(strComparableItor2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strComparableItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator34 = strComparableSet32.spliterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor36 = strComparableSet32.iterator();
        boolean boolean38 = strComparableSet32.remove((java.lang.Object) 0.0f);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator39 = strComparableSet32.spliterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean54 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray55 = strComparableSet32.toArray();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor56 = strComparableSet32.iterator();
        boolean boolean58 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator34);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(strComparableItor36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNotNull(strComparableItor56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean22 = strComparableSet21.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int23 = strComparableSet21.size();
        boolean boolean24 = strComparableSet21.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean28 = strComparableSet26.equals((java.lang.Object) 1);
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean30 = strComparableSet6.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet26.contains((java.lang.Object) strComparableSet32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] { wildcardClass35, wildcardClass37, wildcardClass39, wildcardClass41, wildcardClass43, wildcardClass45 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = strComparableSet26.toArray(genericDeclarationArray46);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableSet49.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int51 = strComparableSet49.size();
        boolean boolean52 = strComparableSet49.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet54.equals((java.lang.Object) 1);
        boolean boolean57 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        boolean boolean58 = strComparableSet26.contains((java.lang.Object) strComparableSet49);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor59 = strComparableSet49.iterator();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream69 = strComparableSet60.stream();
        boolean boolean70 = strComparableSet49.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator71 = strComparableSet60.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(genericDeclarationArray46);
        org.junit.Assert.assertNotNull(genericDeclarationArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableItor59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strComparableStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator71);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        boolean boolean7 = strComparableSet2.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        boolean boolean9 = strComparableSet8.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean13 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean14 = strComparableSet12.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj15 = strComparableSet12.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean18 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str21 = strComparableSet20.toString();
        boolean boolean23 = strComparableSet20.equals((java.lang.Object) 10L);
        boolean boolean24 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet31.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        boolean boolean40 = strComparableSet37.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean44 = strComparableSet42.equals((java.lang.Object) 1);
        boolean boolean45 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableSet57.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int59 = strComparableSet57.size();
        boolean boolean60 = strComparableSet57.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean64 = strComparableSet62.equals((java.lang.Object) 1);
        boolean boolean65 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean66 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet69 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet69);
        java.lang.Object[] objArray71 = strComparableSet67.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean75 = strComparableSet72.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet74);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet77 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean78 = strComparableSet77.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int79 = strComparableSet77.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream80 = strComparableSet77.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet82 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj83 = strComparableSet82.clone();
        boolean boolean84 = strComparableSet77.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean85 = strComparableSet72.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet82);
        boolean boolean86 = strComparableSet67.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean87 = strComparableSet62.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        java.lang.constant.Constable[] constableArray89 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray90 = strComparableSet62.toArray(constableArray89);
        boolean boolean91 = strComparableSet31.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean92 = strComparableSet31.isEmpty();
        boolean boolean93 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        boolean boolean94 = strComparableSet8.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream95 = strComparableSet8.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(strComparableStream80);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertEquals(obj83.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj83), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj83), "[]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(constableArray89);
        org.junit.Assert.assertNotNull(constableArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strComparableStream95);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        boolean boolean8 = strComparableSet5.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean12 = strComparableSet10.equals((java.lang.Object) 1);
        boolean boolean13 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean14 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        int int15 = strComparableSet5.size();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str18 = strComparableSet17.toString();
        boolean boolean20 = strComparableSet17.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.lang.Object[] objArray25 = strComparableSet21.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet26.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream34 = strComparableSet31.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj37 = strComparableSet36.clone();
        boolean boolean38 = strComparableSet31.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean39 = strComparableSet26.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean40 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        boolean boolean41 = strComparableSet17.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet26);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream56 = strComparableSet53.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj59 = strComparableSet58.clone();
        boolean boolean60 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        boolean boolean61 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableSet63.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int65 = strComparableSet63.size();
        boolean boolean66 = strComparableSet63.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet68 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean70 = strComparableSet68.equals((java.lang.Object) 1);
        boolean boolean71 = strComparableSet63.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        boolean boolean72 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet68);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet73 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean76 = strComparableSet73.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        java.lang.Object[] objArray77 = strComparableSet73.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet78 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet80 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean81 = strComparableSet78.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet80);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet83 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableSet83.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int85 = strComparableSet83.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream86 = strComparableSet83.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj89 = strComparableSet88.clone();
        boolean boolean90 = strComparableSet83.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean91 = strComparableSet78.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet88);
        boolean boolean92 = strComparableSet73.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        boolean boolean93 = strComparableSet68.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.lang.Object[] objArray94 = strComparableSet78.toArray();
        boolean boolean95 = strComparableSet26.equals((java.lang.Object) strComparableSet78);
        boolean boolean96 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet78);
        java.lang.Object obj97 = strComparableSet78.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream98 = strComparableSet78.stream();
        java.lang.Object[] objArray99 = strComparableSet78.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[]" + "'", str18, "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strComparableStream34);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(strComparableStream56);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray77), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray77), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(strComparableStream86);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertEquals(obj89.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj89), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(obj97);
        org.junit.Assert.assertEquals(obj97.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj97), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj97), "[]");
        org.junit.Assert.assertNotNull(strComparableStream98);
        org.junit.Assert.assertNotNull(objArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray99), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray99), "[]");
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0, (float) (short) 1);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj7 = strComparableSet6.clone();
        boolean boolean8 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet6.parallelStream();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertNotNull(strComparableStream10);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean22 = strComparableSet19.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet34 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean35 = strComparableSet34.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int36 = strComparableSet34.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream37 = strComparableSet34.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj40 = strComparableSet39.clone();
        boolean boolean41 = strComparableSet34.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        boolean boolean42 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet34);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean45 = strComparableSet44.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int46 = strComparableSet44.size();
        boolean boolean47 = strComparableSet44.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet49 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet49.equals((java.lang.Object) 1);
        boolean boolean52 = strComparableSet44.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        boolean boolean53 = strComparableSet29.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet49);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet49.contains((java.lang.Object) strComparableSet55);
        boolean boolean57 = strComparableSet19.equals((java.lang.Object) boolean56);
        boolean boolean58 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream59 = strComparableSet16.parallelStream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator60 = strComparableSet16.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(strComparableStream37);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strComparableStream59);
        org.junit.Assert.assertNotNull(strComparableSpliterator60);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet1.equals((java.lang.Object) 1);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor10 = strComparableSet8.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean15 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj16 = strComparableSet13.clone();
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        boolean boolean18 = strComparableSet13.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        boolean boolean20 = strComparableSet19.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean24 = strComparableSet21.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.lang.Object[] objArray25 = strComparableSet21.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator28 = strComparableSet27.spliterator();
        boolean boolean29 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator30 = strComparableSet21.spliterator();
        boolean boolean31 = strComparableSet19.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean32 = strComparableSet8.contains((java.lang.Object) boolean31);
        java.lang.String str33 = strComparableSet8.toString();
        boolean boolean34 = strComparableSet8.isEmpty();
        java.lang.String str35 = strComparableSet8.toString();
        boolean boolean36 = strComparableSet1.remove((java.lang.Object) strComparableSet8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strComparableItor10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[[]]");
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[]" + "'", str33, "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean6 = strComparableSet5.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int7 = strComparableSet5.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream8 = strComparableSet5.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj11 = strComparableSet10.clone();
        boolean boolean12 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean13 = strComparableSet0.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean18 = strComparableSet0.contains((java.lang.Object) strComparableSet16);
        boolean boolean19 = strComparableSet16.isEmpty();
        int int20 = strComparableSet16.size();
        java.lang.Object[] objArray21 = strComparableSet16.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strComparableStream8);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream6 = strComparableSet2.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object obj17 = null;
        boolean boolean18 = strComparableSet13.equals(obj17);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet13.contains((java.lang.Object) 100);
        boolean boolean22 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        int int23 = strComparableSet2.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int24 = strComparableSet22.size();
        boolean boolean25 = strComparableSet22.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean29 = strComparableSet27.equals((java.lang.Object) 1);
        boolean boolean30 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean33 = strComparableSet32.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int34 = strComparableSet32.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream35 = strComparableSet32.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj38 = strComparableSet37.clone();
        boolean boolean39 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        boolean boolean40 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean43 = strComparableSet42.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int44 = strComparableSet42.size();
        boolean boolean45 = strComparableSet42.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet42.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet52.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.Object[] objArray56 = strComparableSet52.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableSet62.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int64 = strComparableSet62.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream65 = strComparableSet62.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj68 = strComparableSet67.clone();
        boolean boolean69 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean70 = strComparableSet57.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet67);
        boolean boolean71 = strComparableSet52.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        boolean boolean72 = strComparableSet47.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet57);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet74 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str75 = strComparableSet74.toString();
        boolean boolean76 = strComparableSet47.equals((java.lang.Object) strComparableSet74);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator77 = strComparableSet74.spliterator();
        boolean boolean78 = strComparableSet11.equals((java.lang.Object) strComparableSet74);
        boolean boolean79 = strComparableSet74.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strComparableStream35);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(strComparableStream65);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet2.toArray();
        java.lang.Object[] objArray5 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean8 = strComparableSet7.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int9 = strComparableSet7.size();
        boolean boolean10 = strComparableSet7.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet12.equals((java.lang.Object) 1);
        boolean boolean15 = strComparableSet7.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet17 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean18 = strComparableSet17.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int19 = strComparableSet17.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream20 = strComparableSet17.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj23 = strComparableSet22.clone();
        boolean boolean24 = strComparableSet17.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet22);
        boolean boolean25 = strComparableSet12.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet17);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        boolean boolean36 = strComparableSet12.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet39 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet39);
        java.lang.Object[] objArray41 = strComparableSet37.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet42.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet44);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream50 = strComparableSet47.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj53 = strComparableSet52.clone();
        boolean boolean54 = strComparableSet47.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean55 = strComparableSet42.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet37.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean57 = strComparableSet32.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        strComparableSet42.clear();
        boolean boolean59 = strComparableSet2.remove((java.lang.Object) strComparableSet42);
        java.lang.Object obj60 = strComparableSet2.clone();
        java.lang.Object obj61 = strComparableSet2.clone();
        strComparableSet2.clear();
        java.lang.Object[] objArray63 = strComparableSet2.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet65 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableSet65.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int67 = strComparableSet65.size();
        boolean boolean68 = strComparableSet65.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean72 = strComparableSet70.equals((java.lang.Object) 1);
        boolean boolean73 = strComparableSet65.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet70.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor75 = strComparableSet70.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor76 = strComparableSet70.iterator();
        boolean boolean77 = strComparableSet70.isEmpty();
        boolean boolean78 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet70);
        boolean boolean79 = strComparableSet2.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(strComparableStream20);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(strComparableStream50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertEquals(obj60.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj60), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj60), "[]");
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "[]");
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(strComparableItor75);
        org.junit.Assert.assertNotNull(strComparableItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.lang.String str25 = strComparableSet10.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet52.contains((java.lang.Object) strComparableSet58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray72 = new java.lang.reflect.GenericDeclaration[] { wildcardClass61, wildcardClass63, wildcardClass65, wildcardClass67, wildcardClass69, wildcardClass71 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray73 = strComparableSet52.toArray(genericDeclarationArray72);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet52.parallelStream();
        java.lang.String str75 = strComparableSet52.toString();
        boolean boolean76 = strComparableSet10.contains((java.lang.Object) strComparableSet52);
        java.lang.String str77 = strComparableSet10.toString();
        java.lang.Object obj78 = null;
        boolean boolean79 = strComparableSet10.contains(obj78);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(genericDeclarationArray72);
        org.junit.Assert.assertNotNull(genericDeclarationArray73);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[]" + "'", str77, "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream4 = strComparableSet1.stream();
        boolean boolean6 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean8 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableSet10.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int12 = strComparableSet10.size();
        boolean boolean13 = strComparableSet10.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean17 = strComparableSet15.equals((java.lang.Object) 1);
        boolean boolean18 = strComparableSet10.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean21 = strComparableSet20.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int22 = strComparableSet20.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream23 = strComparableSet20.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet25 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj26 = strComparableSet25.clone();
        boolean boolean27 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet25);
        boolean boolean28 = strComparableSet15.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean30 = strComparableSet1.remove((java.lang.Object) strComparableSet20);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet1.stream();
        boolean boolean33 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strComparableStream4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(strComparableStream23);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator8 = strComparableSet1.spliterator();
        strComparableSet1.clear();
        java.lang.Object[] objArray10 = strComparableSet1.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean13 = strComparableSet1.equals((java.lang.Object) 100);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet1.stream();
        int int15 = strComparableSet1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(strComparableSpliterator8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        boolean boolean10 = strComparableSet6.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean14 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.lang.Object[] objArray15 = strComparableSet13.toArray();
        int int16 = strComparableSet13.size();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        boolean boolean21 = strComparableSet18.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean25 = strComparableSet23.equals((java.lang.Object) 1);
        boolean boolean26 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream31 = strComparableSet28.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj34 = strComparableSet33.clone();
        boolean boolean35 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        boolean boolean36 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean39 = strComparableSet38.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int40 = strComparableSet38.size();
        boolean boolean41 = strComparableSet38.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean45 = strComparableSet43.equals((java.lang.Object) 1);
        boolean boolean46 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        boolean boolean47 = strComparableSet23.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean51 = strComparableSet48.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        java.lang.Object[] objArray52 = strComparableSet48.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean56 = strComparableSet53.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet55);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean59 = strComparableSet58.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int60 = strComparableSet58.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream61 = strComparableSet58.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet63 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj64 = strComparableSet63.clone();
        boolean boolean65 = strComparableSet58.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean66 = strComparableSet53.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet63);
        boolean boolean67 = strComparableSet48.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        boolean boolean68 = strComparableSet43.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        strComparableSet53.clear();
        boolean boolean70 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet53);
        java.lang.Object obj71 = strComparableSet13.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream72 = strComparableSet13.parallelStream();
        boolean boolean73 = strComparableSet13.isEmpty();
        boolean boolean74 = strComparableSet6.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(strComparableStream31);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(strComparableStream61);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "[]");
        org.junit.Assert.assertNotNull(strComparableStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream9 = strComparableSet7.parallelStream();
        java.lang.Object[] objArray10 = strComparableSet7.toArray();
        java.lang.Object obj11 = strComparableSet7.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strComparableStream9);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "[]");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean69 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor70 = strComparableSet66.iterator();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strComparableItor70);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator1 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet3 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean4 = strComparableSet3.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int5 = strComparableSet3.size();
        boolean boolean6 = strComparableSet3.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet8.equals((java.lang.Object) 1);
        boolean boolean11 = strComparableSet3.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet8);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean14 = strComparableSet13.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int15 = strComparableSet13.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream16 = strComparableSet13.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj19 = strComparableSet18.clone();
        boolean boolean20 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        boolean boolean21 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream36 = strComparableSet33.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj39 = strComparableSet38.clone();
        boolean boolean40 = strComparableSet33.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        boolean boolean41 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        boolean boolean46 = strComparableSet43.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean50 = strComparableSet48.equals((java.lang.Object) 1);
        boolean boolean51 = strComparableSet43.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean52 = strComparableSet28.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet54 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean55 = strComparableSet48.contains((java.lang.Object) strComparableSet54);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator56 = strComparableSet54.spliterator();
        boolean boolean57 = strComparableSet8.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet54);
        java.lang.String str58 = strComparableSet8.toString();
        boolean boolean59 = strComparableSet0.contains((java.lang.Object) strComparableSet8);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean63 = strComparableSet60.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.Object[] objArray64 = strComparableSet60.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet66 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet66.spliterator();
        boolean boolean68 = strComparableSet60.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        boolean boolean69 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet66);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet71 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean72 = strComparableSet71.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int73 = strComparableSet71.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet71.parallelStream();
        java.lang.Object[] objArray75 = strComparableSet71.toArray();
        boolean boolean76 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet71);
        int int77 = strComparableSet8.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream78 = strComparableSet8.parallelStream();
        org.junit.Assert.assertNotNull(strComparableSpliterator1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(strComparableStream16);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(strComparableStream36);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(strComparableStream78);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet0 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean3 = strComparableSet0.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet2);
        java.lang.Object[] objArray4 = strComparableSet0.toArray();
        java.lang.Object[] objArray5 = strComparableSet0.toArray();
        int int6 = strComparableSet0.size();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator7 = strComparableSet0.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean10 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int11 = strComparableSet9.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream12 = strComparableSet9.parallelStream();
        boolean boolean14 = strComparableSet9.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream15 = strComparableSet9.stream();
        java.lang.Object obj16 = strComparableSet9.clone();
        boolean boolean17 = strComparableSet0.equals(obj16);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean21 = strComparableSet19.contains((java.lang.Object) 100L);
        boolean boolean23 = strComparableSet19.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor24 = strComparableSet19.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet26 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean27 = strComparableSet26.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int28 = strComparableSet26.size();
        boolean boolean29 = strComparableSet26.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean33 = strComparableSet31.equals((java.lang.Object) 1);
        boolean boolean34 = strComparableSet26.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet31);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int38 = strComparableSet36.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream39 = strComparableSet36.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet41 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj42 = strComparableSet41.clone();
        boolean boolean43 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet41);
        boolean boolean44 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean49 = strComparableSet47.equals((java.lang.Object) 1);
        boolean boolean50 = strComparableSet36.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet47);
        boolean boolean51 = strComparableSet19.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        boolean boolean53 = strComparableSet0.remove((java.lang.Object) strComparableSet19);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet56 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean57 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean58 = strComparableSet56.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj59 = strComparableSet56.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet61 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet61);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str65 = strComparableSet64.toString();
        boolean boolean67 = strComparableSet64.equals((java.lang.Object) 10L);
        boolean boolean68 = strComparableSet56.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet70 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean71 = strComparableSet70.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int72 = strComparableSet70.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream73 = strComparableSet70.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet75 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj76 = strComparableSet75.clone();
        boolean boolean77 = strComparableSet70.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet75);
        boolean boolean78 = strComparableSet64.contains((java.lang.Object) strComparableSet75);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator79 = strComparableSet64.spliterator();
        java.lang.Object obj80 = strComparableSet64.clone();
        boolean boolean81 = strComparableSet19.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strComparableSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strComparableStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strComparableStream15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "[hi!, []]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "[hi!, []]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "[hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strComparableItor24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(strComparableStream39);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[]" + "'", str65, "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(strComparableStream73);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str2 = strComparableSet1.toString();
        boolean boolean4 = strComparableSet1.equals((java.lang.Object) 10L);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean13 = strComparableSet10.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean16 = strComparableSet15.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int17 = strComparableSet15.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream18 = strComparableSet15.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj21 = strComparableSet20.clone();
        boolean boolean22 = strComparableSet15.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean23 = strComparableSet10.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        boolean boolean24 = strComparableSet5.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        boolean boolean25 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator28 = strComparableSet27.spliterator();
        boolean boolean29 = strComparableSet1.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet27);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet31 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableSet31.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int33 = strComparableSet31.size();
        boolean boolean34 = strComparableSet31.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean38 = strComparableSet36.equals((java.lang.Object) 1);
        boolean boolean39 = strComparableSet31.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.lang.Object obj40 = null;
        boolean boolean41 = strComparableSet36.equals(obj40);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean44 = strComparableSet36.contains((java.lang.Object) 100);
        boolean boolean45 = strComparableSet27.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor46 = strComparableSet36.iterator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(strComparableStream18);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strComparableItor46);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        boolean boolean19 = strComparableSet16.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean23 = strComparableSet21.equals((java.lang.Object) 1);
        boolean boolean24 = strComparableSet16.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream25 = strComparableSet21.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet57 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet59 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet57.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet59);
        java.lang.Object[] objArray61 = strComparableSet57.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet62 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet64 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean65 = strComparableSet62.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet64);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet67 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableSet67.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int69 = strComparableSet67.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream70 = strComparableSet67.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet72 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj73 = strComparableSet72.clone();
        boolean boolean74 = strComparableSet67.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean75 = strComparableSet62.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet72);
        boolean boolean76 = strComparableSet57.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        boolean boolean77 = strComparableSet52.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet62);
        java.lang.constant.Constable[] constableArray79 = new java.lang.constant.Constable[] { 100L };
        java.lang.constant.Constable[] constableArray80 = strComparableSet52.toArray(constableArray79);
        boolean boolean81 = strComparableSet21.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean82 = strComparableSet21.isEmpty();
        boolean boolean83 = strComparableSet2.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator84 = strComparableSet21.spliterator();
        java.lang.Object[] objArray85 = strComparableSet21.toArray();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet88 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean89 = strComparableSet88.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean90 = strComparableSet88.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj91 = strComparableSet88.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet93 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean94 = strComparableSet88.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet93);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator95 = strComparableSet93.spliterator();
        boolean boolean96 = strComparableSet21.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet93);
        int int97 = strComparableSet21.size();
        java.lang.Object[] objArray98 = strComparableSet21.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strComparableStream25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strComparableStream70);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(constableArray79);
        org.junit.Assert.assertNotNull(constableArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strComparableSpliterator84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(obj91);
        org.junit.Assert.assertEquals(obj91.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj91), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj91), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(objArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray98), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray98), "[]");
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableSet8.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int10 = strComparableSet8.size();
        boolean boolean11 = strComparableSet8.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean15 = strComparableSet13.equals((java.lang.Object) 1);
        boolean boolean16 = strComparableSet8.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean19 = strComparableSet18.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int20 = strComparableSet18.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet18.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj24 = strComparableSet23.clone();
        boolean boolean25 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        boolean boolean26 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet18.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet18);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        boolean boolean38 = strComparableSet35.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean42 = strComparableSet40.equals((java.lang.Object) 1);
        boolean boolean43 = strComparableSet35.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet45 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean46 = strComparableSet45.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int47 = strComparableSet45.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream48 = strComparableSet45.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet50 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj51 = strComparableSet50.clone();
        boolean boolean52 = strComparableSet45.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet50);
        boolean boolean53 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet45);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet55 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean56 = strComparableSet55.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int57 = strComparableSet55.size();
        boolean boolean58 = strComparableSet55.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet60 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean62 = strComparableSet60.equals((java.lang.Object) 1);
        boolean boolean63 = strComparableSet55.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.lang.Object obj64 = null;
        boolean boolean65 = strComparableSet60.equals(obj64);
        boolean boolean66 = strComparableSet40.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet60);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator67 = strComparableSet40.spliterator();
        int int68 = strComparableSet40.size();
        boolean boolean69 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        java.lang.Class<?> wildcardClass70 = strComparableSet40.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(strComparableStream48);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.lang.Object[] objArray6 = strComparableSet2.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet8 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator9 = strComparableSet8.spliterator();
        boolean boolean10 = strComparableSet2.equals((java.lang.Object) strComparableSpliterator9);
        strComparableSet2.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[[]]");
        org.junit.Assert.assertNotNull(strComparableSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream21 = strComparableSet20.stream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.remove((java.lang.Object) strComparableSet28);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet36 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean38 = strComparableSet36.add((java.lang.Comparable<java.lang.String>) "[]");
        strComparableSet36.clear();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean43 = strComparableSet40.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.lang.Object[] objArray44 = strComparableSet42.toArray();
        int int45 = strComparableSet42.size();
        boolean boolean46 = strComparableSet36.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str49 = strComparableSet48.toString();
        boolean boolean50 = strComparableSet36.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet20.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream52 = strComparableSet36.stream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet36);
        boolean boolean55 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.lang.String str56 = strComparableSet53.toString();
        strComparableSet53.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strComparableStream21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strComparableStream52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[[[]]]" + "'", str56, "[[[]]]");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet5 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet5.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.lang.Object[] objArray9 = strComparableSet5.toArray();
        java.lang.Object[] objArray10 = strComparableSet5.toArray();
        int int11 = strComparableSet5.size();
        boolean boolean12 = strComparableSet1.containsAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet5);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet15 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean16 = strComparableSet13.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet15);
        java.lang.Object[] objArray17 = strComparableSet13.toArray();
        java.lang.Object[] objArray18 = strComparableSet13.toArray();
        int int19 = strComparableSet13.size();
        boolean boolean20 = strComparableSet1.addAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet13);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor21 = strComparableSet13.iterator();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator22 = strComparableSet13.spliterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet24 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean25 = strComparableSet24.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int26 = strComparableSet24.size();
        boolean boolean27 = strComparableSet24.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet29 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean31 = strComparableSet29.equals((java.lang.Object) 1);
        boolean boolean32 = strComparableSet24.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet29);
        boolean boolean33 = strComparableSet29.isEmpty();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet35 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableSet35.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int37 = strComparableSet35.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream38 = strComparableSet35.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj41 = strComparableSet40.clone();
        boolean boolean42 = strComparableSet35.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean43 = strComparableSet29.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        boolean boolean44 = strComparableSet13.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet40);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strComparableItor21);
        org.junit.Assert.assertNotNull(strComparableSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(strComparableStream38);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet2 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean3 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean4 = strComparableSet2.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj5 = strComparableSet2.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet7 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet7);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet10 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str11 = strComparableSet10.toString();
        boolean boolean13 = strComparableSet10.equals((java.lang.Object) 10L);
        boolean boolean14 = strComparableSet2.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet10);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean17 = strComparableSet16.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int18 = strComparableSet16.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream19 = strComparableSet16.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet21 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj22 = strComparableSet21.clone();
        boolean boolean23 = strComparableSet16.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet21);
        boolean boolean24 = strComparableSet10.contains((java.lang.Object) strComparableSet21);
        java.lang.String str25 = strComparableSet10.toString();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean28 = strComparableSet27.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int29 = strComparableSet27.size();
        boolean boolean30 = strComparableSet27.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet32 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean34 = strComparableSet32.equals((java.lang.Object) 1);
        boolean boolean35 = strComparableSet27.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet32);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet37 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableSet37.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int39 = strComparableSet37.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream40 = strComparableSet37.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet42 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj43 = strComparableSet42.clone();
        boolean boolean44 = strComparableSet37.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet42);
        boolean boolean45 = strComparableSet32.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet37);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet47 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean48 = strComparableSet47.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int49 = strComparableSet47.size();
        boolean boolean50 = strComparableSet47.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet52 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean54 = strComparableSet52.equals((java.lang.Object) 1);
        boolean boolean55 = strComparableSet47.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        boolean boolean56 = strComparableSet32.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet52);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean59 = strComparableSet52.contains((java.lang.Object) strComparableSet58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray72 = new java.lang.reflect.GenericDeclaration[] { wildcardClass61, wildcardClass63, wildcardClass65, wildcardClass67, wildcardClass69, wildcardClass71 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray73 = strComparableSet52.toArray(genericDeclarationArray72);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream74 = strComparableSet52.parallelStream();
        java.lang.String str75 = strComparableSet52.toString();
        boolean boolean76 = strComparableSet10.contains((java.lang.Object) strComparableSet52);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream77 = strComparableSet52.stream();
        java.lang.Class<?> wildcardClass78 = strComparableSet52.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(strComparableStream19);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[]" + "'", str25, "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(strComparableStream40);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(genericDeclarationArray72);
        org.junit.Assert.assertNotNull(genericDeclarationArray73);
        org.junit.Assert.assertNotNull(strComparableStream74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[]" + "'", str75, "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(strComparableStream77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 100);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet4 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean5 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean6 = strComparableSet4.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj7 = strComparableSet4.clone();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet9 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean10 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet9);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.String str13 = strComparableSet12.toString();
        boolean boolean15 = strComparableSet12.equals((java.lang.Object) 10L);
        boolean boolean16 = strComparableSet4.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet12);
        boolean boolean17 = strComparableSet1.remove((java.lang.Object) strComparableSet12);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet18 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet20 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean21 = strComparableSet18.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet20);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet23 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean24 = strComparableSet23.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int25 = strComparableSet23.size();
        boolean boolean26 = strComparableSet23.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean30 = strComparableSet28.equals((java.lang.Object) 1);
        boolean boolean31 = strComparableSet23.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet28);
        boolean boolean32 = strComparableSet20.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet23);
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator33 = strComparableSet20.spliterator();
        java.lang.Object obj34 = strComparableSet20.clone();
        java.lang.String[] strArray39 = new java.lang.String[] { "[]", "hi!", "hi!", "hi!" };
        java.lang.String[] strArray40 = strComparableSet20.toArray(strArray39);
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor41 = strComparableSet20.iterator();
        boolean boolean42 = strComparableSet12.equals((java.lang.Object) strComparableSet20);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet44 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) (byte) 1);
        boolean boolean45 = strComparableSet12.remove((java.lang.Object) strComparableSet44);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strComparableSpliterator33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strComparableItor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean3 = strComparableSet1.contains((java.lang.Object) 100L);
        boolean boolean5 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "[]");
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor6 = strComparableSet1.iterator();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream7 = strComparableSet1.stream();
        java.util.Spliterator<java.lang.Comparable<java.lang.String>> strComparableSpliterator8 = strComparableSet1.spliterator();
        strComparableSet1.clear();
        java.lang.Object[] objArray10 = strComparableSet1.toArray();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet12 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean13 = strComparableSet1.equals((java.lang.Object) 100);
        strComparableSet1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strComparableItor6);
        org.junit.Assert.assertNotNull(strComparableStream7);
        org.junit.Assert.assertNotNull(strComparableSpliterator8);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream10 = strComparableSet6.stream();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor11 = strComparableSet6.iterator();
        java.util.Iterator<java.lang.Comparable<java.lang.String>> strComparableItor12 = strComparableSet6.iterator();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet14 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean15 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int16 = strComparableSet14.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream17 = strComparableSet14.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet19 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj20 = strComparableSet19.clone();
        boolean boolean21 = strComparableSet14.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet19);
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream22 = strComparableSet14.parallelStream();
        boolean boolean24 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[[]]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet27 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((int) '#', (float) 2);
        boolean boolean28 = strComparableSet14.contains((java.lang.Object) strComparableSet27);
        boolean boolean29 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet14);
        boolean boolean31 = strComparableSet14.add((java.lang.Comparable<java.lang.String>) "[hi!, []]");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableSet33.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int35 = strComparableSet33.size();
        boolean boolean36 = strComparableSet33.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet38 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean40 = strComparableSet38.equals((java.lang.Object) 1);
        boolean boolean41 = strComparableSet33.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet43 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean44 = strComparableSet43.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int45 = strComparableSet43.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream46 = strComparableSet43.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet48 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj49 = strComparableSet48.clone();
        boolean boolean50 = strComparableSet43.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet48);
        boolean boolean51 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet43);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet53 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean54 = strComparableSet53.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int55 = strComparableSet53.size();
        boolean boolean56 = strComparableSet53.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet58 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean60 = strComparableSet58.equals((java.lang.Object) 1);
        boolean boolean61 = strComparableSet53.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        java.lang.Object obj62 = null;
        boolean boolean63 = strComparableSet58.equals(obj62);
        boolean boolean64 = strComparableSet38.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet58);
        strComparableSet38.clear();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream66 = strComparableSet38.stream();
        int int67 = strComparableSet38.size();
        boolean boolean68 = strComparableSet14.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet38);
        java.lang.Object obj69 = strComparableSet38.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strComparableStream10);
        org.junit.Assert.assertNotNull(strComparableItor11);
        org.junit.Assert.assertNotNull(strComparableItor12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strComparableStream17);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strComparableStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(strComparableStream46);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strComparableStream66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "[]");
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>> strComparableIterableSet2 = new java.util.LinkedHashSet<java.lang.Iterable<java.lang.Comparable<java.lang.String>>>(3, (float) 10);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet1 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean2 = strComparableSet1.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int3 = strComparableSet1.size();
        boolean boolean4 = strComparableSet1.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet6 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean8 = strComparableSet6.equals((java.lang.Object) 1);
        boolean boolean9 = strComparableSet1.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet6);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet11 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean12 = strComparableSet11.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int13 = strComparableSet11.size();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream14 = strComparableSet11.parallelStream();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet16 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        java.lang.Object obj17 = strComparableSet16.clone();
        boolean boolean18 = strComparableSet11.retainAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet16);
        boolean boolean19 = strComparableSet6.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet11);
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet22 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean24 = strComparableSet22.add((java.lang.Comparable<java.lang.String>) "[]");
        java.lang.Object obj25 = strComparableSet22.clone();
        java.util.stream.Stream<java.lang.Comparable<java.lang.String>> strComparableStream26 = strComparableSet22.parallelStream();
        java.util.HashSet<java.lang.Comparable<java.lang.String>> strComparableSet28 = new java.util.HashSet<java.lang.Comparable<java.lang.String>>();
        boolean boolean29 = strComparableSet28.add((java.lang.Comparable<java.lang.String>) "hi!");
        int int30 = strComparableSet28.size();
        boolean boolean31 = strComparableSet28.isEmpty();
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet33 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(0);
        boolean boolean35 = strComparableSet33.equals((java.lang.Object) 1);
        boolean boolean36 = strComparableSet28.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        java.lang.Object obj37 = null;
        boolean boolean38 = strComparableSet33.equals(obj37);
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet40 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>(100);
        boolean boolean41 = strComparableSet33.contains((java.lang.Object) 100);
        boolean boolean42 = strComparableSet22.removeAll((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableSet33);
        int int43 = strComparableSet33.size();
        boolean boolean44 = strComparableSet6.equals((java.lang.Object) strComparableSet33);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strComparableStream14);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "[[]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "[[]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "[[]]");
        org.junit.Assert.assertNotNull(strComparableStream26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList6 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean7 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean8 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean9 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean10 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[]");
        boolean boolean11 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[[]]");
        boolean boolean12 = strComparableList6.add((java.lang.Comparable<java.lang.String>) "[null]");
        java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>> strComparableSet13 = new java.util.LinkedHashSet<java.lang.Comparable<java.lang.String>>((java.util.Collection<java.lang.Comparable<java.lang.String>>) strComparableList6);
        java.lang.Object[] objArray14 = strComparableSet13.toArray();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[[[]], , [], [null]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[[[]], , [], [null]]");
    }
}

